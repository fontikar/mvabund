[{"path":"https://fontikar.github.io/mvabund/articles/mvabund.html","id":"first-things-first","dir":"Articles","previous_headings":"","what":"First things first","title":"mvabund","text":"Let’s load package get hands Tasmania data set look effects disturbance treatment invertebrate abundances. Note Tasmania data set list object. look copepods data frame walk-. copepods data frame can accessed using Tasmania$copepods attach() function make contents Tasmania searchable.","code":"library(mvabund)  data(Tasmania)  attach(Tasmania)  str(copepods)  #>  int [1:16, 1:12] 43 63 124 105 4 5 91 57 7 6 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:16] \"B1D1\" \"B1D2\" \"B1U1\" \"B1U2\" ... #>   ..$ : chr [1:12] \"Ameira\" \"Adopsyllus\" \"Ectinosoma\" \"Ectinosomat\" ..."},{"path":"https://fontikar.github.io/mvabund/articles/mvabund.html","id":"visualise-the-multivariate-data","dir":"Articles","previous_headings":"","what":"Visualise the multivariate data","title":"mvabund","text":"first need turn data mvabund object functions package work data Now lets take look abundance species across treatment sites (Disturbed vs. Undisturbed). Observations collected using spatially blocked design researchers took four samples block (2 per treatment). can set colour (col) points represent four sampling blocks","code":"copepod_abund <- mvabund(copepods) plot(copepod_abund~treatment, col = block) #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  PIPING TO 2nd MVFACTOR"},{"path":"https://fontikar.github.io/mvabund/articles/mvabund.html","id":"fitting-predictive-models","dir":"Articles","previous_headings":"","what":"Fitting Predictive Models","title":"mvabund","text":"hypothesised abundance Ameira Ectinosoma reduced Disturbed sites, whereas abundance Mictyricola may increased. Lets test hypothesis using manyglm() function. function fits generalised linear model species. specified family =  \"negative.binomial\" count data tends follow negative binomial distribution. distributions available ! See ?manyglm()","code":"cope.nb <- manyglm(copepods ~ treatment*block, family =  \"negative.binomial\")"},{"path":"https://fontikar.github.io/mvabund/articles/mvabund.html","id":"checking-model-assumptions","dir":"Articles","previous_headings":"","what":"Checking Model Assumptions","title":"mvabund","text":"look model output, check model residuals. want see little pattern implies choice negative binomial distribution appropriate.  Now, lets proceed check mean-variance relationship. want see mean-variance relationship data adheres negative binomial distribution tends quadratic rather linear. meanvar.plot() function plots sample variance sample mean species within factor level (tr.block). quadratic relationship seems appropriate sample mean variance.","code":"plot(cope.nb) meanvar.plot(copepods~tr.block, col = treatment) #> START SECTION 2  #> Plotting if overlay is TRUE #> using grouping variable tr.block 46 mean values were 0 and could  #>                                      not be included in the log-plot #> using grouping variable tr.block 49 variance values were 0 and could not  #>                                      be included in the log-plot #> FINISHED SECTION 2"},{"path":"https://fontikar.github.io/mvabund/articles/mvabund.html","id":"hypothesis-testing","dir":"Articles","previous_headings":"","what":"Hypothesis Testing","title":"mvabund","text":"test whether treatment block effect abundances copepods can use anova() function. function returns Analysis Deviance table tests significance model term. Setting p.uni = \"adjusted\" allows p-values adjusted multiple testing different species. can see significant effect treatment factor meaning treatment significant multiplicative effect mean abundance. interaction blocks treatments significant, meaning multiplicative treatment effect consistent across blocks. specific hypothesis mind want test, instead interested model terms statistically significant, summary() function come handy. However results aren’t quite trustworthy anova(). reason re-samples taken alternative hypothesis summary(), greater chance fitted values zero, especially rarer taxa (e.g. treatment combination taxon never present). Abundances don’t re-sample well predicted mean zero. obtaining predicted values model goal, may use predict() function. Note type = response produce values scale response variable (.e. counts)","code":"anova(cope.nb, p.uni = \"adjusted\") #> Time elapsed: 0 hr 0 min 9 sec #> Analysis of Deviance Table #>  #> Model: copepods ~ treatment * block #>  #> Multivariate test: #>                 Res.Df Df.diff    Dev Pr(>Dev)     #> (Intercept)         15                             #> treatment           14       1  32.52    0.056 .   #> block               11       3 151.87    0.001 *** #> treatment:block      8       3  37.41    0.083 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Univariate Tests: #>                 Ameira          Adopsyllus          Ectinosoma          #>                    Dev Pr(>Dev)        Dev Pr(>Dev)        Dev Pr(>Dev) #> (Intercept)                                                             #> treatment        6.257    0.166      0.032    0.972      7.026    0.151 #> block           12.615    0.154     17.691    0.049     15.361    0.069 #> treatment:block  6.349    0.498      1.295    0.899      0.836    0.902 #>                 Ectinosomat          Haloschizo          Lepta.A          #>                         Dev Pr(>Dev)        Dev Pr(>Dev)     Dev Pr(>Dev) #> (Intercept)                                                               #> treatment             0.366    0.952      1.497    0.830   0.281    0.952 #> block                 10.92    0.179      3.742    0.269  20.756    0.015 #> treatment:block       1.122    0.902          0    0.902  13.072    0.179 #>                 Lepta.B          Lepta.C          Mictyricola          #>                     Dev Pr(>Dev)     Dev Pr(>Dev)         Dev Pr(>Dev) #> (Intercept)                                                            #> treatment         0.575    0.952   2.141    0.761       7.093    0.151 #> block               8.8    0.179  17.419    0.049      11.415    0.179 #> treatment:block   7.402    0.436    0.34    0.902       5.268    0.498 #>                 Parevansula           Quin          Rhizothrix          #>                         Dev Pr(>Dev)   Dev Pr(>Dev)        Dev Pr(>Dev) #> (Intercept)                                                             #> treatment                 0    0.988 5.385    0.208      1.869    0.761 #> block                   6.1    0.179  9.44    0.179     17.613    0.049 #> treatment:block       1.726    0.872     0    0.902          0    0.902 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #> P-value calculated using 999 iterations via PIT-trap resampling. summary(cope.nb)  #>  #> Test statistics: #>                             wald value Pr(>wald)     #> (Intercept)                     18.493     0.001 *** #> treatmentUndisturbed             3.330     0.240     #> block2                           4.710     0.038 *   #> block3                           6.650     0.001 *** #> block4                           3.435     0.144     #> treatmentUndisturbed:block2      2.747     0.259     #> treatmentUndisturbed:block3      1.615     0.443     #> treatmentUndisturbed:block4      4.262     0.050 *   #> ---  #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Test statistic:  14.81, p-value: 0.004  #> Arguments: #>  Test statistics calculated assuming response assumed to be uncorrelated  #>  P-value calculated using 999 resampling iterations via pit.trap resampling (to account for correlation in testing). predict(cope.nb, type = \"response\")  #>      Ameira   Adopsyllus   Ectinosoma Ectinosomat   Haloschizo Lepta.A #> B1D1   53.0 3.678795e-07 3.678794e-07         8.0 3.678794e-07    63.5 #> B1D2   53.0 3.678795e-07 3.678794e-07         8.0 3.678794e-07    63.5 #> B1U1  114.5 3.678794e-07 1.000000e+00         7.0 1.000000e+00   134.0 #> B1U2  114.5 3.678794e-07 1.000000e+00         7.0 1.000000e+00   134.0 #> B2D1    4.5 3.678794e-07 3.678794e-07         9.0 3.678794e-07    31.0 #> B2D2    4.5 3.678794e-07 3.678794e-07         9.0 3.678794e-07    31.0 #> B2U1   74.0 3.678794e-07 3.678794e-07         4.5 3.678794e-07    51.5 #> B2U2   74.0 3.678794e-07 3.678794e-07         4.5 3.678794e-07    51.5 #> B3D1    6.5 3.678794e-07 3.678794e-07         2.5 3.678794e-07     2.0 #> B3D2    6.5 3.678794e-07 3.678794e-07         2.5 3.678794e-07     2.0 #> B3U1   35.0 5.000000e-01 2.500000e+00         2.5 3.678794e-07     1.5 #> B3U2   35.0 5.000000e-01 2.500000e+00         2.5 3.678794e-07     1.5 #> B4D1   37.0 2.500000e+00 5.000000e-01         1.0 3.678794e-07    38.0 #> B4D2   37.0 2.500000e+00 5.000000e-01         1.0 3.678794e-07    38.0 #> B4U1  119.0 2.500000e+00 6.500000e+00         1.5 3.678794e-07     4.0 #> B4U2  119.0 2.500000e+00 6.500000e+00         1.5 3.678794e-07     4.0 #>           Lepta.B      Lepta.C  Mictyricola  Parevansula         Quin #> B1D1 6.000000e+00 3.678794e-07 3.678795e-07 3.678794e-07 3.678794e-07 #> B1D2 6.000000e+00 3.678794e-07 3.678795e-07 3.678794e-07 3.678794e-07 #> B1U1 3.678794e-07 3.678794e-07 3.678794e-07 5.000000e-01 2.500000e+00 #> B1U2 3.678794e-07 3.678794e-07 3.678794e-07 5.000000e-01 2.500000e+00 #> B2D1 1.500000e+00 3.678794e-07 5.500000e+00 1.000000e+00 3.678794e-07 #> B2D2 1.500000e+00 3.678794e-07 5.500000e+00 1.000000e+00 3.678794e-07 #> B2U1 3.500000e+00 3.678794e-07 3.678794e-07 5.000000e-01 3.678794e-07 #> B2U2 3.500000e+00 3.678794e-07 3.678794e-07 5.000000e-01 3.678794e-07 #> B3D1 3.678794e-07 9.500000e+01 5.000000e-01 3.678794e-07 3.678794e-07 #> B3D2 3.678794e-07 9.500000e+01 5.000000e-01 3.678794e-07 3.678794e-07 #> B3U1 3.678794e-07 5.000000e+00 5.000000e-01 3.678794e-07 3.678794e-07 #> B3U2 3.678794e-07 5.000000e+00 5.000000e-01 3.678794e-07 3.678794e-07 #> B4D1 5.000000e-01 2.000000e+00 4.000000e+00 3.678794e-07 3.678794e-07 #> B4D2 5.000000e-01 2.000000e+00 4.000000e+00 3.678794e-07 3.678794e-07 #> B4U1 3.678794e-07 3.678794e-07 3.678794e-07 3.678794e-07 1.000000e+00 #> B4U2 3.678794e-07 3.678794e-07 3.678794e-07 3.678794e-07 1.000000e+00 #>        Rhizothrix #> B1D1 5.000000e-01 #> B1D2 5.000000e-01 #> B1U1 6.000000e+00 #> B1U2 6.000000e+00 #> B2D1 3.678794e-07 #> B2D2 3.678794e-07 #> B2U1 3.678794e-07 #> B2U2 3.678794e-07 #> B3D1 3.678794e-07 #> B3D2 3.678794e-07 #> B3U1 3.678794e-07 #> B3U2 3.678794e-07 #> B4D1 3.678794e-07 #> B4D2 3.678794e-07 #> B4U1 3.678794e-07 #> B4U2 3.678794e-07"},{"path":"https://fontikar.github.io/mvabund/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yi Wang. Author. Ulrike Naumann. Author. Dirk Eddelbuettel. Author. John Wilshire. Author. David Warton. Author, maintainer. Julian Byrnes. Contributor. Ralph dos Santos Silva. Contributor, copyright holder. Jenni Niku. Contributor. Ian Renner. Contributor. Stephen Wright. Contributor.","code":""},{"path":"https://fontikar.github.io/mvabund/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang Y, Naumann U, Eddelbuettel D, Wilshire J, Warton D (2022). mvabund: Statistical Methods Analysing Multivariate Abundance Data. R package version 4.2.2, https://fontikar.github.io/mvabund/.","code":"@Manual{,   title = {mvabund: Statistical Methods for Analysing Multivariate Abundance Data},   author = {Yi Wang and Ulrike Naumann and Dirk Eddelbuettel and John Wilshire and David Warton},   year = {2022},   note = {R package version 4.2.2},   url = {https://fontikar.github.io/mvabund/}, }"},{"path":"https://fontikar.github.io/mvabund/index.html","id":"mvabund-","dir":"","previous_headings":"","what":"Statistical Methods for Analysing Multivariate Abundance Data","title":"Statistical Methods for Analysing Multivariate Abundance Data","text":"goal mvabund provide tools model-based approach analysis multivariate abundance data ecology (Yi Wang et al. 2011). Abundance measures include counts, presence/absence data, oridinal biomass data. package includes functions visualising data, fitting predictive models, checking model assumptions, well testing hypotheses community–environment association.","code":""},{"path":"https://fontikar.github.io/mvabund/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Statistical Methods for Analysing Multivariate Abundance Data","text":"mvabund available CRAN can installed directly R: Alternatively, can install development version mvabund GitHub :","code":"install.packages(\"mvabund\")  library(mvabund) # install.packages(\"remotes\") remotes::install_github(\"aliceyiwang/mvabund\")  library(mvabund)"},{"path":"https://fontikar.github.io/mvabund/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Statistical Methods for Analysing Multivariate Abundance Data","text":"highly recommend taking good read vignette website launching mvabund. Alternatively, can access vignettes R :","code":"remotes::install_github(\"aliceyiwang/mvabund\", build_vignettes = TRUE)  vignette(\"mvabund\")"},{"path":"https://fontikar.github.io/mvabund/index.html","id":"show-mvabund-your-support","dir":"","previous_headings":"","what":"Show mvabund your support","title":"Statistical Methods for Analysing Multivariate Abundance Data","text":"","code":"citation(\"mvabund\") #>  #> To cite package 'mvabund' in publications use: #>  #>   Wang Y, Naumann U, Eddelbuettel D, Wilshire J, Warton D (2022). #>   _mvabund: Statistical Methods for Analysing Multivariate Abundance #>   Data_. R package version 4.2.2. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {mvabund: Statistical Methods for Analysing Multivariate Abundance Data}, #>     author = {Yi Wang and Ulrike Naumann and Dirk Eddelbuettel and John Wilshire and David Warton}, #>     year = {2022}, #>     note = {R package version 4.2.2}, #>   }"},{"path":"https://fontikar.github.io/mvabund/index.html","id":"spot-a-bug","dir":"","previous_headings":"","what":"Spot a bug?","title":"Statistical Methods for Analysing Multivariate Abundance Data","text":"Thanks finding bug! appreciate can pop Issues page describe reproduce bug!","code":""},{"path":"https://fontikar.github.io/mvabund/index.html","id":"other-resources","dir":"","previous_headings":"","what":"Other resources","title":"Statistical Methods for Analysing Multivariate Abundance Data","text":"Online tutorial using mvabund comparing species composition across different habitats Video introduction `mvabund","code":""},{"path":"https://fontikar.github.io/mvabund/index.html","id":"mvabund-in-action","dir":"","previous_headings":"","what":"mvabund in action","title":"Statistical Methods for Analysing Multivariate Abundance Data","text":"Check list studies uses mvabund analyses ","code":""},{"path":"https://fontikar.github.io/mvabund/reference/Tasmania.html","id":null,"dir":"Reference","previous_headings":"","what":"Tasmania Dataset — Tasmania","title":"Tasmania Dataset — Tasmania","text":"dataset contains list community abundance data species two factor variables, namely treatment block. See (Warwick et.al. (1990)) details.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/Tasmania.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tasmania Dataset — Tasmania","text":"","code":"data(Tasmania)"},{"path":"https://fontikar.github.io/mvabund/reference/Tasmania.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tasmania Dataset — Tasmania","text":"list containing elements abund data frame 16 observations 56 Meiobenthos species exposed disturbance treatment spatially blocked design. Four blocks four samples collected block comprised two disturbed undisturbed samples. copepods subset abund 12 Copepod species. nematodes subset abund 39 Nematode species. treatment two-level factor veraible. block four-level factor variable.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/Tasmania.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tasmania Dataset — Tasmania","text":"count data (number Meiobenthos species sample) collected spatia lly blocked design. labels made four replicate cores within block, B labeling block ID D labeling disturbed sample ID U labeling undisturbed sample ID. data frame abund contains 12 Copepod species, 39 Nematode species 4 undetermined ones. 12 Copepod species :  Ameira,      Adopsyllus,  Ectinosoma,  Ectinosomat, Haloschizo, Lepta.,     Lepta.B,     Lepta.C,     Mictyricola, Parevansula, Quin,        Rhizothrix 39 Nematode species :  Actinonema,        Axonolaimus,       Bathylaimus,  Calyptronema,      Chaetonema,        Chromaspirina,  Comesoma,          Daptonema,         Desmodora.,  Desmodora.B,       Enoploides,        Enoplus,  Epacanthion.,     Epacanthion.B,     Eubostrichus,  Eurystomina,       Hypodontolaimus., Hypodontolaimus.B,  Leptolaimus,       Leptonemella,      Mesacanthion,  Microlaimus,       Monhystera,        Nannoluimoides.,  Nannolaimoides.B,  Neochromadora.,   Neochromadora.B,  Odontophora,       Oncholaimus,       Qnvx,  Paracanthonchus,   Polysigma,         Praeacanthenchus,  Promonhystera,     Pseudosteineria,   Sabatieria,  Spilophorella,     Symplocostoma,     Viscosia data frame copepod stores subset 12 Copepod species, data frame nematode stores subset 39 Nematode species. treatment indicates disturbed undisturbed treatment 16 observations species Tasmania dataset. block indicates block ID 16 observations species Tasmania dataset.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/Tasmania.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tasmania Dataset — Tasmania","text":"Warwick, R. M., Clarke, K. R. Gee, J. M. (1990). effect disturbance soldier crabs Mictyris platycheles H. Milne Edwards meiobenthic communiy structure. J. Exp. Mar. Biol. Ecol., 135, 19-33.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/Tasmania.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tasmania Dataset — Tasmania","text":"","code":"require(graphics)  data(Tasmania) tasm.cop <- mvabund(Tasmania$copepods) treatment <- Tasmania$treatment block <- Tasmania$block  plot(tasm.cop~block*treatment) #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  PIPING TO 2nd MVFACTOR  #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  PIPING TO 2nd MVFACTOR"},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyany.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of Deviance for Many Univariate Models Fitted to Multivariate Abundance Data — anova.manyany","title":"Analysis of Deviance for Many Univariate Models Fitted to Multivariate Abundance Data — anova.manyany","text":"Compute analysis deviance table many univariate model fits. Slowly!","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyany.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of Deviance for Many Univariate Models Fitted to Multivariate Abundance Data — anova.manyany","text":"","code":"# S3 method for manyany anova(object, ..., nBoot=99, p.uni=\"none\", block=object1$block, nCores=1,        bootID=NULL, replace=TRUE)   # S3 method for anova.manyany print(x, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyany.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of Deviance for Many Univariate Models Fitted to Multivariate Abundance Data — anova.manyany","text":"object class manyany null hypothesis, typically result call manyany. ... generic anova methods. NEEDS INCLUDE SECOND manyany object alternative hypothesis tested. nBoot number Bootstrap iterations, default nBoot=99. p.uni whether calculate univariate test statistics P-values. \"none\" = univariate P-values (default)  \"unadjusted\" = test statistic (ordinary unadjusted) P-value reported response variable. manyany object compositional (composition=TRUE), option unavailable yet. block factor specifying sampling level resampled. Default resampling rows (composition=TRUE manyany command, means resampling rows data originally sent manyany). nCores Number cores use computations (parallel computing). bootID user-entered matrix indices observations use resample. Bootstrap resamples rows, observations columns. specified, overwrites nBoot block. Default NULL. replace whether sample without replacement, sample function. = FALSE PIT-permutation,  = TRUE PIT-trap. x anova.manyany object printed.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyany.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis of Deviance for Many Univariate Models Fitted to Multivariate Abundance Data — anova.manyany","text":"anova.manyany function returns table summarising statistical significance fitted manyany model alternative hypothesis (object2) compared fit null hypothesis (object). Typically alternative model nested null although need (consider seriously makes sense nested). function quite computationally intensive, little fussy - early version hope improve . Feedback welcome! function behaves lot like anova.manyglm, conspicuous differences flexibility computation time. Since function based manyany, offers much greater flexibility terms types models can fitted (fixed effects model predict family arguments accommodated). information different types data can modelled using manyany, see manyany. However flexibility comes considerable cost terms computation time, default nBoot set 99 reflect (although rerunning 999 recommended). cosmetic differences anova.manyglm two two models can supplied input ; adjusted univariate P-values yet implemented; range test statistics resampling algorithms limited. test statistics constructed sum--likelihood ratio statistics Warton et al (2012), resampling method used PIT-trap (short 'probability integral transform residual bootstrap', Warton et al 2017). check model assumptions, use plot.manyany. block argument allows block resampling, valid inferences can made across independent blocks correlated sets observations. example, data multiple rows records site, e.g. multi-species data entries different species different rows, can use site ID variable block argument resample sites, valid cross-site inferences despite within-site species correlation. Well, valid assuming sites independent. similarly repeated measures design make inferences robust temporal autocorrelation. Note block needs balanced, e.g. equal number species entries site (.e. include rows zero abundances ). anova.manyany function designed specifically high-dimensional data (, number variables p small compared number observations N). instances correlation matrix computationally intensive estimate numerically unstable, default test statistic calculated assuming independence variables. Note however resampling scheme used ensures P-values approximately correct even independence assumption satisfied. Rather stopping testing multivariate effects, often interest find response variables express significant effects. Univariate statistics required answer question, reported requested. Setting p.uni=\"unadjusted\" returns resampling-based univariate P-values effects well multivariate P-values, composition=FALSE. currently univariate P-value options composition=TRUE (entirely clear P-values obtained) univariate P's interest rerun model composition=FALSE. current limitation function composition needs set value manyany object compared - currently possible compare models without compositional term .","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyany.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of Deviance for Many Univariate Models Fitted to Multivariate Abundance Data — anova.manyany","text":"stat observed value test statistic. p P-value estimated nBoot resamples. stat.values test statistic nBoot resamples. p.P-value nBoot resamples. p.uni p.uni argument supplied. p.uni=\"unadjusted\" output list also contains uni.test table showing test statistics univariate tests. uni.p table showing p-values univariate tests. statj.matrix values univariate test statistics nBoot resamples.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyany.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Analysis of Deviance for Many Univariate Models Fitted to Multivariate Abundance Data — anova.manyany","text":"comparison two models anova.manyglm valid fitted dataset. may problem missing values R's default na.action = na.omit used.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyany.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analysis of Deviance for Many Univariate Models Fitted to Multivariate Abundance Data — anova.manyany","text":"Warton D. ., Wright S., Wang, Y. (2012). Distance-based multivariate analyses confound location dispersion effects. Methods Ecology Evolution, 3(1), 89-101. Warton D. ., Thibaut L., Wang Y. .  (2017). PIT-trap - \"model-free\" bootstrap procedure inference regression models discrete, multivariate responses. PLoS One, 12(7), e0181790.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyany.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analysis of Deviance for Many Univariate Models Fitted to Multivariate Abundance Data — anova.manyany","text":"David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyany.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis of Deviance for Many Univariate Models Fitted to Multivariate Abundance Data — anova.manyany","text":"","code":"## Try fitting Tikus Islands data with Tweedie models with power parameter 1.5, ## to test for compositional effect: data(tikus) coral <- as.matrix(tikus$abund[1:20,]) sumSpp = apply(coral>0,2,sum)  coral <- coral[,sumSpp>6] ## cutting to just species with seven(!) or more presences to cut ## computation time.  Maybe rerun with less (e.g. 4 or more presences) if curious and patient. coralX <- tikus$x[1:20,]  require(tweedie) #> Loading required package: tweedie require(statmod) #> Loading required package: statmod  ftTimeRep <- manyany(coral ~ time+rep, \"glm\", data=coralX,    family=tweedie(var.power=1.5, link.power=0), var.power=1.5, composition=TRUE) #> Warning: glm.fit: algorithm did not converge  ftRep <- manyany(coral ~ rep, \"glm\", data=coralX,    family=tweedie(var.power=1.5, link.power=0), var.power=1.5, composition=TRUE) #> Warning: glm.fit: algorithm did not converge anova(ftRep,ftTimeRep,nBoot=9) #this takes a few seconds to run even for just 9 resamples #> Warning: only the first element is used as variable name #> Warning: only the first element is used as variable name #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: algorithm did not converge #> Warning: only the first element is used as variable name #> Warning: only the first element is used as variable name #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: algorithm did not converge #> Warning: only the first element is used as variable name #> Warning: only the first element is used as variable name #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: algorithm did not converge #> Warning: only the first element is used as variable name #> Warning: only the first element is used as variable name #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: algorithm did not converge #> Warning: only the first element is used as variable name #> Warning: only the first element is used as variable name #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: algorithm did not converge #> Warning: only the first element is used as variable name #> Warning: only the first element is used as variable name #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: algorithm did not converge #> Warning: only the first element is used as variable name #> Warning: only the first element is used as variable name #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: algorithm did not converge #> Warning: only the first element is used as variable name #> Warning: only the first element is used as variable name #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: algorithm did not converge #> Warning: only the first element is used as variable name #> Warning: only the first element is used as variable name #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: algorithm did not converge #>  #>               LR Pr(>LR) #> sum-of-LR 164.92       1 #>  ## This should be rerun for nBoot=999, which could a few minutes...  if (FALSE) library(ordinal) ## First construct an ordinal dataset: if (FALSE) spidOrd = spider$abund if (FALSE) spidOrd[spider$abund>1 & spider$abund<=10]=2 if (FALSE) spidOrd[spider$abund>10]=3 ## Now fit a model using the clm function: if (FALSE) manyOrd=manyany(spidOrd~bare.sand+fallen.leaves,\"clm\",data=spider$x) ## Test to see if fallen.leaves needs to be there: if (FALSE) manyOrd0=manyany(spidOrd~bare.sand,\"clm\",data=spider$x) if (FALSE) anova(manyOrd0,manyOrd,nBoot=19)"},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of Deviance for Multivariate Generalized Linear Model\nFits for Abundance Data — anova.manyglm","title":"Analysis of Deviance for Multivariate Generalized Linear Model\nFits for Abundance Data — anova.manyglm","text":"Compute analysis deviance table one multivariate generalized linear model fits.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of Deviance for Multivariate Generalized Linear Model\nFits for Abundance Data — anova.manyglm","text":"","code":"<!-- %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% --> # S3 method for manyglm anova(object, ..., resamp=\"pit.trap\", test=\"LR\", p.uni=\"none\",     nBoot=999, cor.type=object$cor.type,     pairwise.comp = NULL,     block=NULL, show.time=\"total\",     show.warning=FALSE, rep.seed=FALSE, bootID=NULL, keep.boot=FALSE)  # S3 method for anova.manyglm print(x, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of Deviance for Multivariate Generalized Linear Model\nFits for Abundance Data — anova.manyglm","text":"object objects class manyglm, typically result call manyglm. ... anova.manyglm method, optional objects class manyglm, usually result call manyglm print.anova.manyglm method optional arguments passed methods. See print.summary.glm details. resamp method resampling used. Can one \"case\", \"perm.resid\", \"montecarlo\" \"pit.trap\" (default). See Details. test test used. cor.type=\"\", can one \"wald\" Wald-Test \"score\" Score-Test \"LR\" Likelihood-Ratio-Test, otherwise \"wald\" \"score\" allowed. default value \"LR\". p.uni whether calculate univariate test statistics P-values, , type. can one following options.  \"none\" = univariate P-values (default)  \"unadjusted\" = test statistic (ordinary unadjusted) P-value reported response variable.  \"adjusted\" = Univariate P-values adjusted multiple testing, using step-resampling procedure. nBoot number Bootstrap iterations, default nBoot=999. cor.type structure imposed estimated correlation matrix fitted model. Can \"\"(default), \"shrink\", \"R\". See Details. pairwise.comp character factor vector specifying levels pairwise comparison carried , adjusting multiple comparisons via free stepdown resampling procedure.     Alternatively, onesided formula specifying interaction factor levels. block factor specifying sampling level resampled. Default resampling rows. show.time Whether display timing information resampling procedure: \"none\" shows none, \"\" shows timing information \"total\" shows overall time taken tests. show.warning logical. Whether display warning messages operation procedure. rep.seed logical. Whether fix random seed resampling data. Useful simulation diagnostic purposes. bootID integer matrix row specifies bootstrap id's resampling run. bootID supplied, nBoot set number rows bootID. Default NULL. keep.boot logical. Whether return bootstrapped test statistics. x object class \"anova.manyglm\", usually, result call anova.manyglm.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis of Deviance for Multivariate Generalized Linear Model\nFits for Abundance Data — anova.manyglm","text":"anova.manyglm function returns table summarising statistical significance fitted manyglm model (Warton 2011), differences several nested models. one model specified, sequential test statistics (P values) returned fit. one object specified, table contains test statistics (P values) comparing fits, provided models fitted dataset. test statistics determined argument test,  P-values calculated resampling rows data using method  determined argument resamp. resamp. Two three  available resampling methods (residual permutation parametric bootstrap)  described detail Davison Hinkley (1997, chapter 6),  whereas default (``PIT-trap'', Warton et al 2017)  bootstraps probability integral transform residuals, found  give reliable Type error rates. methods involve resampling  resampling null hypothesis. methods ensure  approximately valid inference even mean-variance relationship  correlation variables misspecified.  Standardized Pearson  residuals (see manyglm currently used residual  permutation, necessary, resampled response values truncated  fall required range (e.g. counts negative).  However, can introduce bias, especially family=binomial,  advise extreme caution using perm.resid presence/absence data.  resamp=\"none\", p-values calculated, however test  statistics returned. specific hypothesis primary interest want test, instead interested model terms statistically significant, summary.manyglm function appropriate. Whereas summary.manyglm tests significance explanatory variable, anova.manyglm, given one manyglm object tests  term formula, e.g. formula 'y~+b' b, can vectors matrices, tested significance. information different types data can modelled using manyglm, see manyglm. check model assumptions, use plot.manyglm. Multivariate test statistics constructed using one three methods: log-likelihood ratio statistic test=\"LR\", example Warton et. al. (2012) Wald statistic test=\"wald\" Score statistic test=\"score\". \"LR\" good properties, available cor.type=\"\". default Wald test statistic makes use generalised estimating equations (GEE) approach, estimating covariance matrix parameter estimates using sandwich-type estimator assumes mean-variance relationship data correctly specified unknown constant correlation across observations. assumptions allow test statistic account correlation variables efficient way traditional GEE sandwich estimators (Warton 2011). common correlation matrix estimated standardized Pearson residuals, method specified cor.type used adjust high dimensionality. Wald statistic problems count data presence-absence  data estimated means zero (usually means large parameter estimates, check using coef). instances Wald statistics used, Score LR job.  anova.manyglm function designed specifically high-dimensional data (, number variables p small compared number observations N). instances correlation matrix computationally intensive estimate numerically unstable, default test statistic calculated assuming independence variables (cor.type=\"\"). Note however resampling scheme used ensures P-values approximately correct even independence assumption satisfied. However computationally feasible dataset, recommended use cor.type=\"shrink\" account correlation variables, cor.type=\"R\" p small. cor.type=\"R\" option uses unstructured correlation matrix (possible N>p), standard  classical multivariate test statistics obtained. Note however statistics typically numerically unstable low power p small compared N. cor.type=\"shrink\" option applies ridge regularisation (Warton 2008), shrinking sample correlation matrix towards identity, improves stability p small compared N. provides compromise \"R\" \"\", allowing us account correlation variables, using numerically stable test statistic good properties. shrinkage parameter attribute manyglm object. Wald test, sample correlation matrix alternative model used calculate test statistics. shrink.param alternative model used. score test, sample correlation matrix null model used calculate test statistics. shrink.param null model used instead. cor.type==\"shrink\" shrink.param NULL, shrinkage parameter estimated cross-validation using multivariate normal likelihood function (see ridgeParamEst (Warton 2008)) corresponding model anova test. Rather stopping testing multivariate effects, often interest find response variables express significant effects. Univariate statistics required answer question, reported requested. Setting p.uni=\"unadjusted\" returns resampling-based univariate P-values effects well multivariate P-values, whereas p.uni=\"adjusted\" returns adjusted P-values (adjusted multiple testing), calculated using step-resampling algorithm Westfall & Young (1993, Algorithm 2.8). method provides strong control family-wise error rates, makes use resampling (using method controlled resamp) ensure inferences take account correlation variables. functionality currently available models relative abundance via composition=TRUE.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of Deviance for Multivariate Generalized Linear Model\nFits for Abundance Data — anova.manyglm","text":"family family component object. p.uni p.uni argument supplied. test test argument supplied. cor.type cor.type argument supplied. resamp resamp argument supplied. nBoot nBoot argument supplied. shrink.parameter list shrink parameters manyglm objects anova test. n.bootsdone number bootstrapping iterations done, .e. error. table table Residual Degrees Freedom, Degrees Freedom, Test Statistics P values. block block argument specified inpout argument. pairwise.comp pairwise.comp argument supplied. p.uni=\"adjusted\" \"unadjusted\" output list also contains uni.test table showing test statistics univariate tests. uni.p table showing p-values univariate tests. keep.boot=TRUE output list also contains bootStat matrix boot strapped test statistics, first column multivariate test statistic, rest columns univariate statistic. !.null(parwise.comp) output list also contains pairwise.comp.table data.frame containing comparisons, observed test statistcs holm free stepdown adjusted p-values.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyglm.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Analysis of Deviance for Multivariate Generalized Linear Model\nFits for Abundance Data — anova.manyglm","text":"comparison two models anova.manyglm valid fitted dataset. may problem missing values R's default na.action = na.omit used.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analysis of Deviance for Multivariate Generalized Linear Model\nFits for Abundance Data — anova.manyglm","text":"Davison, . C. Hinkley, D. V. (1997) Bootstrap Methods Application. Cambridge University Press, Cambridge. Warton D.. (2011). Regularized sandwich estimators analysis high dimensional data using generalized estimating equations. Biometrics, 67(1), 116-123.  Warton D.. (2008). Penalized normal likelihood ridge regularization correlation covariance matrices. Journal American Statistical Association 103, 340-349. Warton D. ., Wright S., Wang, Y. (2012). Distance-based multivariate analyses confound location dispersion effects. Methods Ecology Evolution, 3(1), 89-101. Warton D. ., Thibaut L., Wang Y. .  (2017). PIT-trap - \"model-free\" bootstrap procedure inference regression models discrete, multivariate responses. PLoS One, 12(7), e0181790. Westfall, P. H. Young, S. S. (1993) Resampling-based multiple  testing. John Wiley & Sons, New York. Wu, C. F. J. (1986) Jackknife, Bootstrap Resampling Methods Regression Analysis. Annals Statistics 14:4, 1261-1295.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analysis of Deviance for Multivariate Generalized Linear Model\nFits for Abundance Data — anova.manyglm","text":"Yi Wang, Ulrike Naumann, John Wilshire David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/anova.manyglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis of Deviance for Multivariate Generalized Linear Model\nFits for Abundance Data — anova.manyglm","text":"","code":"## Load the Tasmania data set data(Tasmania)  ## Visualise the effect of treatment on copepod abundance tasm.cop <- mvabund(Tasmania$copepods) treatment <- Tasmania$treatment block <- Tasmania$block #plot(tasm.cop ~ treatment, col=as.numeric(block))  ## Fitting predictive models using a negative binomial model for counts: tasm.cop.nb <- manyglm(tasm.cop ~ block*treatment, family=\"negative.binomial\")  ## Testing hypotheses about the treatment effect and treatment-by-block interactions,  ## using a Wald statistic and 199 resamples (better to ramp up to 999 for a paper): anova(tasm.cop.nb, nBoot=199, test=\"wald\") #> Time elapsed: 0 hr 0 min 1 sec #> Analysis of Variance Table #>  #> Model: tasm.cop ~ block * treatment #>  #> Multivariate test: #>                 Res.Df Df.diff  wald Pr(>wald)    #> (Intercept)         15                            #> block               12       3 9.348      0.01 ** #> treatment           11       1 7.618      0.03 *  #> block:treatment      8       3 5.367      0.16    #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #>  P-value calculated using 199 iterations via PIT-trap resampling. #>   ## Performing the Pairwise comparison: if (FALSE) { data(solberg) manyglm(abund ~ x, data=solberg) -> msolglm ## pairwise comparison on solberg$x anova(msolglm, pairwise.comp = solberg$x, nBoot = 199) # Could also run: anova(msolglm, pairwise.comp = ~treatment, nBoot = 199) }"},{"path":"https://fontikar.github.io/mvabund/reference/anova.manylm.html","id":null,"dir":"Reference","previous_headings":"","what":"ANOVA for Linear Model Fits for Multivariate Abundance Data — anova.manylm","title":"ANOVA for Linear Model Fits for Multivariate Abundance Data — anova.manylm","text":"anova method class \"manylm\" - computes analysis variance  table one linear model fits high-dimensional data,  multivariate abundance data ecology.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manylm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANOVA for Linear Model Fits for Multivariate Abundance Data — anova.manylm","text":"","code":"# S3 method for manylm anova(object, ..., resamp=\"perm.resid\", test=\"F\", p.uni=\"none\",         nBoot=999, cor.type=object$cor.type,         block=NULL, shrink.param=object$shrink.param,    studentize=TRUE, calc.rss = FALSE, tol=1.0e-10, rep.seed=FALSE, bootID=NULL ) # S3 method for anova.manylm print(     x, digits = max(getOption(\"digits\") - 3, 3),     signif.stars = getOption(\"show.signif.stars\"),     dig.tst = max(1, min(5, digits - 1)),     eps.Pvalue = .Machine$double.eps, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/anova.manylm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANOVA for Linear Model Fits for Multivariate Abundance Data — anova.manylm","text":"object object class manylm, usually, result call manylm. ... anova.manylm method, optional objects class manylm, usually result call manylm. print.anova.manylm method optional arguments passed methods. nBoot number iterations resampling. Default 999 P-values fractions 1000. resamp method resampling used. Can one \"perm.resid\" (default), \"residual\", \"score\", \"case\". See Details. test test used. Possible values : \"LR\" = likelihood ratio statistic, \"F\" = Lawley-Hotelling trace statistic NULL test. cor.type structure imposed estimated correlation matrix fitted model. Can \"\"(default), \"shrink\", \"R\". See Details. block factor specifying sampling level resampled. Default resampling rows. shrink.param shrinkage parameter used cor.type=\"shrink\". supplied, needed, estimated estimated data Cross Validation using normal likelihood Warton (2008). p.uni whether calculate univariate test statistics P-values, , type.  \"none\" = univariate P-values (default)  \"unadjusted\" = test statistic (ordinary unadjusted) P-value reported response variable.  \"adjusted\" = Univariate P-values adjusted multiple testing, using step-resampling procedure. studentize logical. Whether studentized residuals used simulate data resampling steps. option used case resampling. calc.rss logical. Whether Residual Sum Squares calculated. tol sensitivity calculations near 0. rep.seed logical. Whether fix random seed resampling data. Useful simulation diagnostic purposes. bootID integer matrix row specifies bootstrap id's resampling run. bootID supplied, nBoot set number rows bootID. Default NULL. x object class \"anova.manylm\", usually, result call anova.manylm. digits number significant digits use printing. signif.stars logical. TRUE, ‘significance stars’ printed coefficient. dig.tst number digits round estimates model parameters. eps.Pvalue numerical tolerance formatting p values.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manylm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ANOVA for Linear Model Fits for Multivariate Abundance Data — anova.manylm","text":"anova.manylm function returns table summarising statistical significance fitted manylm model, differences several nested models fitted dataset. one model specified, sequential test statistics (P values) returned fit. one object specified, table contains test statistics (P values) comparing fits. test statistics determined argument test, P-values calculated resampling rows data using method determined argument resamp. four possible resampling methods residual-permutation (Anderson Robinson (2001)), score resampling (Wu (1986)), case residual resampling (Davison Hinkley (1997, chapter 6)), involve resampling null hypothesis (except case resampling). methods ensure approximately valid inference even correlation variables misspecified, case score resampling, even equal variance assumption linear models invalid. default, studentised residuals (r_i/sqrt(1-h_ii)) used residual score resampling, although raw residuals used via argument studentize=FALSE.  resamp=\"none\", p-values calculated, however test statistics returned. specific hypothesis primary interest want test, instead interested model terms statistically significant, summary.manylm function appropriate. one object specified models nested. case ANOVA table column residual degrees freedom column change degrees freedom. conventional list models smallest largest, user. check model assumptions, use plot.manylm. anova.manylm function designed specifically high-dimensional data (, number variables p small compared number observations N). instances correlation matrix computationally intensive estimate numerically unstable, default test statistic calculated assuming independence variables (cor.type=\"\"). Note however resampling scheme used ensures P-values approximately correct even independence assumption satisfied. However computationally feasible dataset, recommended use cor.type=\"shrink\" account correlation variables, cor.type=\"R\" p small. cor.type=\"R\" option uses unstructured correlation matrix (possible N>p), standard classical multivariate test statistics obtained. Note however statistics typically numerically unstable low power p small compared N. cor.type=\"shrink\" option applies ridge regularisation (Warton 2008), shrinking sample correlation matrix towards identity, improves stability p small compared N. provides compromise \"R\" \"\", allowing us account  correlation variables, using numerically stable test statistic good properties. shrinkage parameter default estimated cross-validation using multivariate normal likelihood function, although can specified via shrink.param value 0 1 (0=\"\" 1=\"R\", values closer towards 0 indicate shrinkage towards \"\"). validation groups chosen random assignment may observe slight variation estimated shrinkage parameter repeat analyses.  See ridgeParamEst details. Rather stopping testing multivariate effects, often interest find response variables express significant effects. Univariate statistics required answer question, reported requested. Setting p.uni=\"unadjusted\" returns resampling-based univariate ANOVA P-values well multivariate P-values, whereas  p.uni=\"adjusted\" returns adjusted ANOVA P-values (adjusted  multiple testing), calculated using step-resampling algorithm Westfall & Young (1993, Algorithm 2.8). method provides strong control family-wise error rates, makes use resampling (using method controlled resampling) ensure inferences take account correlation variables.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manylm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANOVA for Linear Model Fits for Multivariate Abundance Data — anova.manylm","text":"object class \"anova.manylm\". list containing least: p.uni supplied argument. test supplied argument. cor.type supplied argument. resample supplied argument. nBoot supplied argument. calc.rss supplied argument. table data frame containing anova table. shrink.param supplied argument. n.bootsdone number bootstrapping iterations done, .e. error. n.iter.sing number bootstrap iterations resampled design matrix singular used partly. one logical. whether anova table calculated one manylm object several manylm objects. p.uni=\"adjusted\" p.uni=\"unadjusted\" output list also contains: uni.test table showing test statistics univariate tests uni.p table showing p-values univariate tests print method anova.manylm objects prints output ‘pretty’ form.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manylm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ANOVA for Linear Model Fits for Multivariate Abundance Data — anova.manylm","text":"Anderson, M.J. J. Robinson (2001). Permutation tests linear models. Australian New Zealand Journal Statistics 43, 75-88. Davison, . C. Hinkley, D. V. (1997) Bootstrap Methods Application. Cambridge University Press, Cambridge. Warton D.. (2008). Penalized normal likelihood ridge regularization  correlation covariance matrices. Journal American  Statistical Association 103, 340-349. Warton D.. Hudson H.M. (2004). MANOVA statistic just powerful distance-based statistics, multivariate abundances.  Ecology 85(3), 858-874. Westfall, P. H. Young, S. S. (1993)  Resampling-based multiple testing. John Wiley & Sons, New York. Wu, C. F. J. (1986) Jackknife, Bootstrap Resampling Methods Regression Analysis. Annals Statistics 14:4, 1261-1295.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.manylm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ANOVA for Linear Model Fits for Multivariate Abundance Data — anova.manylm","text":"Yi Wang, Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/anova.manylm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ANOVA for Linear Model Fits for Multivariate Abundance Data — anova.manylm","text":"","code":"## Load the spider dataset: data(spider) spiddat <- log(spider$abund+1) spiddat <- mvabund(spiddat) spidx <- as.matrix(spider$x)  ## Fit several multivariate linear models: fit <- manylm( spiddat ~ spidx ) # model with all explanatory variables  ## Use the default residual resampling to test the significance of this model: ## return summary of the manylm model anova(fit) #> Analysis of Variance Table #>  #> Model: manylm(formula = spiddat ~ spidx) #>  #> Overall test for all response variables #> Test statistics: #>             Res.Df Df.diff val(F) Pr(>F)    #> (Intercept)     27                          #> spidx           21       6  124.7  0.002 ** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> Arguments: #>  Test statistics calculated assuming uncorrelated response (for faster computation)  #>  P-value calculated using 999 iterations via residual (without replacement) resampling. #>   ## intercept model fit0 <- manylm(spiddat ~ 1) ## include soil and leaf variables fit1 <- update(fit0, . ~ . + spidx[, c(1, 3)]) ## include moss variables fit2 <- update(fit1, . ~ . + spidx[, 4])   ## Use (residual) resampling to test the significance of these models,  ## accounting for correlation between variables by shrinking  ## the correlation matrix to improve its stability: anova(fit, fit0, fit1, fit2, cor.type=\"shrink\") #> Analysis of Variance Table #>  #> fit0: spiddat ~ 1 #> fit1: spiddat ~ spidx[, c(1, 3)] #> fit2: spiddat ~ spidx[, c(1, 3)] + spidx[, 4] #> fit: spiddat ~ spidx #>  #> Overall test for all response variables #> Test statistics: #>      Res.Df Df.diff val(F) Pr(>F)    #> fit0     27                          #> fit1     25       2 233.06  0.002 ** #> fit2     24       1  40.74  0.016 *  #> fit      21       3  22.61  0.043 *  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> Arguments: #>  Test statistics calculated assuming correlated response via ridge regularization with ridge parameter 0.358  #>  P-value calculated using 999 iterations via residual (without replacement) resampling. #>   ## Use the sum of F statistics to estimate multivariate significance from  ## 4999 resamples, and also reporting univariate statistics with  ## adjusted P-values: anova(fit, fit0, fit1, fit2, nBoot=4999, test=\"F\", p.uni=\"adjust\") #> Analysis of Variance Table #>  #> fit0: spiddat ~ 1 #> fit1: spiddat ~ spidx[, c(1, 3)] #> fit2: spiddat ~ spidx[, c(1, 3)] + spidx[, 4] #> fit: spiddat ~ spidx #>  #> Overall test for all response variables #> Test statistics: #>      Res.Df Df.diff val(F) Pr(>F)     #> fit0     27                           #> fit1     25       2 253.06 0.0004 *** #> fit2     24       1  44.33 0.0100 **  #> fit      21       3  23.49 0.0462 *   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Univariate Tests #> Test statistics: #>      Alopacce        Alopcune        Alopfabr        Arctlute        Arctperi #>       F value Pr(>F)  F value Pr(>F)  F value Pr(>F)  F value Pr(>F)  F value #> fit0                                                                          #> fit1   27.921 0.0004    9.204 0.0026    39.04 0.0004    8.781 0.0026   21.853 #> fit2     1.56 0.7470    0.564 0.7470    0.312 0.7470     0.87 0.7470    1.113 #> fit     3.377 0.3046    1.257 0.7792    2.558 0.4678    0.945 0.8600    2.006 #>             Auloalbi        Pardlugu        Pardmont        Pardnigr        #>      Pr(>F)  F value Pr(>F)  F value Pr(>F)  F value Pr(>F)  F value Pr(>F) #> fit0                                                                        #> fit1 0.0006   11.492 0.0014   19.024 0.0006   16.408 0.0006   21.359 0.0006 #> fit2 0.7470    3.416 0.4344    2.738 0.5290   11.386 0.0272     7.98 0.0790 #> fit  0.5930    1.819 0.5930    2.971 0.3864    0.841 0.8600     0.74 0.8600 #>      Pardpull        Trocterr        Zoraspin        #>       F value Pr(>F)  F value Pr(>F)  F value Pr(>F) #> fit0                                                 #> fit1   32.306 0.0004   31.906 0.0004   13.764 0.0012 #> fit2    1.343 0.7470    8.789 0.0640    4.262 0.3360 #> fit     0.903 0.8600    2.045 0.5930    4.027 0.2062 #>  #> Arguments: with 4999 resampling iterations using residual (without replacement) resampling and uncorrelated response (for faster computation)  #>"},{"path":"https://fontikar.github.io/mvabund/reference/anova.traitglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing for a environment-by-trait (fourth corner) interaction by analysis of deviance — anova.traitglm","title":"Testing for a environment-by-trait (fourth corner) interaction by analysis of deviance — anova.traitglm","text":"Returns analysis deviance fourth corner model, computed using traitglm, typically test environment--trait interaction. Slowly! function works via anova.manyglm, uses row-resampling inference, applies traitglm objects fitted using (default) manyglm function.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.traitglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing for a environment-by-trait (fourth corner) interaction by analysis of deviance — anova.traitglm","text":"","code":"<!-- %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% --> # S3 method for traitglm anova(object, ..., nBoot=99, resamp=\"pit.trap\", test=\"LR\",                              block = NULL, show.time=\"all\", bootID=NULL)"},{"path":"https://fontikar.github.io/mvabund/reference/anova.traitglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing for a environment-by-trait (fourth corner) interaction by analysis of deviance — anova.traitglm","text":"object fitted object class traitglm class manyglm. ... Additional traitglm objects, fitted using formula argument. nBoot number bootstrap iterations. Default 99 (NOTE: increase later runs!) resamp,test,bootID Arguments anova.manyglm, control resampling method (resamp), test statistic (test) whether matrix bootstrap resamples manually entered (bootID). block factor specifying sampling level resampled. Default resampling sites (still involves passing blocking variable anova.manyglm, keep rows original abundance data together resamples). show.time Whether display timing information resampling procedure: advisable, resampling fourth corner models many times can take . default value \"\" shows timing information, \"total\" shows overall time taken tests, \"none\" shows none.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.traitglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Testing for a environment-by-trait (fourth corner) interaction by analysis of deviance — anova.traitglm","text":"two possible uses function, depending whether one traitglm object specified multiple objects. one traitglm object specified, anova.traitglm function returns table summarising statistical significance fourth corner terms model, , interaction environment traits predicting abundance across taxa sites. environment--trait interaction terms model simultaneously tested. two nested traitglm objects specified, fitted using formula argument set datasets, sequential test statistics (P values) returned additional model fit. traitglm models must fitted using manyglm function, default behaviour, order access anova.manyglm, work. See anova.manyglm details resampling done, options arguments controlling test statistic (via test) resampling method (via resamp). traitglm models fitted first vectorising data univariate model, arguments p.uni cor.type redundant. traitglm fits single model abundances across sites taxa time, meaning vector abundances typically pretty long, design matrix explaining abundance varies across taxa sites typically pretty large. resampling can take yonks. Hence default number resamples set nBoot=99, please consider increasing sense long take run (scales roughly linearly nBoot).","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.traitglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Testing for a environment-by-trait (fourth corner) interaction by analysis of deviance — anova.traitglm","text":"list values returned anova.manyglm, relevant element table (analysis deviance table).","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.traitglm.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Testing for a environment-by-trait (fourth corner) interaction by analysis of deviance — anova.traitglm","text":"comparison two models anova.traitglm valid fitted dataset. may problem missing values R's default na.action = na.omit used.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.traitglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Testing for a environment-by-trait (fourth corner) interaction by analysis of deviance — anova.traitglm","text":"Warton DI, Shipley B & Hastie T (2015) CATS regression - model-based approach studying trait-based community assembly, Methods Ecology Evolution 6, 389-398.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/anova.traitglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Testing for a environment-by-trait (fourth corner) interaction by analysis of deviance — anova.traitglm","text":"David . Warton <David.Warton@unsw.edu.au>","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/anova.traitglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Testing for a environment-by-trait (fourth corner) interaction by analysis of deviance — anova.traitglm","text":"","code":"data(antTraits)  # we'll fit a small fourth corner model, to a subset of the antTraits data. # first select only species present in at least 25% of plots: abSum = apply(antTraits$abund>0,2,mean) ab = antTraits$abund[,abSum>0.25] tr = antTraits$traits[abSum>0.25,]  # now fit the fourth corner model, only as a function of a couple of traits and env variables: ft=traitglm(ab,antTraits$env[,1:3],data.frame(tr$Weber,tr$Femur)) anova(ft,nBoot=39) #> Error in as.data.frame(L): object 'ab' not found # Note you should refit with more bootstrap samples (e.g. 999), should take <2 minutes to run  # for an example using anova.traitglm for multiple fits, uncomment the following lines: # ft2=traitglm(antTraits$abund,antTraits$env[,3:4],antTraits$traits[,c(1,3)], #   formula=~1,composition=TRUE) #no fourth corner terms # ft3=traitglm(antTraits$abund,antTraits$env[,3:4],antTraits$traits[,c(1,3)], #   formula=~Shrub.cover:Femur.length+Shrub.cover:Pilosity,composition=TRUE) #shrub interactions # ft4=traitglm(antTraits$abund,antTraits$env[,3:4],antTraits$traits[,c(1,3)], #   formula=~Shrub.cover:Femur.length+Shrub.cover:Pilosity+Volume.lying.CWD:Femur.length+ #   Volume.lying.CWD:Pilosity, composition=TRUE) #all interactions only # anova(ft2,ft3,ft4) # Shrub interactions not significant but CWD interactions are."},{"path":"https://fontikar.github.io/mvabund/reference/antTraits.html","id":null,"dir":"Reference","previous_headings":"","what":"Ant data, with species traits — antTraits","title":"Ant data, with species traits — antTraits","text":"Abundances 41 epigaeic ant species across 30 sites south-eastern Australia, species trait environmental data","code":""},{"path":"https://fontikar.github.io/mvabund/reference/antTraits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ant data, with species traits — antTraits","text":"","code":"data(antTraits)"},{"path":"https://fontikar.github.io/mvabund/reference/antTraits.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ant data, with species traits — antTraits","text":"list containing three elements: abund data frame observations 30 different locations  abundances 41 epigaeic ant species. env data frame containing 7 environmental variables transects 30 sites: Bare.ground Percent cover bare ground, estimated ten 1x1 metre quadrats Canopy.cover Percent canopy cover, estimated two 20x20m transects Shrub.cover Percent canopy cover, estimated two 20x20m transects Volume.lying.CWD Estimated volume Coarse Woody Debris two 20x20m transects, including debris >5cm diameter. Feral.mammal.dung Proportion quadrats including mammal dung, ten 1x1m quadrats. traits data frame containing 5 species traits measured 41 species. Weber's length log-transformed, Femur length log-transformed regressed log(Weber's length), remove effect size. Femur.length Residuals regression log(Femur length) log(Weber's length) .spines Number spines propodeum petioles, integer value Pilosity factor four levels pilosity, 0 = hairs; 1 = sparse regular covering hairs; 2 = consistent, moderate covering hair; 3 = dense hair covering Polymorphism 0 = Monomorphic, 1 = polymorphic, 2 = dimorphic Webers.length log transformed. Body length, measured distance anterodorsal margin pronotum posteroventral margin propodeum","code":""},{"path":"https://fontikar.github.io/mvabund/reference/antTraits.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ant data, with species traits — antTraits","text":"Gibb H, Stoklosa J, Warton, DI, Brown, , Andrew, NR Cunningham, SA (2015) morphology predict trophic position habitat use ant species assemblages? Oecologia 177, 519-531.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/antTraits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ant data, with species traits — antTraits","text":"","code":"data(antTraits) ft = traitglm(antTraits$abund,antTraits$env,antTraits$traits) #to do a fourth corner analysis"},{"path":"https://fontikar.github.io/mvabund/reference/best.r.sq.html","id":null,"dir":"Reference","previous_headings":"","what":"Use R^2 to find the variables that best explain a multivariate response. — best.r.sq","title":"Use R^2 to find the variables that best explain a multivariate response. — best.r.sq","text":"Finds subset explanatory variables formula best explain variation multivariate response, measured chosen definition R^2. Modifications included high dimensional data, multivariate abundance data ecology.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/best.r.sq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use R^2 to find the variables that best explain a multivariate response. — best.r.sq","text":"","code":"best.r.sq(formula, data = parent.frame(), subset, var.subset,   n.xvars= min(3, length(xn)), R2=\"h\", ...)"},{"path":"https://fontikar.github.io/mvabund/reference/best.r.sq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use R^2 to find the variables that best explain a multivariate response. — best.r.sq","text":"formula mvformula, multivariate formula. data optional, data.frame (list) variables formula taken. subset optional vector specifying subset observations used fitting process. var.subset optional vector specifying subset responses used. n.xvars number independent variables highest average R^2 found. R2 type R^2 (correlation coefficient) shown, possible values :   \"h\" = Hooper's R^2 = tr(SST^(-1)SSR))/p     \"v\" = vector R^2 = det(SSR)/det(SST)  \"n\" = none Note univariate response, equivalent ordinary  product-moment correlation coefficient. ... arguments passed lm.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/best.r.sq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use R^2 to find the variables that best explain a multivariate response. — best.r.sq","text":"best.r.sq finds n.xvars influence variables obtained  forward selection multivariate linear model given formula.   response variables given var.subset considered. However,  var.subset NULL response variables considered.  Interactions excluded search mechanism, however indices  returned correspond indices model. function intended  exploratory tool can used example plotting, intended  tool formal model selection.  choose 'possible subsets'  moment)","code":""},{"path":"https://fontikar.github.io/mvabund/reference/best.r.sq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use R^2 to find the variables that best explain a multivariate response. — best.r.sq","text":"function returns list consisting : xs vector indices independent variables greatest explanatory power, previously. r2Step vector total R^2 sequential model fits including model terms identified xs. r2Matrix matrix containing total R^2 term model addition step (steps columns model terms rows).","code":""},{"path":"https://fontikar.github.io/mvabund/reference/best.r.sq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Use R^2 to find the variables that best explain a multivariate response. — best.r.sq","text":"Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/best.r.sq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use R^2 to find the variables that best explain a multivariate response. — best.r.sq","text":"","code":"data(spider) spiddat <- mvabund(spider$abund) X <- as.matrix(spider$x)  best.r.sq( spiddat~X ) #> Error in eval(parse(text = lab)): object 'X' not found"},{"path":"https://fontikar.github.io/mvabund/reference/boxplot.mvabund.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplots for multivariate abundance Data — boxplot.mvabund","title":"Boxplots for multivariate abundance Data — boxplot.mvabund","text":"Draw Boxplots mvabund mvformula Objects","code":""},{"path":"https://fontikar.github.io/mvabund/reference/boxplot.mvabund.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplots for multivariate abundance Data — boxplot.mvabund","text":"","code":"# S3 method for mvabund boxplot(x, y, range=1.5, names=NULL, at=NULL,                   n.vars=min(12,NCOL(x)), overall.main=\"Boxplot\",                   var.subset=NA, transformation=\"log\", ...)  # S3 method for mvformula boxplot(     x, n.vars=12, overall.main=\"\", var.subset=NA, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/boxplot.mvabund.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplots for multivariate abundance Data — boxplot.mvabund","text":"x mvabund method x specifies data boxplots produced.  can either numeric vector, single list containing vectors.  Additional unnamed arguments specify data separate vectors  (corresponding component boxplot).  NAs allowed data.  default method, unnamed arguments additional data vectors  (unless x list ignored), named arguments arguments graphical parameters passed addition ones given argument pars (override pars).  mvformula method, formula, y ~ grp, y numeric mvabund object data values split groups according grouping variable grp (factor). y mvabund method y can additional mvabund object, x list. range determines far plot whiskers extend box. range positive, whiskers extend extreme data point range times interquartile range box. value zero causes whiskers extend data extremes. names available mvabund method: group labels printed boxplot. available mvabund method: numeric vector giving locations boxplots drawn; defaults 1:n n number boxes. n.vars number variables include plot. overall.main character display title every window. var.subset numeric vector indices indicating variables mvabund.object included plot. transformation optional transformation, () mvabund method. Note, mvabund method transformation must used  instead log. Available values : \"\" = untransformed, \"sqrt\"=square root transformed, \"log\" (default)=log(Y/min+1) transformed, \"sqrt4\" =4th root transformed. ... mvformula method, named arguments passed plot.mvformula method. arguments available mvabund method, available plot.mvformula can therefore available mvformula method. mvabund method, unamed arguments additional data vectors matrices mvabund objects, (unless x list ignored),named arguments arguments graphical parameters passed addition ones given argument pars (override pars).","code":""},{"path":"https://fontikar.github.io/mvabund/reference/boxplot.mvabund.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boxplots for multivariate abundance Data — boxplot.mvabund","text":"function boxplot.mvabund allows simultaneous construction many variables single figure. Thus good comparative overview distribution abundances several species can obtained.  several ways function can used.  one mvabund object, either named x y  names, passed, drawn one plot abundances can compared several variables. two mvabund objects, named x y  passed plotting, shown one plot, showing species abundances objects directly one .  two mvabund objects passed, plotted separately.  Additionally, possible specify x list mvabund objects. plotted separately mvabund data  ignored, regardless specified y unnamed. function boxplot.mvformula can used draw boxplots mvabund object dependence explanatory variables. explanatory variables can  numerical values well factor variables. formula contains , separate plots terms numerical values terms factor variables, displayed separate windows. arguments plot, varwidth add, availabe default method boxplot, available mvabund mvformula methods. argument horizontal available mvabund method.  number arguments like names available  mvabund method.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/boxplot.mvabund.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Boxplots for multivariate abundance Data — boxplot.mvabund","text":"argument log, available plotting functions can used  plotting mvabund mvformula objects. Instead use transformation mvabund method mvformula method include transformations formula.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/boxplot.mvabund.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplots for multivariate abundance Data — boxplot.mvabund","text":"contrast default method (boxplot.default) nothing returned. functions used drawing plots.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/boxplot.mvabund.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Boxplots for multivariate abundance Data — boxplot.mvabund","text":"Warton, D. . ( ) Raw data graphing: informative -utilised tool analysis multivariate abundances, , .","code":""},{"path":"https://fontikar.github.io/mvabund/reference/boxplot.mvabund.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boxplots for multivariate abundance Data — boxplot.mvabund","text":"Ulrike Naumann, Yi Wang, Stephen Wright David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/boxplot.mvabund.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplots for multivariate abundance Data — boxplot.mvabund","text":"","code":"require(graphics)  #### Basic Use #### data(spider) spiddat <- spider$abund X <- spider$x  ## Create the mvabund object: spiddat <- mvabund(spiddat)  ## Draw a boxplot for a mvabund object: boxplot(spiddat) #> Kicking off BoxPlot sequence    ## the same plot could be done by plot(spiddat,type=\"bx\") #> Kicking off BoxPlot sequence     #### Advanced Use #### data(solberg) solbdat <- mvabund(solberg$abund) treatment<- solberg$x  # create pch type and colour vectors treat.pch <- treat.col <- unclass(treatment)  # Boxplot for data plot.mvabund(x=solbdat,y=treatment,type=\"bx\",              main=\"BoxPlot of The 12 Highest Abundant Species\",               xlab=\"Abundance [sqrt scale]\",ylab=\"\",              transformation=\"sqrt\",t.lab=\"o\",shift=TRUE) #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  PIPING TO 1st MVFACTOR  #> Only the variables Halanonchus_sp., Terschellingia_longicaudata, Dorylaimopsis_punctatus, Marylynnia_complexa, Molgolaimus_sp., Aponema_torosa, Spirinia_parasitifera, Odontophora_sp., Daptonema_sp.1, Prochromadorella_sp., Halichoanolaimus_dolichurus, Sabatieria_longicaudata were included in the plot  #> (the variables with highest total abundance)."},{"path":"https://fontikar.github.io/mvabund/reference/coefplot.manyglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots the coefficients of the covariates of a manyglm object with confidence intervals. — coefplot.manyglm","title":"Plots the coefficients of the covariates of a manyglm object with confidence intervals. — coefplot.manyglm","text":"way plot coefficients covariates manyglm object. Modifies code Niku, Hui Taskinen's coefplot.gllvm","code":""},{"path":"https://fontikar.github.io/mvabund/reference/coefplot.manyglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots the coefficients of the covariates of a manyglm object with confidence intervals. — coefplot.manyglm","text":"","code":"# S3 method for manyglm coefplot(   object,   y.label = TRUE,   which.Xcoef = NULL,   which.Ys = NULL,   incl.intercept = FALSE,   cex.ylab = 0.5,   mfrow = NULL,   mar = NULL,   ... )"},{"path":"https://fontikar.github.io/mvabund/reference/coefplot.manyglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots the coefficients of the covariates of a manyglm object with confidence intervals. — coefplot.manyglm","text":"object manyglm object y.label Whether Y variables labelled .Xcoef X covariates included plot. .Ys Y variables included plot. incl.intercept Whether intercept coefficient included. cex.ylab plotting parameter. default 0.5. mfrow Plotting parameter mar Plotting parameter ... plotting parameters","code":""},{"path":"https://fontikar.github.io/mvabund/reference/coefplot.manyglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots the coefficients of the covariates of a manyglm object with confidence intervals. — coefplot.manyglm","text":"none","code":""},{"path":"https://fontikar.github.io/mvabund/reference/cv.glm1path.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the best model by corss-validation. — cv.glm1path","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the best model by corss-validation. — cv.glm1path","text":"Fits sequence (path) generalised linear models LASSO penalties, using iteratively reweighted local linearisation approach. whole path models returned, well one minimises predictive log-likelihood random test observations. Can handle negative binomial family, even overdispersion parameter unknown, well GLM families.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/cv.glm1path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the best model by corss-validation. — cv.glm1path","text":"","code":"cv.glm1path(object, block = NULL, best=\"min\", plot=TRUE, prop.test=0.2, n.split = 10,     seed=NULL, show.progress=FALSE, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/cv.glm1path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the best model by corss-validation. — cv.glm1path","text":"object Output glm1path fit. block factor specifying blocking variable, training/test splits randomly assign blocks observations different groups rather breaking observations within blocks. Default (NULL) randomly split rows test training groups. best best-fitting model determined? \"1se\" uses one standard error rule, \"min\" (value) return model best predictive performance. WARNING: David needs check se calculatios... plot Logical value indicating whether plot predictive log-likelihood function model complexity. prop.test proportion observations (blocks) assign test observations. Default value 0.2 gives 80:20 training:test split. n.split number random training/test splits use. Default 10 merrier (slower). seed vector seeds use random test/training splits. useful want able exactly replicate analyses, without Monte Carlo variation splits. Default used fixed seeds. show.progress Logical argument, TRUE, console report run seed completed. option included function can take yonks run large datasets. ... arguments passed glm1path.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/cv.glm1path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the best model by corss-validation. — cv.glm1path","text":"function fits series LASSO-penalised generalised linear models, different values LASSO penalty, glm1path. main difference best fitting model selected cross-validation, using n.test different random training/test splits estimate predictive performance new (test) data. Mean predictive log-likelihood (per test observation) used criterion choosing best model, connections Kullback-Leibler distance. best argument controls whether select model maximises predictive log-likelihood, smallest model within 1se maximum ('1 standard error rule'). details function glm1path.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/cv.glm1path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the best model by corss-validation. — cv.glm1path","text":"coefficients Vector model coefficients best-fitting model (judged predictive log-likelihood) lambda value LASOS penalty parameter, lambda, best-fitting model (judged predictive log-likelihood) glm1.best glm1 fit best-fitting model (judged predictive log-likelihood). contains see glm1. .coefficients matrix column represents model coefficients fit along path specified lambdas. lambdas vector specifying path values LASSO penalty, arranged largest (strongest penalty, smallest fitted model) smallest (giving largest fitted model). logL vector log-likelihood values model along path. df vector giving number non-zero parameter estimates (crude measure degrees freedom) model along path. bics vector BIC values model along path. Calculated using penalty model complexity specified input argument k. counter vector counting many iterations convergence, model along path. check vector logical values specifying whether Karush-Kuhn-Tucker conditions satisfied solution. phis negative binomial regression - vector overdispersion parameters, model along path. y vector values response variable specified input argument. X design matrix p explanatory variables specified input argument. penalty vector multiplied lambda make penalty fitted model. family family argument specified input. ll.cv mean predictive log-likelihood, averaged observations training/test splits. se Estimated standard error mean predictive log-likelihood.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/cv.glm1path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the best model by corss-validation. — cv.glm1path","text":"Osborne, M.R., Presnell, B. Turlach, B.. (2000) LASSO dual. Journal Computational Graphical Statistics, 9, 319-337.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/cv.glm1path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the best model by corss-validation. — cv.glm1path","text":"David . Warton <David.Warton@unsw.edu.au>","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/cv.glm1path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the best model by corss-validation. — cv.glm1path","text":"","code":"data(spider) Alopacce <- spider$abund[,1] X <- model.matrix(~.,data=spider$x) # to get design matrix with intercept term  # fit a LASSO-penalised negative binomial regression: ft = glm1path(Alopacce,X,lam.min=0.1) coef(ft) #>   (Intercept)      soil.dry     bare.sand fallen.leaves          moss  #>    -1.9332758    -0.6282024     0.0000000    -0.2420786     0.1581210  #>    herb.layer    reflection  #>     0.6024593     0.7663732   # now estimate the best-fitting model by cross-validation: cvft = cv.glm1path(ft) #> Warning: non-convergence!!! #> Warning: non-convergence!!!  coef(cvft) #>   (Intercept)      soil.dry     bare.sand fallen.leaves          moss  #>    -1.7804113    -0.5750643     0.0000000    -0.2358622     0.1562807  #>    herb.layer    reflection  #>     0.5508687     0.7472734"},{"path":"https://fontikar.github.io/mvabund/reference/deviance.manylm.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Deviance — deviance.manylm","title":"Model Deviance — deviance.manylm","text":"Returns deviance fitted multivariate model object abundance data.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/deviance.manylm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Deviance — deviance.manylm","text":"","code":"<!-- % deviance.manylm --> # S3 method for manylm deviance(object, na.action=\"na.omit\", ...)"},{"path":"https://fontikar.github.io/mvabund/reference/deviance.manylm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Deviance — deviance.manylm","text":"object manylm object. na.action deal NA values. Can one  \"na.omit\", \"na.exclude\", \"na.fail\", NULL ... additional optional arguments.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/deviance.manylm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Deviance — deviance.manylm","text":"value deviance extracted object object.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/deviance.manylm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Deviance — deviance.manylm","text":"","code":"data(spider) spiddat <- mvabund(spider$abund)  ## Calculate the deviance: deviance(manylm(spiddat~., data=spider$x)) #>  Alopacce  Alopcune  Alopfabr  Arctlute  Arctperi  Auloalbi  Pardlugu  Pardmont  #>  582.8805 1077.0617  284.8376  114.4330  141.9078  947.7414 1815.1110 8741.4379  #>  Pardnigr  Pardpull  Trocterr  Zoraspin  #> 9795.7518 7376.4087 7555.8311  925.6918"},{"path":"https://fontikar.github.io/mvabund/reference/extend.x.formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend a Formula to all of it's Terms — extend.x.formula","title":"Extend a Formula to all of it's Terms — extend.x.formula","text":"extend compact formula terms interpreted","code":""},{"path":"https://fontikar.github.io/mvabund/reference/extend.x.formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend a Formula to all of it's Terms — extend.x.formula","text":"","code":"extend.x.formula(formula, extend.term=TRUE, return.interaction=TRUE)"},{"path":"https://fontikar.github.io/mvabund/reference/extend.x.formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend a Formula to all of it's Terms — extend.x.formula","text":"formula model formula. extend.term logical. TRUE terms refer multiple variables  split multiple terms. return.interaction logical. Whether list containing new formula  vector containing logical values information interactions returned new formula.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/extend.x.formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend a Formula to all of it's Terms — extend.x.formula","text":"return.interaction TRUE list containing components: formula new formula. .interaction logical, vector giving information  whether corresponding formula term interaction .","code":""},{"path":"https://fontikar.github.io/mvabund/reference/extend.x.formula.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extend a Formula to all of it's Terms — extend.x.formula","text":"Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/extend.x.formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extend a Formula to all of it's Terms — extend.x.formula","text":"","code":"data(spider) spiddat <- mvabund(spider$abund) X <- spider$x  foo <- mvformula(spiddat~ X[,1]*X[,2]+log(X[,3])) #> Error in eval(terms(x)[[2]]): object 'spiddat' not found extend.x.formula(foo) #> Error in terms(formula): object 'foo' not found"},{"path":"https://fontikar.github.io/mvabund/reference/formulaUnimva.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a List of Univariate Formulas — formulaUnimva","title":"Create a List of Univariate Formulas — formulaUnimva","text":"Create list m univariate formulas given formula multivariate response dimension m.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/formulaUnimva.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a List of Univariate Formulas — formulaUnimva","text":"","code":"formulaUnimva(formula, var.subset, split.x=FALSE, intercept=0,   allow.noresp=FALSE)"},{"path":"https://fontikar.github.io/mvabund/reference/formulaUnimva.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a List of Univariate Formulas — formulaUnimva","text":"formula formula mvformula, elements allowed data.frames. var.subset optional vector variable numbers use. split.x logical, whether explanatory terms matrices split added single term. useful plotting formulas. intercept numeric, either 1 Intercept included formula  0 Intercept formula. allow.noresp logical, whether empty response allowed (list one element returned) (result error.)","code":""},{"path":"https://fontikar.github.io/mvabund/reference/formulaUnimva.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a List of Univariate Formulas — formulaUnimva","text":"list containing m formulas univariate responses chosen var.subset.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/formulaUnimva.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a List of Univariate Formulas — formulaUnimva","text":"Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/formulaUnimva.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a List of Univariate Formulas — formulaUnimva","text":"","code":"data(spider) spiddat <- mvabund(spider$abund) X <- spider$x  formulaUnimva(spiddat~X) #> Error in eval(respname): object 'spiddat' not found"},{"path":"https://fontikar.github.io/mvabund/reference/glm1.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits a Generalised Linear Models with a LASSO (or L1) penalty, given a value of the penalty parameter. — glm1","title":"Fits a Generalised Linear Models with a LASSO (or L1) penalty, given a value of the penalty parameter. — glm1","text":"Fits generalised linear model LASSO penalty, using iteratively reweighted local linearisation approach, given value penalty parameter (lamb). Can handle negative binomial family, even overdispersion parameter unknown, well GLM families.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/glm1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits a Generalised Linear Models with a LASSO (or L1) penalty, given a value of the penalty parameter. — glm1","text":"","code":"glm1(y, X, lambda, family = \"negative.binomial\", weights = rep(1, length(y)),      b.init = NA, phi.init = NA, phi.method = \"ML\", tol = c(1e-08, .Machine$double.eps),      n.iter = 100, phi.iter = 1)"},{"path":"https://fontikar.github.io/mvabund/reference/glm1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits a Generalised Linear Models with a LASSO (or L1) penalty, given a value of the penalty parameter. — glm1","text":"y vector values response variable. X design matrix p explanatory variables. family family response variable, see family. Negative binomial unknown overdispersion can specified \"negative.binomial\", default. lambda penalty parameter applied slope parameters. Different penalties can specified different parameters specifying lamb vector, whose length number columns X. scalar, penalty applied uniformly across parameters except first (assuming intercept) weights Observation weights. might useful want fit Poisson point process model... b.init Initial slope estimate. Must vector length number columns X. phi.init Initial estimate negative binomial overdispersion parameter. Must scalar. phi.method Method estimating overdispersion. tol vector two values, specifying convergence tolerance, value truncate fitted values . n.iter Number iterations attempt bailing. phi.iter Number iterations estimating negative binomial overdispersion parameter (applicable) returning slope estimation. Default one step, .e. iterating one-step estimates beta phi.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/glm1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fits a Generalised Linear Models with a LASSO (or L1) penalty, given a value of the penalty parameter. — glm1","text":"function fits generalised linear model LASSO penalty, sometimes referred L1 penalty L1 norm, hence name glm1. model fit using local linearisation approach Osborne et al (2000), nested inside iteratively reweighted (penalised) least squares. Look fastest thing going around, try glmnet want something faster (possibly rougher approximation). main advantage glm1 function written accept glm family argument (although yet tested beyond discrete data!), also negative binomial distribution, especially useful modelling overdispersed counts. negative binomial unknown overdispersion use \"negative.binomial\", overdispersion specified, use negative.binomial(theta) MASS package. Note output refers phi=1/theta, .e. overdispersion parameterised variance mu+phi*mu^2. Hence values phi close zero suggest little overdispersion, values one suggest lot.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/glm1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits a Generalised Linear Models with a LASSO (or L1) penalty, given a value of the penalty parameter. — glm1","text":"coefficients Vector parameter estimates fitted.values Vector predicted values (scale original response) logLs Vector log-likelihoods iteration model.  last entry log-likelihood final fit. phis Estimated overdispersion parameter iteration, negative binomial fit. phi Final estimate overdispersion parameter, negative binomial fit. score Vector score equation values parameter model. counter Number iterations convergence. Set Inf model converge. check Logical whether Kuhn-KArush-Tucker conditions saitsfied.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/glm1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fits a Generalised Linear Models with a LASSO (or L1) penalty, given a value of the penalty parameter. — glm1","text":"Osborne, M.R., Presnell, B. Turlach, B.. (2000) LASSO dual. Journal Computational Graphical Statistics, 9, 319-337.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/glm1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fits a Generalised Linear Models with a LASSO (or L1) penalty, given a value of the penalty parameter. — glm1","text":"David . Warton <David.Warton@unsw.edu.au>, Ian W. Renner Luke Wilson.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/glm1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fits a Generalised Linear Models with a LASSO (or L1) penalty, given a value of the penalty parameter. — glm1","text":"","code":"data(spider) Alopacce <- spider$abund[,1] X <- model.matrix(~.,data=spider$x) # to get design matrix with intercept term #fit a LASSO-penalised negative binomial GLM, with penalty parameter 10: ft = glm1(Alopacce,X,lambda=10)  plot(ft$logLs) # a plot of the log-likelihood, each iteration to convergence  coef(ft) # coefficients in the final model #>   (Intercept)      soil.dry     bare.sand fallen.leaves          moss  #>   -0.15536720    0.00000000    0.00000000   -0.37292658    0.07882227  #>    herb.layer    reflection  #>    0.00000000    0.58721954"},{"path":"https://fontikar.github.io/mvabund/reference/glm1path.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the model that minimises BIC. — glm1path","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the model that minimises BIC. — glm1path","text":"Fits sequence (path) generalised linear models LASSO penalties, using iteratively reweighted local linearisation approach. whole path models returned, well one minimises BIC. Can handle negative binomial family, even overdispersion parameter unknown, well GLM families.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/glm1path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the model that minimises BIC. — glm1path","text":"","code":"glm1path(y, X, family = \"negative.binomial\", lambdas = NULL,   penalty = c(0, rep(1, dim(X)[2]-1)), df.max = sum(y > 0), n.lambda = 25, lam.max = NULL,   lam.min = NULL, k = log(length(y)), b.init = NA, phi.init = NA, phi.iter = 1, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/glm1path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the model that minimises BIC. — glm1path","text":"y vector values response variable. X design matrix p explanatory variables. family family response variable, see family. Negative binomial unknown overdispersion can specified \"negative.binomial\", default. lambdas optional vector LASSO penalty parameters, specifying path along models fitted. penalty applied parameters specified penalty. default, geometric sequence values constructed n.lambda values, starting intercept model reducing lambda 1.e-6 original value. vector provided sorted decreasing order, smallest model (biggest penalty) fitted first. penalty vector multiplied lambda make penalty fitted model. main purpose allow penalties applied parameters others, also used change size penalty terms compared others (e.g. fit adaptive LASSO). Must length dimension model, dim(X)[2]. df.max maximum number terms permitted fitted model. threshhold reached fits attempted. default break-point number non-zero values response vector. n.lambda number models fit along path (previously specified via lambdas). lam.max maximum value LASSO penalty use along path fitted values (previously specified via lambdas). lam.min minimum value LASSO penalty use along path fitted values (previously specified via lambdas). k BIC calculation, value penalty per parameter fitted model. default value, log(length(y)), gives BIC (known consistent, adaptive LASSO), changing 2 give AIC (great terms properties). b.init initial value beta first model along fitted path. Default fit intercept model. phi.init negative binomial models: initial value overdispersion parameter first model along fitted path. Default zero (Poisson fit). phi.iter Number iterations estimating negative binomial overdispersion parameter (applicable) returning slope estimation. Default one step, .e. iterating one-step estimates beta phi. ... Arguments passed glm1.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/glm1path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the model that minimises BIC. — glm1path","text":"function fits series LASSO-penalised generalised linear models, different values LASSO penalty. Largely inspired glmnet package. results  path fitted models, small ones (big LASSO penalties) larger ones (smaller penalties). individual model fitted using  glm1 function, uses local linearisation approach Osborne et al (2000), nested inside iteratively reweighted (penalised) least squares, using results previous fit initial estimates. Look fastest thing going around, try glmnet want something faster (possibly rougher approximation). main advantage glm1path function written accept glm family argument (although yet tested beyond discrete data!), also negative binomial distribution, especially useful modelling overdispersed counts. negative binomial unknown overdispersion use \"negative.binomial\", overdispersion specified, use negative.binomial(theta) MASS package. Note output refers phi=1/theta, .e. overdispersion parameterised output variance mu+phi*mu^2. Hence values phi close zero suggest little overdispersion, values one suggest lot. can use residuals plot functions glm1path objects order compute Dunn-Smyth residuals plots residuals linear predictors, manyglm.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/glm1path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the model that minimises BIC. — glm1path","text":"object class glm1path following components: coefficients Vector model coefficients best-fitting model (judged BIC) lambda value LASOS penalty parameter, lambda, best-fitting model (judged BIC) glm1.best glm1 fit best-fitting model (judged BIC). contains see glm1. .coefficients matrix column represents model coefficients fit along path specified lambdas. lambdas vector specifying path values LASSO penalty, arranged largest (strongest penalty, smallest fitted model) smallest (giving largest fitted model). logL vector log-likelihood values model along path. df vector giving number non-zero parameter estimates (crude measure degrees freedom) model along path. bics vector BIC values model along path. Calculated using penalty model complexity specified input argument k. counter vector counting many iterations convergence, model along path. check vector logical values specifying whether Karush-Kuhn-Tucker conditions satisfied solution. phis negative binomial regression - vector overdispersion parameters, model along path. y vector values response variable specified input argument. X design matrix p explanatory variables specified input argument. penalty vector multiplied lambda make penalty fitted model. family family argument specified input.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/glm1path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the model that minimises BIC. — glm1path","text":"Osborne, M.R., Presnell, B. Turlach, B.. (2000) LASSO dual. Journal Computational Graphical Statistics, 9, 319-337.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/glm1path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the model that minimises BIC. — glm1path","text":"David . Warton <David.Warton@unsw.edu.au>","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/glm1path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fits a path of Generalised Linear Models with LASSO (or L1) penalties, and finds the model that minimises BIC. — glm1path","text":"","code":"data(spider) Alopacce <- spider$abund[,1] X <- model.matrix(~.,data=spider$x) # to get design matrix with intercept term  # fit a LASSO-penalised negative binomial regression: ft = glm1path(Alopacce,X) # have a look at the BICS for all models: plot(ft$bics~ft$lambdas, log=\"x\")   #the action seems to be at lambda above 0.1, re-do with a minimum lambda at 0.1 and more lambdas: ft2 = glm1path(Alopacce,X,lam.min=0.1,n.lambda=100) plot(ft2$bics~ft2$lambdas, log=\"x\")   # return the slope estimates for the best-fitting model: coef(ft2) #>   (Intercept)      soil.dry     bare.sand fallen.leaves          moss  #>    -1.9991080    -0.6494688     0.0000000    -0.2470569     0.1583804  #>    herb.layer    reflection  #>     0.6234800     0.7753254   # look at a residual plot: plot(ft2)"},{"path":"https://fontikar.github.io/mvabund/reference/logLik.manylm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Log Likelihood — logLik.manylm","title":"Calculate the Log Likelihood — logLik.manylm","text":"Calculate log likelihood multivariate linear model.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/logLik.manylm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Log Likelihood — logLik.manylm","text":"","code":"<!-- % logLik.manylm --> # S3 method for manylm logLik(object, REML = FALSE, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/logLik.manylm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Log Likelihood — logLik.manylm","text":"object manylm object log-likelihood value     extracted. ... methods function require additional arguments. REML optional logical value.  TRUE restricted     log-likelihood returned, else, FALSE,     log-likelihood returned.  Defaults FALSE.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/logLik.manylm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Log Likelihood — logLik.manylm","text":"assumed scale estimated (maximum likelihood REML), constants log-likelihood included.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/logLik.manylm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Log Likelihood — logLik.manylm","text":"Returns object, say r, class logLik   number attributes, attr(r, \"df\") (degrees  freedom) giving number (estimated) parameters model.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/logLik.manylm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Log Likelihood — logLik.manylm","text":"","code":"data(spider) spiddat <- mvabund(spider$abund) lm.spider <- manylm(spiddat~., data=spider$x) logLik(lm.spider) #> 'log Lik.'  -82.23117,  -90.82730,  -72.20628,  -59.43927,  -62.45190,  -89.03656,  -98.13404, -120.14104, -121.73527, -117.76401, -118.10046,  -88.70699 (df=8)"},{"path":"https://fontikar.github.io/mvabund/reference/manyany.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Many Univariate Models to Multivariate Abundance Data — manyany","title":"Fitting Many Univariate Models to Multivariate Abundance Data — manyany","text":"manyany used fit many univariate models (GLMs, GAMs, otherwise) high-dimensional data, multivariate abundance data ecology. base model-fitting function - see plot.manyany assumption checking, anova.manyany significance testing.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manyany.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Many Univariate Models to Multivariate Abundance Data — manyany","text":"","code":"manyany(formula, fn, family=\"negative.binomial\", data, composition = FALSE,  block = NULL, get.what=\"details\", var.power=NA, na.action = \"na.exclude\", ...) # S3 method for manyany print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)"},{"path":"https://fontikar.github.io/mvabund/reference/manyany.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Many Univariate Models to Multivariate Abundance Data — manyany","text":"formula object class \"formula\" (one     can coerced class): symbolic description     model fitted.  details model specification given     Details. fn character string giving name function univariate     model applied. e.g. \"glm\". family description error distribution function used      model, either character string, family object,     list objects, one response variable dataset.     list enables fitting models different distributions different     responses. See Details families currently supported. data optional data frame containing predictor variables (matrix also acceptable). composition logical. FALSE (default) fits separate model species.     TRUE fits single model variables, including site row effect,     terms model relative abundance (compositional effects). block factor specifying sampling level resampled. Default     resampling rows (composition=TRUE manyany command, means resampling     rows data originally sent manyany). get.return model fit: \"details\" (default) includes     predicted values residuals output, \"models\" also returns fitted objects     model, \"none\" returns just log-likelihood (mostly internal use). var.power power parameter, using tweedie distribution. na.action Default set exclude (details see     na.exclude) avoid errors NA's predictors. ... arguments passed fitting function. x object class \"manyany\", usually, result call   manyany. digits many digits include printed anova table.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manyany.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting Many Univariate Models to Multivariate Abundance Data — manyany","text":"manyany can used fit model type specified fn many variables    simultaneously, generalisation manyglm handle model types.    able handle fixed effects modelling function     predict logLik functions, accepts family argument,     provided family list (currently 'gaussian', 'poisson', 'binomial',     'negative.binomial' 'tweedie', although models ordinal data also accepted     using clm function ordinal package). Models manyany    specified symbolically, see example details section lm    formula. Unlike manyglm, function accepts family functions arguments instead just character strings, giving greater flexibility. example, use family=binomial(link=\"probit\") fit model using probit link, rather  restricted default logit link cloglog links available manyglm. data argument required, must dataframe. Setting composition=TRUE enables compositional analyses, predictors used model relative abundance rather mean abundance. achieved vectorising response matrix fitting single model across variables, row effect account differences relative abundance across rows. default composition=FALSE just fits separate model variable.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manyany.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Many Univariate Models to Multivariate Abundance Data — manyany","text":"manyany returns object inheriting \"manyany\". function anova (.e. anova.manyany) produce significance test comparing two manyany objects.   Currently summary resampling function objects class. generic accessor functions fitted.values, residuals, logLik, AIC, plot can used extract various useful features value returned manyany. object class \"manyany\" list containing least   following components: logL vector log-likelihood terms response variable fitted model. fitted.values matrix fitted mean values, obtained transforming linear predictors inverse link function. residuals matrix probability integral transform (PIT) residuals.      fitted model good fit, approximately standard uniformly distributed. linear.predictor linear fit link scale. ordinal models fitted using clm, values first category . family vector family arguments, one response variable. call matched call. model model.frame model last response variable. terms list terms model last response variable.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manyany.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting Many Univariate Models to Multivariate Abundance Data — manyany","text":"Warton D. ., Wright S., Wang, Y. (2012). Distance-based multivariate analyses confound location dispersion effects. Methods Ecology Evolution, 3(1), 89-101.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manyany.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fitting Many Univariate Models to Multivariate Abundance Data — manyany","text":"David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/manyany.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Many Univariate Models to Multivariate Abundance Data — manyany","text":"","code":"data(spider)  spider = list(abund=spider$abund, x = as.matrix(spider$x))  ## To fit a log-linear model assuming counts are negative binomial, via manyglm: spidNB <- manyany(abund~x,\"manyglm\",data=spider,family=\"negative.binomial\")  logLik(spidNB) # a number of generic functions are applible to manyany objects #> 'log Lik.'  -49.51101,  -60.20230,  -36.39022,  -19.52376,  -13.16926,  -38.04373,  -42.00720,  -77.41203,  -62.98501,  -59.00716, -102.40402,  -58.06324 (df=8)  ## To fit a glm with complementary log-log link to presence/absence data: PAdat = pmin(as.matrix(spider$abund),1) #constructing presence/absence dataset spidPA <- manyany(PAdat~x,\"glm\",data=spider,family=binomial(\"cloglog\")) #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: The binomial option of manyany currently assumes you have binary (presence/absence) response #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred plot(spidPA)  # There are some wild values in there for the Pardmont variable (residuals >5 or <-8). #The Pardmont model didn't converge, coefficients are a bit crazy: coef(spidPA)  #> $Alopacce #> [1] 12.610426 -4.275471 -1.578333 -7.465024 -7.668445 -5.689413 15.577355 #>  #> $Alopcune #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>      40.755529       1.046846      -1.148942      -8.796359      -3.651156  #>    xherb.layer    xreflection  #>       1.182889      -8.465781  #>  #> $Alopfabr #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>      22.477336      -3.660202       6.492114      -5.242130      -3.716355  #>    xherb.layer    xreflection  #>      -6.171588       6.338843  #>  #> $Arctlute #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>     -642.02191      156.42282       14.03597      -15.54365       13.55838  #>    xherb.layer    xreflection  #>       24.75965       26.73644  #>  #> $Arctperi #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>     -49.907339     -34.069752       1.950087      18.654753       4.948560  #>    xherb.layer    xreflection  #>       5.614406      16.439587  #>  #> $Auloalbi #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>    -20.4246306     -0.1104993      0.1761960      0.2060495      0.9017341  #>    xherb.layer    xreflection  #>      6.1801043     -2.0868843  #>  #> $Pardlugu #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>      7.2112726     -2.2498048     -0.6330969      0.3860805     -1.8652410  #>    xherb.layer    xreflection  #>      1.1984500     -0.5053049  #>  #> $Pardmont #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>   1.536923e+15   4.944832e+14   2.169316e+14  -9.526554e+14   6.714226e+14  #>    xherb.layer    xreflection  #>   3.166165e+14  -1.199994e+15  #>  #> $Pardnigr #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>      8.8165987      2.1726394     -0.3213910     -3.6870594     -0.7737974  #>    xherb.layer    xreflection  #>      1.1655606     -4.0442176  #>  #> $Pardpull #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>     -6.4895684      2.3054120     -0.9864974     -1.3783855      0.8427496  #>    xherb.layer    xreflection  #>      1.8552056     -1.8123416  #>  #> $Trocterr #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>     14.7698864      0.7379789     -0.6458920     -0.5737068     -2.9745472  #>    xherb.layer    xreflection  #>     -1.1634160      0.3764505  #>  #> $Zoraspin #>    (Intercept)      xsoil.dry     xbare.sand xfallen.leaves          xmoss  #>      23.157371       9.268674      -1.004993     -11.209499      -2.727216  #>    xherb.layer    xreflection  #>       4.307227     -14.399385  #>   # could try again using the glm2 package to fit the models, this fixes things up: if (FALSE) library(glm2) if (FALSE) spidPA2<-manyany(PAdat~x,\"glm\",data=spider,family=binomial(\"cloglog\"),method=\"glm.fit2\") if (FALSE) plot(spidPA2) #looks much better.  ## To simultaneously fit models to ordinal data using the ordinal package: if (FALSE) library(ordinal) ## First construct an ordinal dataset: if (FALSE) spidOrd = spider$abund if (FALSE) spidOrd[spider$abund>1 & spider$abund<=10]=2 if (FALSE) spidOrd[spider$abund>10]=3 ## Now fit a model using the clm function: if (FALSE) manyOrd=manyany(spidOrd~bare.sand+fallen.leaves,\"clm\",data=data.frame(spider$x)) if (FALSE) plot(manyOrd)"},{"path":"https://fontikar.github.io/mvabund/reference/manyglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Generalized Linear Models for Multivariate Abundance Data — manyglm","title":"Fitting Generalized Linear Models for Multivariate Abundance Data — manyglm","text":"manyglm used fit generalized linear models high-dimensional data, multivariate abundance data ecology. base model-fitting function - see plot.manyglm assumption checking, anova.manyglm summary.manyglm significance testing.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manyglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Generalized Linear Models for Multivariate Abundance Data — manyglm","text":"","code":"manyglm(formula, family=\"negative.binomial\", composition=FALSE, data=NULL, subset=NULL,     na.action=options(\"na.action\"), K=1, theta.method = \"PHI\", model = FALSE,     x = TRUE, y = TRUE, qr = TRUE, cor.type= \"I\", shrink.param=NULL,     tol=sqrt(.Machine$double.eps), maxiter=25, maxiter2=10,     show.coef=FALSE, show.fitted=FALSE, show.residuals=FALSE,     show.warning=FALSE, offset, ... )"},{"path":"https://fontikar.github.io/mvabund/reference/manyglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Generalized Linear Models for Multivariate Abundance Data — manyglm","text":"formula object class \"formula\" (one     can coerced class): symbolic description     model fitted.  details model specification given     Details. family description distribution function used     model. default negative binomial regression (using log     link, unknown overdispersion parameter), following family     functions also accepted: binomial(), binomial(link=\"cloglog\"),     poisson(), Gamma(link=\"log\"), can also specified using character strings     'binomial', 'cloglog' 'poisson', 'gamma' respectively. future hope     include family functions described family. data optional data frame, list environment (object     coercible .data.frame data frame) containing     variables model. found data, variables     taken environment(formula), typically environment     glm called. composition FALSE (default) model abundance, TRUE model relative abundance, adding row effect model, partition effects environmental variables main effects (alpha, total abundance/richness) interactions response (beta, relative abundance/turnover). See details. subset optional vector specifying subset observations     used fitting process. na.action function indicates happen     data contain NAs.  default set     na.action setting options,     na.fail unset.  ‘factory-fresh’     default na.omit.  Another possible value     NULL, action.  Value na.exclude can useful. K number trials binomial regression. default, K=1 presence-absence data using logistic regression. theta.method method used estimation overdisperson   parameter theta, mean-variance relationship V=m+m^2/theta   negative binomial family. offers three options    \"PHI\" = Maximum likelihood estimation respect phi (default)   \"ML\" = Maximum likelihood estimation respect theta, Lawless(1987), default gamma family.    \"Chi2\" = Moment estimation using chi-square dampening log scale,   Hilbe(2008).   \"MM\" = Moment estimation gamma family. model, x, y, qr logicals. TRUE corresponding   components fit (model frame, model matrix, model   matrix, response, QR decomposition model matrix)   returned. cor.type structure imposed estimated correlation   matrix fitted model. Can \"\"(default), \"shrink\", \"R\".   See Details. parameter merely stored manyglm,   used default value cor.type subsequent   functions inference. shrink.param shrinkage parameter used cor.type=\"shrink\". numerical   value supplied, estimated data cross   validation-penalised normal likelihood Warton (2008). parameter   value stored attribute manyglm object,   used subsequent functions inference. tol tolerance used estimation. maxiter maximum allowed iterations weighted least square estimation beta. default value 25. maxiter2 maximum allowed iterations internal ML estimations negative binomial regression. default value 10. show.coef, show.fitted, show.residuals, show.warning logical. Whether show model coefficients, fitted values, standardized pearson residuals, operation warnings. offset can used specify _a priori_ known component included linear predictor fitting. 'NULL' numeric vector length equal NROW (.e. number observations) matrix NROW times p (.e. number species). ... arguments passed methods.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manyglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting Generalized Linear Models for Multivariate Abundance Data — manyglm","text":"manyglm used calculate parameter estimates generalised linear models fitted many variables simultaneously Warton et. al. (2012) Wang et.al.(2012). Models manyglm specified symbolically. details specify formula see details section lm formula. Generalised linear models designed non-normal data distribution can specified offers reasonable model data, specified using argument family. manyglm function currently handles count binary data, accepts either character argument family argument common choices family. binary (presence/absence) data, family=binomial() can used logistic regression (logit link, \"logistic regression\"), complementary log-log link can used family=binomial(\"cloglog\"), arguably better  choice presence-absence data. Poisson regression family=poisson() can used counts \"overdispersed\" (, variance larger mean), although multivariate abundance data shown negative binomial distribution (family=\"negative.binomial\") usually better choice (Warton 2005). cases, log-link used. another link function family desired, can specified using manyany function, accepts regular family arguments. composition=TRUE allows relative abundance modelled rather absolute abundance, useful partitioning effects environmental variables alpha vs beta diversity, needed variation sampling intensity due variables measured. Data manipulated \"long format\", column factor called cols row variable called rows, model fitted using main effects predictors provided formula, plus rows, cols interaction predictors cols. Inclusion rows model accounts variation sampling intensity across rows, main effects environmental variables capture effects total abundance/richness (alpha diversity), interaction cols captures changes relative abundance/turnover (beta diversity). Unfortunately, data efficiently stored long format, models slower fit using composition=TRUE. negative binomial regression, overdispersion parameter (theta) estimated separately variable data, controlled theta.method negative binomial distributions. iterate updates theta generalised linear model updates regression parameters, many maxiter2 times.         cor.type structure imposed estimated correlation matrix fitted model. Possible values : \"\"(default) = independence assumed (correlation matrix identity) \"shrink\" = sample correlation matrix shrunk towards improve stability. \"R\" = unstructured correlation matrix used.  (available N>p.) cor.type==\"shrink\", numerical value assigned shrink.param either argument internal estimation. working horse function internal estimation ridgeParamEst, based cross-validation (Warton 2008). validation groups chosen random assignment, slight variation estimated values may observed repeat analyses. See ridgeParamEst details. shrinkage parameter can value 0 1 (0=\"\" 1=\"R\", values closer towards 0 indicate shrinkage towards \"\").","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manyglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Generalized Linear Models for Multivariate Abundance Data — manyglm","text":"manyglm returns object inheriting \"manyglm\",  \"manylm\" \"mglm\". function summary (.e. summary.manyglm) can used obtain print summary results function  anova (.e. anova.manyglm) produce   analysis variance table, although note functions use resampling can take fit. generic accessor functions coefficients,  fitted.values residuals can used   extract various useful features value returned manyglm.  object class \"manyglm\" list containing least   following components: coefficients named matrix coefficients. var.coefficients estimated variances coefficient. fitted.values matrix fitted mean values, obtained transforming linear predictors inverse link function. linear.predictor linear fit scale linear predictor. residuals matrix working residuals, Pearson residuals standardized leverage adjustment h obtained diagonal elements hat matrix H. PIT.residuals probability integral transform (PIT) residuals - model fits well approximately standard uniform values evenly scattered 0 1. calculation involves randomisation, different fits return slightly different values PIT residuals. sqrt.1_Hii matrix scale terms used standardize Pearson reidusals. var.estimator estimated variance observation, computed using corresponding family function. sqrt.weight matrix square root working weights,  estimated corresponding family function. theta estimated nuisance parameters accounting overdispersion two.loglike two times log likelihood. deviance constant, minus twice maximized log-likelihood.  sensible, constant chosen saturated model deviance zero. iter number iterations IWLS used. data data frame storing input data. stderr.coefficients estimated standard error coefficient. phi inverse theta tol tolerance used estimations. maxiter,maxiter2,family,theta.method,cor.type,formula arguments supplied manyglm call. aic vector returning Akaike's Information Criterion response variable - minus twice     maximized log-likelihood plus twice number coefficients. AICsum sum AIC's variables. shrink.param shrink parameter used subsequent inference. call matched call. terms terms object used. rank numeric rank fitted linear model. xlevels (relevant) record levels factors used fitting. df.residual residual degrees freedom. x argument x TRUE, design matrix used. y argument y TRUE, response variables used. model argument model TRUE, model.frame. qr argument qr TRUE, QR decomposition design matrix. show.coef,show.fitted,show.residuals arguments supplied manyglm call concerning presented output. offset offset data used (applicable).","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manyglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting Generalized Linear Models for Multivariate Abundance Data — manyglm","text":"Lawless, J. F. (1987) Negative binomial mixed Poisson regression, Canadian Journal Statistics 15, 209-225. Hilbe, J. M. (2008) Negative Binomial Regression, Cambridge University Press, Cambridge. Warton D.. (2005) Many zeros mean zero inflation: comparing goodness -fit parametric models multivariate abundance data, Environmetrics 16(3), 275-289. Warton D.. (2008). Penalized normal likelihood ridge regularization correlation covariance matrices. Journal American Statistical Association 103, 340-349. Warton D.. (2011). Regularized sandwich estimators analysis high dimensional data using generalized estimating equations. Biometrics, 67(1), 116-123. Warton D. ., Wright S., Wang, Y. (2012). Distance-based multivariate analyses confound location dispersion effects. Methods Ecology Evolution, 3(1), 89-101. Wang Y., Neuman U., Wright S. Warton D. . (2012). mvabund: R package model-based analysis multivariate abundance data. Methods Ecology Evolution. online 21 Feb 2012.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manyglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fitting Generalized Linear Models for Multivariate Abundance Data — manyglm","text":"Yi Wang, Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/manyglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Generalized Linear Models for Multivariate Abundance Data — manyglm","text":"","code":"data(spider) spiddat <- mvabund(spider$abund) X <- as.matrix(spider$x)  #To fit a log-linear model assuming counts are poisson: glm.spid <- manyglm(spiddat~X, family=\"poisson\") glm.spid #>  #> Call:  manyglm(formula = spiddat ~ X, family = \"poisson\")  #> [1] \"poisson\" #>  #> Degrees of Freedom: 27 Total (i.e. Null); 21 Residual #>  #>                     Alopacce  Alopcune  Alopfabr  Arctlute  Arctperi  Auloalbi #> 2*log-likelihood:   -100.596  -158.960   -79.169   -48.981   -26.339   -83.547 #> Residual Deviance:    37.034    96.894    39.471    29.146     5.781    37.204 #> AIC:                 114.596   172.960    93.169    62.981    40.339    97.547 #>                     Pardlugu  Pardmont  Pardnigr  Pardpull  Trocterr  Zoraspin #> 2*log-likelihood:    -84.014  -276.075  -208.508  -164.826  -305.495  -136.706 #> Residual Deviance:    31.778   190.879   146.200    99.834   183.862    73.667 #> AIC:                  98.014   290.075   222.508   178.826   319.495   150.706  summary(glm.spid, resamp=\"residual\") #>  #> Test statistics: #>                wald value Pr(>wald)     #> (Intercept)        17.941     0.001 *** #> Xsoil.dry          20.142     0.001 *** #> Xbare.sand          8.057     0.072 .   #> Xfallen.leaves     11.414     0.008 **  #> Xmoss              13.831     0.002 **  #> Xherb.layer        17.671     0.001 *** #> Xreflection        12.519     0.004 **  #> ---  #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  #>  #> Test statistic:  51.38, p-value: 0.001  #> Arguments: #>  Test statistics calculated assuming response assumed to be uncorrelated  #>  P-value calculated using 999 resampling iterations via residual resampling (to account for correlation in testing). #>   #To fit a binomial regression model to presence/absence data: pres.abs <- spiddat pres.abs[pres.abs>0] = 1 Xdf <- data.frame(spider$x) #turn into a data frame to refer to variables in formula glm.spid.bin <- manyglm(pres.abs~soil.dry+bare.sand+moss, data=Xdf, family=\"binomial\") glm.spid.bin #>  #> Call:  manyglm(formula = pres.abs ~ soil.dry + bare.sand + moss, family = \"binomial\",      data = Xdf)  #> [1] \"binomial(link=logit)\" #>  #> Degrees of Freedom: 27 Total (i.e. Null); 24 Residual #>  #>                     Alopacce  Alopcune  Alopfabr  Arctlute  Arctperi  Auloalbi #> 2*log-likelihood:   -20.102   -21.201   -13.191   -23.457    -0.004   -34.568  #> Residual Deviance:   20.102    21.201    13.191    23.457     0.004    34.568  #> AIC:                 28.102    29.201    21.191    31.457     8.004    42.568  #>                     Pardlugu  Pardmont  Pardnigr  Pardpull  Trocterr  Zoraspin #> 2*log-likelihood:   -13.839   -22.618   -31.817   -24.109    -8.669   -16.368  #> Residual Deviance:   13.839    22.618    31.817    24.109     8.669    16.368  #> AIC:                 21.839    30.618    39.817    32.109    16.669    24.368  drop1(glm.spid.bin) #AICs for one-term deletions, suggests dropping bare.sand #> Single term deletions #>  #> Model: #> pres.abs ~ soil.dry + bare.sand + moss #>           Df    AIC #> <none>       325.94 #> soil.dry  12 333.27 #> bare.sand 12 318.90 #> moss      12 333.26  glm2.spid.bin <- manyglm(pres.abs~soil.dry+moss, data=Xdf, family=\"binomial\") drop1(glm2.spid.bin) #backward elimination suggests settling on this model. #> Single term deletions #>  #> Model: #> pres.abs ~ soil.dry + moss #>          Df    AIC #> <none>      318.90 #> soil.dry 12 367.47 #> moss     12 324.42"},{"path":"https://fontikar.github.io/mvabund/reference/manylm.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"workhose functions for fitting multivariate linear models — manylm.fit","title":"workhose functions for fitting multivariate linear models — manylm.fit","text":"workhorse functions called manylm used   fit multivariate linear models.  usually used   directly unless experienced users.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manylm.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"workhose functions for fitting multivariate linear models — manylm.fit","text":"","code":"manylm.fit(x, y, offset = NULL, tol=1.0e-010, singular.ok = TRUE, ...) manylm.wfit(x, y, w, offset = NULL, tol=1.0e-010, singular.ok = TRUE, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/manylm.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"workhose functions for fitting multivariate linear models — manylm.fit","text":"x design matrix dimension n * p. y matrix mvabund object observations dimension n*q. w vector weights (length n) used fitting     process manylm.wfit functions.  Weighted least squares     used weights w, .e., sum(w * e^2) minimized. offset numeric length n).  can used     specify priori known component included     linear predictor fitting. tol tolerance qr decomposition.  Default     1.0e-050. singular.ok logical. FALSE, singular model     error. ... currently disregarded.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manylm.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"workhose functions for fitting multivariate linear models — manylm.fit","text":"list components coefficients p vector residuals n vector matrix fitted.values n vector matrix      weights n vector --- *wfit*     functions. rank integer, giving rank qr (null fits) QR decomposition. df.residual degrees freedom residuals hat.X hat matrix. txX matrix (t(x)%*%x).","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manylm.fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"workhose functions for fitting multivariate linear models — manylm.fit","text":"Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/manylm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Linear Models for Multivariate Abundance Data — manylm","title":"Fitting Linear Models for Multivariate Abundance Data — manylm","text":"manylm used fit multivariate linear models high-dimensional data, multivariate abundance data ecology. base model-fitting function - see plot.manylm  assumption checking, anova.manylm summary.manylm  significance testing.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manylm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Linear Models for Multivariate Abundance Data — manylm","text":"","code":"manylm(    formula, data=NULL,  subset=NULL, weights=NULL,     na.action=options(\"na.action\"),  method=\"qr\", model=FALSE,     x=TRUE, y=TRUE, qr=TRUE, singular.ok=TRUE, contrasts=NULL,     offset, test=\"LR\" , cor.type= \"I\", shrink.param=NULL,     tol=1.0e-5, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/manylm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Linear Models for Multivariate Abundance Data — manylm","text":"formula object class \"formula\" (one     can coerced class): symbolic description     model fitted. details model specification given     Details. data optional data frame, list environment (object     coercible .data.frame data frame) containing     variables model.  found data,     variables taken environment(formula),     typically environment manylm called. subset optional vector specifying subset observations     used fitting process. weights optional vector weights used fitting     process.  NULL numeric vector.     non-null, weighted least squares used weights     weights (, minimizing sum(weights*e^2)); otherwise     ordinary least squares used. na.action function indicates happen     data contain NAs.  default set     na.action setting options,     na.fail unset.  ‘factory-fresh’     default na.omit.  Another possible value     NULL, action.  Value na.exclude can useful. method method used; fitting, currently     method = \"qr\" supported; method = \"model.frame\" returns     model frame (model = TRUE, see ). model, x, y, qr logicals.  TRUE corresponding     components fit (model frame, model matrix,     response, QR decomposition) returned. singular.ok logical. FALSE (default S     R) singular fit error. contrasts optional list. See contrasts.arg     model.matrix.default. offset can used specify priori     known component included linear predictor     fitting.  NULL numeric vector     length either one equal number cases.     One offset terms can included     formula instead well, specified sum     used.  See model.offset. test choice test statistic. Can one \"LR\" (default) = likelihood ratio statistic \"F\" = Lawley-Hotelling trace statistic NULL = test parameter merely stored manylm, used default value test subsequent functions inference. cor.type structure imposed estimated correlation matrix fitted model. Can \"\"(default), \"shrink\", \"R\". See anova.manylm details usage. parameter used default value cor.type subsequent functions inference. shrink.param shrinkage parameter used cor.type=\"shrink\". parameter used default value shrink.param subsequent functions inference. tol tolerance used estimations. ... additional arguments passed low level regression fitting functions (see ).","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manylm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting Linear Models for Multivariate Abundance Data — manylm","text":"Models manylm specified symbolically. details    compare details section lm formula. formula    includes offset, evaluated subtracted    response.      See model.matrix details. terms   formula re-ordered main effects come first,   followed interactions, second-order, third-order   : avoid pass terms object formula (see   aov demo(glm.vr) example).    formula implied intercept term.  remove use either   y ~ x - 1 y ~ 0 + x.  See formula   details allowed formulae. manylm calls lower level function manylm.fit    manylm.wfit actual numerical computations.    programming , may consider likewise.    weights, subset offset evaluated   way variables formula, first   data environment formula.   details arguments related hypothesis testing (cor.type   resample) see summary.manylm   anova.manylm.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manylm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting Linear Models for Multivariate Abundance Data — manylm","text":"manylm returns object c(\"manylm\", \"mlm\", \"lm\") multivariate  formula response class c(\"lm\") univariate response. manylm object list containing least following components:   coefficients named matrix coefficients residuals residuals matrix, response minus fitted values. fitted.values matrix fitted mean values. rank numeric rank fitted linear model.  weights (weighted fits) specified weights. df.residual residual degrees freedom. hat.X hat matrix. txX matrix (t(x)%*%x). test test argument supplied. cor.type cor.type argument supplied. resample resample argument supplied. nBoot nBoot argument supplied. call matched call. terms terms object used.  xlevels (relevant) record levels     factors used fitting. model requested (default), model frame used. offset offset used (missing none used). y requested, response matrix used. x requested, model matrix used. addition, non-null fits components assign    (unless requested) qr relating linear   fit, use extractor functions summary.manylm.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/manylm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fitting Linear Models for Multivariate Abundance Data — manylm","text":"Yi Wang, Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/manylm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Linear Models for Multivariate Abundance Data — manylm","text":"","code":"data(spider) spiddat <- log(spider$abund+1) lm.spider <- manylm(spiddat~.,data=spider$x) lm.spider #>  #> Call: #> manylm(formula = spiddat ~ ., data = spider$x) #>  #> Coefficients: #>                Alopacce   Alopcune   Alopfabr   Arctlute   Arctperi   Auloalbi  #> (Intercept)     1.231267  -1.380086   2.393197  -1.141160   2.027234  -1.103879 #> soil.dry       -0.794355   0.749110  -0.879432   0.730493  -0.594573   0.571479 #> bare.sand      -0.134612  -0.169884   0.255664   0.159457   0.089462   0.042262 #> fallen.leaves   0.099633  -0.051408   0.043434  -0.236105   0.047585  -0.228302 #> moss            0.098816  -0.211830  -0.018714  -0.042750  -0.150472  -0.231740 #> herb.layer      0.214865   0.147603   0.039480   0.050233  -0.166885   0.467675 #> reflection      0.459053   0.388217   0.046706  -0.096538   0.217172  -0.045856 #>                Pardlugu   Pardmont   Pardnigr   Pardpull   Trocterr   Zoraspin  #> (Intercept)     3.734407  -3.407564  -0.469123  -1.859186   1.441566   0.077075 #> soil.dry       -0.761781   1.256562   1.299666   1.562122   0.891209   1.034457 #> bare.sand      -0.229075   0.009099   0.127535  -0.110245  -0.155567   0.283460 #> fallen.leaves   0.232496  -0.308228  -0.700012  -0.691232  -0.241817  -0.479958 #> moss           -0.200612   0.589305  -0.393534  -0.197432  -0.385430  -0.134735 #> herb.layer      0.050538   0.290093   0.281785   0.352392   0.291045   0.263206 #> reflection     -0.319179   0.153976  -0.239496  -0.026756  -0.199446  -0.656028 #>   #Then use the plot function for diagnostic plots, and use anova or summary to #evaluate significance of different model terms."},{"path":"https://fontikar.github.io/mvabund/reference/meanvar.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Mean-Variance plots for Multivariate Abundance Data — meanvar.plot","title":"Construct Mean-Variance plots for Multivariate Abundance Data — meanvar.plot","text":"Construct mean-variance plots, separately column input  data, separately level input factor   given (via formula). function specially written high   dimensional data many correlated variables exhibiting   mean-variance structure, particular, multivariate abundance   data ecology.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/meanvar.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Mean-Variance plots for Multivariate Abundance Data — meanvar.plot","text":"","code":"meanvar.plot(x, ...)  # S3 method for mvabund meanvar.plot(   x, n.vars=NULL, var.subset=NULL, subset=NULL, table=FALSE, ...)  # S3 method for mvformula meanvar.plot(   x, n.vars = NULL, var.subset=NULL, subset=NULL, table=FALSE,    overall.main=NULL, overlay=TRUE, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/meanvar.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Mean-Variance plots for Multivariate Abundance Data — meanvar.plot","text":"x mvabund objects Model Formula (can formula mvformula) used. n.vars number variables include plot. var.subset vector indices indicating variables included plot, (default: n.vars abundant variables). subset optional vector specifying subset observations used. table logical, whether table Means Variances returned overall.main overall title window. overlay logical, whether overall means/variances variables calculated drawn single plot calculated plotted separately different variables. ... arguments passed methods.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/meanvar.plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct Mean-Variance plots for Multivariate Abundance Data — meanvar.plot","text":"meanvar.plot calculates mean-variance plot dataset many variables (e.g., Warton D. ., Wright S., Wang, Y. (2012)). mean values variances calculated across observations, unless  formula given first argument specifies factor dependent  variable. latter case means variances calculated separately within groups defined factors. default means variances variables (factor levels) displayed plot. formula given explanatory variables contain factor variables, mean values variances factor level can calculated displayed either variables together variable separately. latter, set overlay FALSE. mean-variances corresponding different factors drawn different colors, can chosen specifying col. col can either single color value (see par) number values least maximum number levels factors. applies pch. mfrow NULL mfcol NULL, par(\"mfrow\") used. .labels = FALSE, x-axis labels bottom plot y-axis labels plots right side window printed furthermore main=NULL graphics top contain full title, ones abreviated one. Note, log-transformation used displaying data, specific mean-variance relation visible plot, either calculated mean zero log!=\"x\" log!=\"xy\" calculated variance zero log!=\"y\" log!=\"xy\". default y/x ratio axis, specified asp, set 1 log!=\"xy\". mean-variance relation displayed log scale overlay FALSE, often advisable specify asp, might one choice asp sensible plots.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/meanvar.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Mean-Variance plots for Multivariate Abundance Data — meanvar.plot","text":"table TRUE table Means Variances returned. Otherwise, plot(s) /drawn.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/meanvar.plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Construct Mean-Variance plots for Multivariate Abundance Data — meanvar.plot","text":"Warton D. ., Wright S., Wang, Y. (2012). Distance-based multivariate analyses confound location dispersion effects. Methods Ecology Evolution, 3(1), 89-101. Warton D.. (2008). Raw data graphing: informative -utilized tool analysis multivariate abundances. Austral Ecology 33(3), 290-300.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/meanvar.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct Mean-Variance plots for Multivariate Abundance Data — meanvar.plot","text":"Ulrike Naumann, Stephen Wright David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/meanvar.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Mean-Variance plots for Multivariate Abundance Data — meanvar.plot","text":"","code":"require(graphics)  ## Load the tikus dataset: data(tikus) tikusdat <- mvabund(tikus$abund) year <- tikus$x[,1]  ## Plot mean-variance plot for a mvabund object with a log scale (default): meanvar.plot(tikusdat)    #> 5 mean values were <=0 and could not be included in the log-plot #> 5 variance values were <=0 and could not be included in the log-plot   ## Again but without log-transformation of axes: meanvar.plot(tikusdat,log=\"\")      ## A mean-variance plot, data organised by year,  ## for 1981 and 1983 only, as in Figure 7a of Warton (2008): is81or83 <- year==81 | year==83 meanvar.plot(tikusdat~year, subset=is81or83, col=c(1,10)) #> Error in eval(parse(text = variables[1])): object 'year' not found"},{"path":"https://fontikar.github.io/mvabund/reference/mvabund-internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal mvabund Objects — mvabund-internal","title":"Internal mvabund Objects — mvabund-internal","text":"Internal mvabund functions.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvabund-internal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal mvabund Objects — mvabund-internal","text":"called user.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvabund-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical methods for analysing multivariate abundance data — mvabund-package","title":"Statistical methods for analysing multivariate abundance data — mvabund-package","text":"package provides tools model-based approach analysis multivariate abundance data ecology (Warton 2011), 'abundance' interpreted loosely - well counts presence/absence, ordinal biomass (via manyany), etc. graphical methods exploring properties data community-environment association, flexible regression methods estimating making robust inferences community-environment association, 'fourth corner models' explain environmental response function traits, diagnostic plots check appropriateness fitted model (Wang et. al 2012). emphasis design-based inferences models, e.g. bootstrapping rows residuals via anova calls, cross-validation across rows, make multivariate inferences robust failure assumptions correlation. Another emphasis presenting diagnostic tools check assumptions, especially via residual plotting.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvabund-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical methods for analysing multivariate abundance data — mvabund-package","text":"key functions available package following. graphical display data: plot.mvabund draw range plots Multivariate Abundance Data boxplot.mvabund draw range plots Model Formulae Multivariate Abundance Data meanvar.plot draw mean-variance plots Multivariate Abundance Data estimating displaying Linear Models: manylm Fitting Linear Models Multivariate Abundance Data summary.manylm summarizie Multivariate Linear Model Fits Abundance Data anova.manylm obtain ANOVA Multivariate Linear Model Fits Abundance Data plot.manylm plot diagnostics manylm Object estimating displaying Generalized Linear Models: manyglm fit Generalized Linear Models Multivariate Abundance Data summary.manyglm summarize Multivariate Generalized Linear Model Fits Abundance Data anova.manyglm obtain Analysis Deviance Multivariate Generalized Linear Model Fits Abundance Data plot.manyglm plot diagnostics manyglm Object generic functions like residuals, predict, AIC can applied manyglm objects. estimating displaying 'fourth corner models' species traits well environmental predictors: traitglm predict abundance using GLM function traits well environmental variables anova.traitglm obtain Analysis Deviance fourth corner model abundance generic functions like plot, residuals, predict, AIC can applied traitglm objects. Note traitglm can work slowly, fits single big model vectorised data (wants resample call anova.traitglm). fitting flexible models: manyany simultaneously fit univariate models response variable '' input function anova.manyany simultaneously test community-level effect, comparing two manyany objects glm1path fit path Generalised Linear Models L1 ('LASSO') penalties cv.glm1path choose value L1 penalty glm1path fit cross-validation generic functions like residuals, predict, AIC can applied manyany glm1path objects. functions also can slow side, especially rare species included. providing data structure: mvabund create mvabund object mvformula create Model Formulae Multivariate Abundance Data Example datasets: Tasmania meiobenthic community data Tasmania. Used demonstrate test interaction. solberg solberg species counts 3-level treatment factor. spider hunting spiders counts different sites. tikus solberg nematode counts Tikus island. antTraits ant counts Eucalypt forests, trait measurements. details, see documentation individual functions listed .","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvabund-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Statistical methods for analysing multivariate abundance data — mvabund-package","text":"Brown , Warton DI, Andrew NR, Binns M, Cassis G Gibb H (2014) fourth corner solution - using species traits better understand species traits interact environment, Methods Ecology Evolution 5, 344-352. Warton D.. (2008a). Raw data graphing: informative -utilized tool analysis multivariate abundances. Austral Ecology 33, 290-300. Warton D.. (2008b). Penalized normal likelihood ridge regularization correlation covariance matrices. Journal American Statistical Association 103, 340-349. Warton D.. (2011). Regularized sandwich estimators analysis high dimensional data using generalized estimating equations. Biometrics, 67, 116-123. Warton DI, Shipley B & Hastie T (2015) CATS regression - model-based approach studying trait-based community assembly, Methods Ecology Evolution 6, 389-398. Warton D. ., Wright S., Wang, Y. (2012). Distance-based multivariate analyses confound location dispersion effects. Methods Ecology Evolution, 3, 89-101. Wang Y., Neuman U., Wright S. Warton D. . (2012). mvabund: R package model-based analysis multivariate abundance data. Methods Ecology Evolution, 3, 471-473.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvabund-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Statistical methods for analysing multivariate abundance data — mvabund-package","text":"David Warton David.Warton@unsw.edu.au, Yi Wang Ulrike Naumann.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/mvabund-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical methods for analysing multivariate abundance data — mvabund-package","text":"","code":"require(graphics)  ## Load the spider dataset: data(spider)  ## Create the mvabund object spiddat: spiddat <- mvabund(spider$abund) X <- as.matrix(spider$x)  ## Draw a plot of the spider data: plot(spiddat, col=\"gray1\", n.vars=8, transformation=\"sqrt\",  xlab=c(\"Hunting Spider\"), ylab=\"Spider Species\", scale.lab=\"s\", t.lab=\"t\", shift=TRUE, fg= \"lightblue\", col.main=\"red\", main=\"Spiders\")  #> Kicking off BoxPlot sequence  #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  #> ABOUT TO PLOT THE FUNCTION  #>  #> Only the variables Trocterr, Pardpull, Pardmont, Pardnigr, Zoraspin, Alopacce, Alopcune, Auloalbi were included in the plot  #> (the variables with highest total abundance).    ## A mean-variance plot, data organised by year,  ## for 1981 and 1983 only, as in Figure 7a of Warton (2008a): data(tikus) tikusdat <- mvabund(tikus$abund) year <- tikus$x[,1] is81or83 <- year==81 | year==83 meanvar.plot(tikusdat~year,legend=TRUE, subset=is81or83, col=c(1,10))    #> Error in eval(parse(text = variables[1])): object 'year' not found  ## Create a formula for multivariate abundance data: foo <- mvformula( spiddat~X ) #> Error in eval(terms(x)[[2]]): object 'spiddat' not found  ## Create a List of Univariate Formulas: fooUni <- formulaUnimva(spiddat~X) #> Error in eval(respname): object 'spiddat' not found fooUniInt <- formulaUnimva(spiddat~X, intercept=TRUE) #> Error in eval(respname): object 'spiddat' not found  ## Find the three variables that best explain the response: best.r.sq( foo, n.xvars= 3) #> Error in model.frame(formula = foo, na.action = NULL): object 'foo' not found  ## Fit a multivariate linear model: foo <- mvformula( spiddat~X ) #> Error in eval(terms(x)[[2]]): object 'spiddat' not found lm.spider <- manylm(foo) #> Error in model.frame(formula = foo, drop.unused.levels = TRUE): object 'foo' not found  ## Plot Diagnostics for a multivariate linear model: plot(lm.spider,which=1:2,col.main=\"red\",cex=3,overlay=FALSE) #> Error in plot(lm.spider, which = 1:2, col.main = \"red\", cex = 3, overlay = FALSE): object 'lm.spider' not found  ## Obtain a summary of test statistics using residual resampling: summary(lm.spider, nBoot=500) #> Error in summary(lm.spider, nBoot = 500): object 'lm.spider' not found  ## Calculate a ANOVA Table: anova(lm.spider, nBoot=500) #> Error in anova(lm.spider, nBoot = 500): object 'lm.spider' not found"},{"path":"https://fontikar.github.io/mvabund/reference/mvabund.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate Abundance Data Objects — mvabund","title":"Multivariate Abundance Data Objects — mvabund","text":"mvabund creates mvabund object..mvabund attempts turn argument mvabund object..mvabund tests argument mvabund object.mvabund class objects special-purpose plotting regression functions written mvabund-package. useful preliminary functions analysing data using special-purpose functions. new functions written specially analysis multivariate abundance data ecology, hence title 'mvabund'.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvabund.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate Abundance Data Objects — mvabund","text":"","code":"mvabund( ... , row.names=NULL, check.rows=FALSE, check.names=TRUE,   var.names=NULL, neg=FALSE, na.rm=FALSE )    as.mvabund(x)  is.mvabund(x)"},{"path":"https://fontikar.github.io/mvabund/reference/mvabund.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate Abundance Data Objects — mvabund","text":"... arguments either form value tag = value. Component names created based  tag (present) deparsed argument . row.names NULL single integer character string specifying column used row names, character integer vector giving row names mvabund object. check.rows TRUE rows checked consistency length names. check.names logical. TRUE names variables checked ensure syntactically valid variable names duplicated. necessary adjusted (make.names) . var.names NULL character vector giving column names mvabund object. neg character. FALSE negative values cause error message. na.rm logical, whether missing values removed. x R object.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvabund.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multivariate Abundance Data Objects — mvabund","text":"desirable convert abundance data mvabund objects, allow automatic use methods mvabund objects, example provided  methods plotting, linear generalised linear model-fitting inference. technical details:  mvabund objects always two dimensions. mvabund converts arguments mvabund object. supplied argument can matrix, data frame, list vectors, several vectors separate arguments. elements created mvabund object numeric, warning printed. row.names supplied, row names mvabund object NULL. length row.names match number rows duplicates, error message result.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvabund.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate Abundance Data Objects — mvabund","text":"mvabund .mvabund returns mvabund object. .mvabund returns TRUE x matrix FALSE otherwise.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvabund.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multivariate Abundance Data Objects — mvabund","text":"Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/mvabund.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate Abundance Data Objects — mvabund","text":"","code":"data(solberg)   ## Create an mvabund object: solbergdat <- mvabund(solberg$abund)  ## Turn solberg$abund into an mvabund object and store as solbergdat: solbergdat <- as.mvabund(solberg$abund)  ## Check if solbergdat  is an mvabund object: is.mvabund(solbergdat) #> [1] TRUE"},{"path":"https://fontikar.github.io/mvabund/reference/mvformula.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Formulae for Multivariate Abundance Data — mvformula","title":"Model Formulae for Multivariate Abundance Data — mvformula","text":"mvformula method create object class mvformula .mvformula function turn formula mvformula .mvformula tests argument mvformula object. mvformula class objects special-purpose plotting regression functions written mvabund-package. useful preliminary functions analysing data using special-purpose functions. new functions written specially analysis multivariate abundance data ecology, hence title 'mvabund'.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvformula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Formulae for Multivariate Abundance Data — mvformula","text":"","code":"mvformula(x) <!-- % \\usage{formulaMva(x)} --> as.mvformula(x) is.mvformula(x)"},{"path":"https://fontikar.github.io/mvabund/reference/mvformula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Formulae for Multivariate Abundance Data — mvformula","text":"x R object.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvformula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model Formulae for Multivariate Abundance Data — mvformula","text":"mvformula method create object class mvformula response resulting formula mvabund object, warning printed.  .mvformula function turn formula mvformula response x data.frame unsuitable object conversion  fail.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvformula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Formulae for Multivariate Abundance Data — mvformula","text":"formula mvabund mvformula .mvformula logical value indicating whether x mvformula object","code":""},{"path":"https://fontikar.github.io/mvabund/reference/mvformula.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Model Formulae for Multivariate Abundance Data — mvformula","text":"Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/mvformula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Formulae for Multivariate Abundance Data — mvformula","text":"","code":"require(graphics)  data(spider) spiddat <- mvabund(spider$abund) X=as.matrix(spider$x)  ## Create a formula for multivariate abundance data: foo <- mvformula( spiddat~X ) #> Error in eval(terms(x)[[2]]): object 'spiddat' not found  ## Check whether foo is a mvformula: is.mvformula(foo) #> Error in is.mvformula(foo): object 'foo' not found  ## Plot a mvformula: plot(foo) #> Error in plot(foo): object 'foo' not found"},{"path":"https://fontikar.github.io/mvabund/reference/plot.manyany.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Diagnostics for a manyany or glm1path Object — plot.manyany","title":"Plot Diagnostics for a manyany or glm1path Object — plot.manyany","text":"residual vs fits plot manyany glm1path object.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.manyany.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Diagnostics for a manyany or glm1path Object — plot.manyany","text":"","code":"# S3 method for manyany plot( x, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/plot.manyany.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Diagnostics for a manyany or glm1path Object — plot.manyany","text":"x manyany object, resulting call manyany. ... parameters passed plotting     functions.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.manyany.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Diagnostics for a manyany or glm1path Object — plot.manyany","text":"plot.manyany used check assumptions made   fitting model via manyany glm1path. Wang et al (2012), check   residual vs fits plot pattern (hence suggestion failure linearity   mean-variance assumptions).   also desirable residuals follow straight line slope one    normal Q-Q plot. plots use Dunn-Smyth residuals (Dunn & Smyth 1996), described residuals.manyglm.   Note discrete data, residuals involve random number generation,   return identical results replicate runs - recommended   plot data times check pattern shows consistently across replicate plots. Note also glm1path objects, slope coefficients shrunk towards zero unusual see increasing slope residual plot, larger residuals coinciding larger fitted values. arises consequent shrinkage, check goes away upon removing penaly term (e.g. refitting using manyglm) ringing alarm bells.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.manyany.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Diagnostics for a manyany or glm1path Object — plot.manyany","text":"Dunn, P.K., & Smyth, G.K. (1996). Randomized quantile residuals. Journal Computational Graphical Statistics 5, 236-244. Wang Y., Naumann U., Wright S.T. & Warton D.. (2012). mvabund - R package model-based  analysis multivariate abundance data. Methods Ecology Evolution 3, 471-474.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.manyany.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Diagnostics for a manyany or glm1path Object — plot.manyany","text":"David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/plot.manyany.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Diagnostics for a manyany or glm1path Object — plot.manyany","text":"","code":"require(graphics)  data(spider) abund <- mvabund(spider$abund) X <- as.matrix(spider$x)  ## Plot the diagnostics for a log-linear model assuming counts are poisson: spidPois <- manyany(abund ~ X, \"glm\", family=poisson()) #> Warning: glm.fit: fitted rates numerically 0 occurred plot(spidPois,pch=19,cex=0.2)  ## Fan-shape means trouble for our Poisson assumption.  ## Try a negative binomial instead... require(MASS) # this package is needed for its negative binomial family function #> Loading required package: MASS spidNB <- manyany(abund ~ X, \"manyglm\", family=\"negative.binomial\") plot(spidNB,pch=19,cex=0.2,xlim=c(-15,6))  ## That's looking a lot better..."},{"path":"https://fontikar.github.io/mvabund/reference/plot.manylm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Diagnostics for a manylm or a manyglm Object — plot.manylm","title":"Plot Diagnostics for a manylm or a manyglm Object — plot.manylm","text":"Four plots (selectable ) currently available: plot   residuals fitted values, Normal Q-Q plot,    Scale-Location plot \\(\\sqrt{| residuals |}\\) fitted values,    plot Cook's distances versus row labels.     default, provided. function yet available manyglm object","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.manylm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Diagnostics for a manylm or a manyglm Object — plot.manylm","text":"","code":"# S3 method for manylm plot(   x, res.type=\"pearson\", which=1:4, caption=c(\"Residuals vs Fitted\", \"Normal Q-Q\",    \"Scale-Location\", \"Cook's distance\"), overlay=TRUE,    n.vars=Inf, var.subset=NULL, sub.caption=NULL, studentized= TRUE, ...)  # S3 method for manyglm plot(   x, res.type=\"pit.norm\", which=1, caption=c(\"Residuals vs Fitted\", \"Normal Q-Q\",    \"Scale-Location\", \"Cook's distance\"), overlay=TRUE,    n.vars=Inf, var.subset=NULL, sub.caption=NULL, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/plot.manylm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Diagnostics for a manylm or a manyglm Object — plot.manylm","text":"x manylm object manyglm object, typically    result call manylm manyglm. res.type type residuals plot. default, res.type=\"pit-norm\" uses Dunn-Smyth  residuals (Dunn & Smyth 2996), related probability integral transform, manyglm.  residuals especially recommended presence-absence data discrete data. subset plots required, specify subset     numbers 1:4. caption captions appear plots overlay logical, whether different variables     overlaid single plot. n.vars number variables include plot. var.subset variables include plot. sub.caption common title---figures multiple;     used sub (s.title) otherwise.  NULL,     default, possible shortened version     deparse(x$call) used. ... parameters passed plotting     functions. studentized logical indicating whether studentized standardized residuals used plot 2 3.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.manylm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Diagnostics for a manylm or a manyglm Object — plot.manylm","text":"plot.manylm used check linear model assumptions made   fitting model via manylm. Similarly, plot.manyglm checks   generalised linear model assumptions made using manyglm.   Wang et al (2012), check residual vs fits plot pattern   (hence suggestion failure key linearity mean-variance assumptions).   manylm fits small datasets, desirable residuals normal Q-Q plot close   straight line, although practice important thing make   sure big outliers suggestion strong skew data. recommended res.type option manyglm calls, \"pit-norm\", uses randomised quantile \"Dunn-Smyth\"   residuals (Dunn & Smyth 1996). Note discrete data, residuals   involve random number generation, return identical results replicate runs - recommended   plot data times check pattern shows consistently across replicate plots.   main residual option \"pearson\", Pearson residuals. Note res.type options   equivalent manylm. technical details usage function:  sub.caption - default function call - shown   subtitle (x-axis title) plot plots   separate pages, subtitle outer margin ()   multiple plots per page. ‘Scale-Location’ plot, also called ‘Spread-Location’   ‘S-L’ plot, takes square root absolute residuals   order diminish skewness (\\(\\sqrt{| E |}\\) much less skewed   \\(| E |\\) Gaussian zero-mean \\(E\\)). studentized=FALSE ‘S-L’, Q-Q, Residual-Leverage    plot, use standardized residuals identical variance    (hypothesis) otherwise studentized residuals used. Unlike plotting functions plot.manylm plot.manyglm   respectively subset argument, subset needs specified   manylm respectively manyglm function. arguments formally located position ...,  positional matching work. restrictions filename see R's help eps/pdf/jpeg.  Note keep.window ignored write.plot   show.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.manylm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Diagnostics for a manylm or a manyglm Object — plot.manylm","text":"Dunn, P.K., & Smyth, G.K. (1996). Randomized quantile residuals. Journal Computational Graphical Statistics 5, 236-244. Wang Y., Naumann U., Wright S.T. & Warton D.. (2012). mvabund - R package model-based  analysis multivariate abundance data. Methods Ecology Evolution 3, 471-474.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.manylm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Diagnostics for a manylm or a manyglm Object — plot.manylm","text":"Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/plot.manylm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Diagnostics for a manylm or a manyglm Object — plot.manylm","text":"","code":"require(graphics)  data(spider) spiddat <- mvabund(spider$abund)  ## plot the diagnostics for the linear fit of the spider data spidlm <- manylm(spiddat~., data=spider$x) plot(spidlm,which=1:2,col.main=\"red\",cex=3,overlay=FALSE)      plot(spidlm,which=1:4,col.main=\"red\",cex=3,overlay=TRUE)   ## plot the diagnostics for Poisson and negative binomial regression of the spider data glmP.spid <- manyglm(spiddat~., family=\"poisson\", data=spider$x) plot(glmP.spid, which=1) #note the marked fan-shape on the plot   glmNB.spid <- manyglm(spiddat~., data=spider$x, family=\"negative.binomial\") plot(glmNB.spid, which=1) #no fan-shape  plot(glmNB.spid, which=1) #note the residuals change on re-plotting, but no consistent trend"},{"path":"https://fontikar.github.io/mvabund/reference/plot.mvabund.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Multivariate Abundance Data and Formulae — plot.mvabund","title":"Plot Multivariate Abundance Data and Formulae — plot.mvabund","text":"Produces range plots visualising multivariate abundance data  relationship environmental variables, including: dot-plots boxplots  different levels factor stacked response variable; comparative dot-plots boxplots different  levels factor, stacked response variable; scatterplots abundances  set explanatory variables; scatterplots pair-wise abundance  data, e.g. repeated measures. See details .","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.mvabund.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Multivariate Abundance Data and Formulae — plot.mvabund","text":"","code":"# S3 method for mvabund plot(x, y, type=\"p\", overall.main=\"\", n.vars=12,    var.subset=NA, transformation=\"log\", ...)  # S3 method for mvformula plot(x,y=NA, type=\"p\", var.subset=NA,    n.vars= if(any(is.na(list(var.subset)))) 12 else length(var.subset),   xvar.select=TRUE, xvar.subset = NA, n.xvars=NA, transformation=\"log\", ...)"},{"path":"https://fontikar.github.io/mvabund/reference/plot.mvabund.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Multivariate Abundance Data and Formulae — plot.mvabund","text":"x mvabund method, x mvabund object. mvformula method, x mvformula object, Model Formula used. y plot.mvabund optional second matrix multivariate abundance data plot.mvformula optional matrix independent variables explain x. type type plot drawn. Useful types \"p\" scatterplot, \"bx\" boxplot \"n\" plot. types, see plot allowed, usually give meaningful output. overall.main character display title every window. var.subset numeric vector indices indicating variables mvabund.object included plot. n.vars number variables include plot. xvar.select whether subset x variables plotted . n.xvars number relevant x variables plotted,  used xvar.select = FALSE. NA set 3. xvar.subset subset x variables plotted, used xvar.select = FALSE. transformation optional transformation, formula given, \"\" = untransformed, \"sqrt\"=square root transformed, \"log\" (default)=log(Y/min+1) transformed, \"sqrt4\" =4th root transformed. Note plot.mvabund called explicitly, two data objects  supplied, none mvabund object, plot.mvformula called (See Details). argument transformation  available. ... arguments passed methods.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.mvabund.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Multivariate Abundance Data and Formulae — plot.mvabund","text":"function plot.mvabund produces plots visualisation multivariate abundance data relationships environmental variables. approach taken separately plot relationship response variable environmental variables, , visualise marginal distribution, Warton (2008).  Three main types plot can produced: (1) Dot-plots boxplots stacked along y-axis response variable. factor given, comparative dot-plots/boxplots produced, comparing abundances across factor level. type plot produced one multivariate abundance dataset given input argument, either , together factor, examples using solberg dataset . (2) Scatterplots multivariate abundances environmental variables, separate plots separate response variables. type plot produced one multivariate abundance dataset given input argument together environmental variable set environmental variables. (3) Scatterplots paired sample multivariate abundances. type plot produced two multivariate abundance datasets given input arguments, size variable names match . user ensure rows match two datasets. several methods calling plot.mvabund:   () plot.mvabund(\"matrix\", ...)  multivariate abundances stored data matrix. Including optional second argument determines whether plot type (1) produced (second argument factor),  plot type (2) (one set environmental variables given),  plot type (3) (second matching multivariate abundance dataset given).  Instead matrix, mvabund objects can used.  (b) plot(\"mvabund object\", ...)  can define mvabund objects using function  mvabund. behaviour plot function  plot.mvabund .  (c) plot.mvformula(\"response\"~\"terms\")  first two objects must multivariate abundances, can either matrix mvabund object. terms determine type plot produced. terms can either single vector matrix  number vectors matrices, separated +.  Compare formula details specification terms.  (d) plot(\"mvformula object\")  can define mvformula objects using function mvformula. Note response data frame object. plots type (3) , must use method () (b). Plot methods (c) (d) require response explanatory variables specified, .e. formulas like '~x' 'y~1' plotted. See examples see methods applied. Multivariate abundance datasets typically many variables, can visualised single window, default plot.mvabund subsets abundance variables (appropriate, environmental variables). default 12 abundant variables plotted (determined transformed  variables response transformed mvformula method), although setting can controlled via argument n.vars, variables included subset plotted can controlled via var.subset. possible example plot abundance variables significantly associated environmental variable, Solberg example . produce boxplots rather dot-plots type (1) plots, use argument type=\"bx\". type (2) plots, one environmental variable specified, plots  different abundance variables arranged rectangular array (different  abundance variables different rows columns). however one environmental variable specified, different columns correspond different environmental variables (different abundance variables different rows). 3 environmental variables specified, 3 selected maximise average R^2 manylm applied (using subset selection function best.r.sq). switch subset selection, set xvar.select=FALSE, choose subset environmental variables using xvar.subset. control appearance points dot-plots scatterplots, usual arguments apply (see par details). plotting symbols pch color can vector, plot function called via mvformula object, can also list, list elements corresponds symbols / colors used plots different independent variables. formula terms factor variables, drawn boxplots. Note, plots produced plot.mvformula depend whether first independent variable factor .  See examples different possibilities boxplots can produced. two objects passed one mvabund object, resulting plots formula supplied, mvabund object response variable. objects mvabund objects, tried guess one response. following logic applies: y data.frame, assumed y response. Note y second object, argument names supplied. y data.frame x data.frame, assumed x response. objects data frames error result, function designed mvabund objects! argument shift controls whether points shifted dotplots  overlap. argument ignored boxplots scatterplots (type (2) type (3) graphs).","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.mvabund.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Plot Multivariate Abundance Data and Formulae — plot.mvabund","text":"argument log, available lots plotting functions can used plotting mvabund mvformula objects. Instead use transformation mvabund method mvformula method include transformations formula.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.mvabund.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Multivariate Abundance Data and Formulae — plot.mvabund","text":"Warton D.. (2008). Raw data graphing: informative -utilized tool analysis multivariate abundances. Austral Ecology 33(3), 290-300.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plot.mvabund.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Multivariate Abundance Data and Formulae — plot.mvabund","text":"Ulrike Naumann, Yi Wang, Stephen Wright David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/plot.mvabund.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Multivariate Abundance Data and Formulae — plot.mvabund","text":"","code":"require(graphics)  ############################ ## Some \"type (1)\" plots ## ############################  data(solberg) solbdat <- solberg$abund treatment<- solberg$x  ## Plot a multivariate dataset (Species vs Abundance) plot.mvabund(solbdat) #> Kicking off BoxPlot sequence  #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  #> ABOUT TO PLOT THE FUNCTION  #>  #> Only the variables Halanonchus_sp., Terschellingia_longicaudata, Dorylaimopsis_punctatus, Marylynnia_complexa, Molgolaimus_sp., Aponema_torosa, Spirinia_parasitifera, Odontophora_sp., Daptonema_sp.1, Prochromadorella_sp., Halichoanolaimus_dolichurus, Sabatieria_longicaudata were included in the plot  #> (the variables with highest total abundance).   ## Alternatively, the plot command could be used directly if spiddat is  ## defined as an mvabund object: solbmvabund <- mvabund(solbdat) plot(solbmvabund) #> Kicking off BoxPlot sequence  #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  #> ABOUT TO PLOT THE FUNCTION  #>  #> Only the variables Halanonchus_sp., Terschellingia_longicaudata, Dorylaimopsis_punctatus, Marylynnia_complexa, Molgolaimus_sp., Aponema_torosa, Spirinia_parasitifera, Odontophora_sp., Daptonema_sp.1, Prochromadorella_sp., Halichoanolaimus_dolichurus, Sabatieria_longicaudata were included in the plot  #> (the variables with highest total abundance).   ## Draw an mvabund object in a boxplot, but using the 20 most abundant  ## variables in the plot, using the square root transform, and adding  ## coloured axes and title: plot.mvabund(solbdat, n.vars=20, type=\"bx\", transformation=\"sqrt\",  fg=\"lightblue\", main=\"Solberg abundances\", col.main=\"red\") #> Kicking off BoxPlot sequence  #> Only the variables Halanonchus_sp., Terschellingia_longicaudata, Dorylaimopsis_punctatus, Marylynnia_complexa, Molgolaimus_sp., Aponema_torosa, Spirinia_parasitifera, Odontophora_sp., Daptonema_sp.1, Prochromadorella_sp., Halichoanolaimus_dolichurus, Sabatieria_longicaudata, Dichromadora_sp., Neochromadora_sp., Richtersia_inaequalis, Pandolaimus_latilaimus, Leptolaimus_elegans, Halalaimus_sp., Desmolaimus_sp., Linhomieidae_un.A were included in the plot  #> (the variables with highest total abundance).   ## Plot Species (split by treatment) vs Abundance plot(solbmvabund,treatment) #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  PIPING TO 1st MVFACTOR  #> Only the variables Halanonchus_sp., Terschellingia_longicaudata, Dorylaimopsis_punctatus, Marylynnia_complexa, Molgolaimus_sp., Aponema_torosa, Spirinia_parasitifera, Odontophora_sp., Daptonema_sp.1, Prochromadorella_sp., Halichoanolaimus_dolichurus, Sabatieria_longicaudata were included in the plot  #> (the variables with highest total abundance).  ## This can also be produced using plot(solbmvabund~treatment) #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  PIPING TO 2nd MVFACTOR  #> Only the variables Halanonchus_sp., Terschellingia_longicaudata, Dorylaimopsis_punctatus, Marylynnia_complexa, Molgolaimus_sp., Aponema_torosa, Spirinia_parasitifera, Odontophora_sp., Daptonema_sp.1, Prochromadorella_sp., Halichoanolaimus_dolichurus, Sabatieria_longicaudata were included in the plot  #> (the variables with highest total abundance).   ## To use plot.mvabund to plot only the variables with P-values less than 0.1: lm.solberg <- manylm(log(solbmvabund+1)~treatment) anova.solb <- anova(lm.solberg, p.uni=\"unadjusted\") pj = anova.solb$uni.p  plot(solbmvabund~treatment, var.subset=pj<0.1) #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  PIPING TO 2nd MVFACTOR  #> Only the variables Viscosia_sp., Dichromadora_sp., Prochromadorella_sp., Daptonema_sp.1, Sphaerolaimus_macrocirculus, Odontophora_sp. were included in the plot (user selected).   ## Or to plot only the 12 most significant variables, according to their  ## univariate ANOVA P-values: pj.sort = sort(pj, index.return=TRUE) plot(solbmvabund~treatment, var.subset=pj.sort$ix[1:12]) #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  PIPING TO 2nd MVFACTOR  #> Only the variables Daptonema_sp.1, Viscosia_sp., Sphaerolaimus_macrocirculus, Prochromadorella_sp., Odontophora_sp., Dichromadora_sp., Pandolaimus_latilaimus, Terschellingia_longicaudata, Cyatholaimidae_un., Halichoanolaimus_dolichurus, Sabatieria_punctata, Sabatieria_sp. were included in the plot (user selected).   ############################ ## Some \"type (2)\" plots ## ############################ #load and convert data data(spider) spiddat <- mvabund(spider$abund) spidx <- mvabund(spider$x)  #create labels vectors pch.vec <- as.numeric(spidx[,3]<2) pch.vec[pch.vec==0] <- 3  #Scale the soil water variable soilWater <- spidx[,1]  #Create the Table for the main titles of each plot title <- c(\"\\n\\nAlopecosa accentuata\", \"\\n\\nAlopecosa cuneata\",            \"\\n\\nAlopecosa fabrilis\", \"\\n\\nArctosa lutetiana\",             \"\\n\\nArctosa perita\", \"\\n\\nAulonia albimana\",             \"\\n\\nPardosa lugubris\", \"\\n\\nPardosa monticola\",             \"\\n\\nPardosa nigriceps\", \"\\n\\nPardosa pullata\",            \"\\n\\nTrochosa terricola\", \"\\n\\nZora spinimana\")  #Plot Species Abundance vs Environmental variable plot.mvformula(log(spiddat+1) ~ exp(soilWater), main=title,  xlab=\"% Soil Moist - Log Scale  \", ylab=\"Abundance [log scale]\",  overall.main=\"Species Abundance vs %Soil Moisture\", col=pch.vec,  fg=\"grey\", pch=pch.vec, las=1, scale.lab=\"ss\",t.lab=\"o\", mfrow=c(4,3),log=\"x\") #> Error in eval(predvars, data, env): object 'spiddat' not found  #Add a Margin par(xpd=NA) legend(\"topright\",pch=c(1,3),col=c(1,3),legend = c(\"few twigs\", \"many twigs\"),  cex = 1, inset=c(0,-0.19))    ############################ ## Some \"type (3)\" plots ## ############################  ##Plot 1981 Abundance vs 1983 Abundance data(tikus) year <- tikus$x[,1] tikusdat <- mvabund(tikus$abund) site <- tikus$x[,2]  plot(tikusdat[year==81,], tikusdat[year==83,], col.main=\"blue\",  xlab=\"1981 abundance\", ylab=\"1983 abundance\")"},{"path":"https://fontikar.github.io/mvabund/reference/plotMvaFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a Mvabund Object split into groups. — plotMvaFactor","title":"Draw a Mvabund Object split into groups. — plotMvaFactor","text":"Draw mvabund object x split data groups according grouping variable y.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plotMvaFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a Mvabund Object split into groups. — plotMvaFactor","text":"","code":"plotMvaFactor(x, y, type=\"p\", main=\"Abundance\", n.vars= min(12,NCOL(x)),    transformation=\"log\", legend=TRUE, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/plotMvaFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a Mvabund Object split into groups. — plotMvaFactor","text":"x mvabund object, matrix multivariate abundance data. y factor data.frame factors, non-factor columns data.frame ignored. type type plot drawn, allowed types \"p\" scatterplot, \"bx\" boxplot \"n\" plot. types, used par allowed. main title plot, see plot. n.vars number variables include plot. transformation optional transformation, \"\" = untransformed, \"sqrt\"=square root transformed, \"log\" (default)=log(Y/min+1) transformed, \"sqrt4\" =4th root transformed. legend logical, whether legend added plot. ... arguments passed methods.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plotMvaFactor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw a Mvabund Object split into groups. — plotMvaFactor","text":"variable y factor, plot drawn. boxplots drawn colors, can supplied col used display different factor levels. scatterplots also possible use plotting symbols, specified pch . colors scatterplots plotting symbols supplied, automatically generated. However, plotting symbols automatically used way seven different levels. colors plotting symbols supplied, number factor levels bigger number different values, replicated. Sometimes legends might partially visible, especially width graphics device small. fix , create graphics device larger width (see help(\"device\") available devices details) repeat plotMvaFactor command.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plotMvaFactor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Draw a Mvabund Object split into groups. — plotMvaFactor","text":"Warton, D. . ( ) Raw data graphing: informative -utilised tool  analysis multivariate abundances, , .","code":""},{"path":"https://fontikar.github.io/mvabund/reference/plotMvaFactor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw a Mvabund Object split into groups. — plotMvaFactor","text":"Ulrike Naumann, Yi Wang, Stephen Wright David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/plotMvaFactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw a Mvabund Object split into groups. — plotMvaFactor","text":"","code":"require(graphics)  ## Plot an Environment Factor vs Abundance plot data(spider) spiddat <- mvabund(spider$abund)  ## Create a Environmental factor where TRUE=Sand, FALSE=No Sand) X <- as.factor(spider$x$bare.sand>0) plotMvaFactor(x=spiddat, y=X)"},{"path":"https://fontikar.github.io/mvabund/reference/predict.manyglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Method for MANYGLM Fits — predict.manyglm","title":"Predict Method for MANYGLM Fits — predict.manyglm","text":"Obtains predictions optionally estimates standard errors predictions fitted manyglm object.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.manyglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Method for MANYGLM Fits — predict.manyglm","text":"","code":"<!-- % predict.manyglm --> # S3 method for manyglm predict(object, newdata, type = c(\"link\", \"response\",     \"terms\"), se.fit = FALSE, dispersion = NULL, terms = NULL,     na.action = na.pass, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/predict.manyglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Method for MANYGLM Fits — predict.manyglm","text":"object fitted object class inheriting \"manyglm\". newdata optionally, data frame look variables     predict.  omitted, fitted linear predictors used. type type prediction required.  default     scale linear predictors; alternative \"response\"     scale response variable.  Thus default     binomial model default predictions log-odds (probabilities     logit scale) type = \"response\" gives predicted     probabilities.  \"terms\" option returns matrix giving     fitted values term model formula linear predictor     scale. value argument can abbreviated. se.fit logical switch indicating standard errors required. dispersion dispersion MANYGLM fit assumed     computing standard errors.  omitted, returned     summary applied object used. terms type=\"terms\" default terms returned.     character vector specifies terms returned na.action function determining done missing     values newdata. default predict NA. ... arguments passed methods.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.manyglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict Method for MANYGLM Fits — predict.manyglm","text":"predict.manyglm refits model using glm making predictions.  rare (usually pathological) cases may lead differences predictions compared expected using manyglm coefficients directly. newdata omitted predictions based data   used fit.  case cases missing values   original fit determined na.action argument   fit.  na.action = na.omit omitted cases appear   residuals, whereas na.action = na.exclude   appear (predictions standard errors), residual value   NA.  See also napredict.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.manyglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Method for MANYGLM Fits — predict.manyglm","text":"se = FALSE, matrix predictions array    predictions bounds.     se = TRUE, list components fit predictions se.fit estimated standard errors residual.scale scalar giving square root     dispersion used computing standard errors.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.manyglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict Method for MANYGLM Fits — predict.manyglm","text":"Ulrike Naumann, Yi Wang David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/predict.manyglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Method for MANYGLM Fits — predict.manyglm","text":"","code":"data(spider) spiddat <- mvabund(spider$abund) Y <- spiddat[1:20,] X <- spider$x[1:20,] glm.spid.poiss <- manyglm(Y~soil.dry+bare.sand, family=\"poisson\", data=X) glm.spid.poiss$data = X newdata <- spider$x[21:28,] predict(glm.spid.poiss, newdata) #>    Alopacce Alopcune   Alopfabr    Arctlute  Arctperi     Auloalbi  Pardlugu #> 21 0.173682 1.954209 -1.7986429  0.07223037 -14.81551  1.918754714  1.838984 #> 22 5.287235 1.520908  1.9058763 -3.32962641 -14.81551  0.289921954 -2.464575 #> 23 5.598276 1.449217  1.9768606 -3.48792216 -14.81551  0.257221756 -2.180105 #> 24 3.798268 1.751523  1.1827968 -2.45110546 -14.81551  0.611282508 -2.469944 #> 25 3.000714 1.910875  0.9174565 -2.01896021 -14.81551  0.730964149 -2.904475 #> 26 5.738159 1.588995  2.5944497 -3.74362673 -14.81551 -0.009343657 -4.124837 #> 27 6.765881 1.197188  2.3015098 -4.10047391 -14.81551  0.109448241 -1.318156 #> 28 6.331652 1.378512  2.4790044 -3.96662569 -14.81551  0.036153864 -2.694148 #>    Pardmont    Pardnigr Pardpull Trocterr   Zoraspin #> 21 2.342095  3.02750539 3.449893 3.910829  2.0503870 #> 22 6.160194 -0.01797223 1.764121 1.923396 -0.1406095 #> 23 6.349804 -0.08756089 1.746517 1.887685 -0.2759097 #> 24 5.146660  0.60234881 2.059304 2.305857  0.5020410 #> 25 4.637458  0.84322260 2.150297 2.443409  0.8478749 #> 26 6.596843 -0.55770997 1.416320 1.548425 -0.3290585 #> 27 7.077643 -0.39238593 1.648414 1.721522 -0.7830435 #> 28 6.889336 -0.50249372 1.520788 1.618739 -0.5905213 pred.w.plim <- predict(glm.spid.poiss, newdata, interval=\"prediction\") pred.w.clim <- predict(glm.spid.poiss, newdata, interval=\"confidence\")"},{"path":"https://fontikar.github.io/mvabund/reference/predict.manylm.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Predictions for Multivariate Linear Models — predict.manylm","title":"Model Predictions for Multivariate Linear Models — predict.manylm","text":"predict.manylm function predictions   result model fitting function manylm.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.manylm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Predictions for Multivariate Linear Models — predict.manylm","text":"","code":"<!-- % predict.manylm --> # S3 method for manylm predict(object, newdata=NULL, se.fit = FALSE,      type = c(\"response\", \"terms\"), terms = NULL, na.action = na.pass, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/predict.manylm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Predictions for Multivariate Linear Models — predict.manylm","text":"object object class inheriting manylm. newdata optional data frame look variables predict. omitted, fitted values used. se.fit switch indicating standard errors required. type type prediction (response model term), Possible values: \"response\", \"terms\". terms type=\"terms\", terms (default terms). na.action function determining done missing values newdata. default predict NA. ... arguments passed methods.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.manylm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model Predictions for Multivariate Linear Models — predict.manylm","text":"predict.manylm produces predicted values, obtained evaluating   regression function frame newdata (defaults   model.frame(object).  logical se.fit   TRUE, standard errors predictions calculated.    numeric argument scale set (optional df),   used residual standard deviation computation   standard errors, otherwise extracted model fit.   Setting intervals specifies computation confidence   prediction (tolerance) intervals specified level, sometimes    referred narrow vs. wide intervals. fit rank-deficient, columns design matrix   dropped.  Prediction fit makes sense   newdata contained subspace original   data.  checked accurately, warning issued. newdata omitted predictions based data   used fit.  case cases missing values   original fit determined na.action argument   fit.  na.action = na.omit omitted cases appear   residuals, whereas na.action = na.exclude   appear (predictions, standard errors interval limits),   residual value NA.  See also napredict. prediction intervals single observation case   newdata (default, data used fit) error   variance(s) pred.var. can multiple res.var,   estimated   value \\(\\sigma^2\\): default assume future   observations error variance   used fitting. weights supplied, inverse   used scale factor. weighted fit, prediction   original data frame, weights defaults weights   used  model fit, warning since might   intended result. fit weighted newdata given,   default assume constant prediction variance, warning.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.manylm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Predictions for Multivariate Linear Models — predict.manylm","text":"predict.manylm produces matrix predictions interval set array predictions bounds, first dimension names: fit, lwr, upr. se.fit TRUE, list following components returned: fit vector matrix se.fit matrix standard errors predicted means residual.scale vector matrix vector residual standard deviations df numeric, degrees freedom residual","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.manylm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Model Predictions for Multivariate Linear Models — predict.manylm","text":"Variables first looked newdata searched   usual way (include environment formula   used fit).  warning given   variables found length newdata   supplied. Offsets specified offset fit lm   included predictions, whereas specified   offset term formula . Notice prediction variances prediction intervals always refer   future observations, possibly corresponding   predictors used fit. variance residuals   smaller. Strictly speaking, formula used prediction limits assumes   degrees freedom fit   residual variance.  may case res.var   obtained fit.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.manylm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Model Predictions for Multivariate Linear Models — predict.manylm","text":"Ulrike Naumann, Yi Wang David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/predict.manylm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Predictions for Multivariate Linear Models — predict.manylm","text":"","code":"data(spider) spiddat <- mvabund(spider$abund[1:20, ]) dat = spider$x[1:20,] manylm.fit <- manylm(spiddat~soil.dry+bare.sand, data=dat) predict(manylm.fit) #>       Alopacce  Alopcune     Alopfabr   Arctlute Arctperi Auloalbi   Pardlugu #> 1  10.73802292  4.445159  0.557050063 -0.1561324        0 3.967983  6.7573172 #> 2   2.45155179  7.630415  0.133819671  1.5799018        0 7.317694  6.0322943 #> 3   8.13723562  5.444881  0.424215204  0.3887383        0 5.019322  6.5297619 #> 4   6.78658242  5.964062  0.355230774  0.6717032        0 5.565308  6.4115868 #> 5   2.84207427  7.480301  0.153765554  1.4980865        0 7.159829  6.0664629 #> 6  -3.59675539 12.745220  0.293956334  3.2953890        0 8.397899  0.8918346 #> 7   0.96340695  8.202447  0.057812875  1.8916715        0 7.919259  5.9020894 #> 8   7.35734605  5.744665  0.384382449  0.5521270        0 5.334583  6.4615256 #> 9   8.97258400  5.123780  0.466880509  0.2137310        0 4.681642  6.6028505 #> 10  8.66331511  9.817187  1.220183900  1.0136815        0 2.568895 -0.9852286 #> 11 12.04246044  3.943743  0.623674033 -0.4294150        0 3.440680  6.8714486 #> 12 11.19555813  4.269285  0.580418612 -0.2519871        0 3.783030  6.7973491 #> 13 -4.61377531 12.430976  0.123452979  3.3951299        0 9.153976  1.9684070 #> 14  2.02174598  7.795629  0.111867398  1.6699471        0 7.491438  5.9946885 #> 15 -0.09377669  8.608820  0.003817363  2.1131538        0 8.346613  5.8095913 #> 16  2.67338705  7.545143  0.145149877  1.5334268        0 7.228019  6.0517037 #> 17 -0.81705206  8.886842 -0.033123828  2.2646816        0 8.638989  5.7463085 #> 18  1.60696027  7.955070  0.090682274  1.7568456        0 7.659110  5.9583969 #> 19  3.90850105  7.070375  0.208233158  1.2746677        0 6.728739  6.1597697 #> 20  1.76062740  7.896001  0.098530801  1.7246520        0 7.596992  5.9718420 #>       Pardmont  Pardnigr  Pardpull Trocterr    Zoraspin #> 1   46.6067705  6.260688 19.707832 26.28410  0.61767677 #> 2   13.0619409 24.487334 33.308592 54.39475 10.25044629 #> 3   36.0784086 11.981293 23.976559 35.10689  3.64101255 #> 4   30.6107698 14.952145 26.193415 39.68879  5.21110563 #> 5   14.6428322 23.628353 32.667619 53.06996  9.79647584 #> 6   -5.4436224 33.353427 34.550084 62.90769 20.67061905 #> 7    7.0377160 27.760607 35.751116 59.44307 11.98036921 #> 8   32.9213032 13.696712 25.256608 37.75256  4.54761035 #> 9   39.4600193 10.143889 22.605484 32.27310  2.66994557 #> 10  48.0114933  3.547945  8.871248 13.63772  8.58668141 #> 11  51.8873217  3.391491 17.566831 21.85899 -0.89869199 #> 12  48.4589391  5.254309 18.956870 24.73198  0.08580606 #> 13 -11.0718983 36.712081 38.414768 69.39221 20.99620973 #> 14  11.3220250 25.432720 34.014041 55.85280 10.75008241 #> 15   2.7580842 30.085953 37.486293 63.02941 13.20931289 #> 16  13.9599620 23.999392 32.944489 53.64221  9.99256959 #> 17  -0.1698387 31.676846 38.673421 65.48301 14.05009841 #> 18   9.6429126 26.345069 34.694838 57.25990 11.23225813 #> 19  18.9598815 21.282677 30.917270 49.45226  8.55678729 #> 20  10.2649793 26.007068 34.442621 56.73861 11.05362479 predict(manylm.fit, se.fit = TRUE) #> $fit #>       Alopacce  Alopcune     Alopfabr   Arctlute Arctperi Auloalbi   Pardlugu #> 1  10.73802292  4.445159  0.557050063 -0.1561324        0 3.967983  6.7573172 #> 2   2.45155179  7.630415  0.133819671  1.5799018        0 7.317694  6.0322943 #> 3   8.13723562  5.444881  0.424215204  0.3887383        0 5.019322  6.5297619 #> 4   6.78658242  5.964062  0.355230774  0.6717032        0 5.565308  6.4115868 #> 5   2.84207427  7.480301  0.153765554  1.4980865        0 7.159829  6.0664629 #> 6  -3.59675539 12.745220  0.293956334  3.2953890        0 8.397899  0.8918346 #> 7   0.96340695  8.202447  0.057812875  1.8916715        0 7.919259  5.9020894 #> 8   7.35734605  5.744665  0.384382449  0.5521270        0 5.334583  6.4615256 #> 9   8.97258400  5.123780  0.466880509  0.2137310        0 4.681642  6.6028505 #> 10  8.66331511  9.817187  1.220183900  1.0136815        0 2.568895 -0.9852286 #> 11 12.04246044  3.943743  0.623674033 -0.4294150        0 3.440680  6.8714486 #> 12 11.19555813  4.269285  0.580418612 -0.2519871        0 3.783030  6.7973491 #> 13 -4.61377531 12.430976  0.123452979  3.3951299        0 9.153976  1.9684070 #> 14  2.02174598  7.795629  0.111867398  1.6699471        0 7.491438  5.9946885 #> 15 -0.09377669  8.608820  0.003817363  2.1131538        0 8.346613  5.8095913 #> 16  2.67338705  7.545143  0.145149877  1.5334268        0 7.228019  6.0517037 #> 17 -0.81705206  8.886842 -0.033123828  2.2646816        0 8.638989  5.7463085 #> 18  1.60696027  7.955070  0.090682274  1.7568456        0 7.659110  5.9583969 #> 19  3.90850105  7.070375  0.208233158  1.2746677        0 6.728739  6.1597697 #> 20  1.76062740  7.896001  0.098530801  1.7246520        0 7.596992  5.9718420 #>       Pardmont  Pardnigr  Pardpull Trocterr    Zoraspin #> 1   46.6067705  6.260688 19.707832 26.28410  0.61767677 #> 2   13.0619409 24.487334 33.308592 54.39475 10.25044629 #> 3   36.0784086 11.981293 23.976559 35.10689  3.64101255 #> 4   30.6107698 14.952145 26.193415 39.68879  5.21110563 #> 5   14.6428322 23.628353 32.667619 53.06996  9.79647584 #> 6   -5.4436224 33.353427 34.550084 62.90769 20.67061905 #> 7    7.0377160 27.760607 35.751116 59.44307 11.98036921 #> 8   32.9213032 13.696712 25.256608 37.75256  4.54761035 #> 9   39.4600193 10.143889 22.605484 32.27310  2.66994557 #> 10  48.0114933  3.547945  8.871248 13.63772  8.58668141 #> 11  51.8873217  3.391491 17.566831 21.85899 -0.89869199 #> 12  48.4589391  5.254309 18.956870 24.73198  0.08580606 #> 13 -11.0718983 36.712081 38.414768 69.39221 20.99620973 #> 14  11.3220250 25.432720 34.014041 55.85280 10.75008241 #> 15   2.7580842 30.085953 37.486293 63.02941 13.20931289 #> 16  13.9599620 23.999392 32.944489 53.64221  9.99256959 #> 17  -0.1698387 31.676846 38.673421 65.48301 14.05009841 #> 18   9.6429126 26.345069 34.694838 57.25990 11.23225813 #> 19  18.9598815 21.282677 30.917270 49.45226  8.55678729 #> 20  10.2649793 26.007068 34.442621 56.73861 11.05362479 #>  #> $se.fit #>           [,1]     [,2]      [,3]      [,4] [,5]     [,6]      [,7]      [,8] #>  [1,] 2.231756 4.147225 0.2395863 1.1013029    0 3.555452  4.935183  9.269407 #>  [2,] 1.500202 2.787795 0.1610516 0.7403038    0 2.390000  3.317466  6.230963 #>  [3,] 1.725850 3.207111 0.1852756 0.8516540    0 2.749484  3.816450  7.168171 #>  [4,] 1.533669 2.849985 0.1646444 0.7568187    0 2.443317  3.391472  6.369965 #>  [5,] 1.463026 2.718711 0.1570606 0.7219585    0 2.330774  3.235256  6.076555 #>  [6,] 3.305977 6.143429 0.3549075 1.6313983    0 5.266814  7.310658 13.731096 #>  [7,] 1.699096 3.157395 0.1824035 0.8384519    0 2.706862  3.757289  7.057052 #>  [8,] 1.606978 2.986214 0.1725143 0.7929943    0 2.560107  3.553584  6.674446 #>  [9,] 1.872810 3.480203 0.2010522 0.9241740    0 2.983608  4.141429  7.778555 #> [10,] 5.047673 9.379984 0.5418841 2.4908715    0 8.041542 11.162148 20.965079 #> [11,] 2.525764 4.693574 0.2711490 1.2463869    0 4.023841  5.585336 10.490545 #> [12,] 2.332667 4.334747 0.2504195 1.1510997    0 3.716216  5.158333  9.688535 #> [13,] 3.047262 5.662662 0.3271335 1.5037300    0 4.854649  6.738548 12.656542 #> [14,] 1.548922 2.878329 0.1662818 0.7643453    0 2.467616  3.425201  6.433314 #> [15,] 1.883451 3.499977 0.2021946 0.9294251    0 3.000561  4.164960  7.822752 #> [16,] 1.478219 2.746944 0.1586917 0.7294558    0 2.354979  3.268853  6.139658 #> [17,] 2.024594 3.762261 0.2173468 0.9990750    0 3.225418  4.477077  8.408979 #> [18,] 1.603013 2.978846 0.1720887 0.7910378    0 2.553790  3.544816  6.657979 #> [19,] 1.399985 2.601564 0.1502930 0.6908498    0 2.230343  3.095851  5.814721 #> [20,] 1.582207 2.940183 0.1698551 0.7807708    0 2.520644  3.498807  6.571564 #>            [,9]     [,10]     [,11]    [,12] #>  [1,] 13.671329 14.463382 13.142942 3.877386 #>  [2,]  9.189967  9.722391  8.834781 2.606407 #>  [3,] 10.572243 11.184749 10.163633 2.998441 #>  [4,]  9.394979  9.939280  9.031869 2.664551 #>  [5,]  8.962233  9.481462  8.615849 2.541818 #>  [6,] 20.251816 21.425111 19.469097 5.743707 #>  [7,] 10.408355 11.011366 10.006080 2.951960 #>  [8,]  9.844055 10.414373  9.463589 2.791916 #>  [9,] 11.472490 12.137153 11.029087 3.253764 #> [10,] 30.921125 32.712549 29.726045 8.769677 #> [11,] 15.472369 16.368766 14.874373 4.388187 #> [12,] 14.289496 15.117362 13.737217 4.052707 #> [13,] 18.666970 19.748447 17.945505 5.294222 #> [14,]  9.488412 10.038126  9.121692 2.691050 #> [15,] 11.537677 12.206115 11.091754 3.272251 #> [16,]  9.055302  9.579924  8.705321 2.568214 #> [17,] 12.402294 13.120825 11.922954 3.517469 #> [18,]  9.819767 10.388678  9.440240 2.785027 #> [19,]  8.576056  9.072913  8.244598 2.432293 #> [20,]  9.692315 10.253842  9.317713 2.748880 #>   new <- spider$x[21:28,] predict(manylm.fit, new, se.fit = TRUE) #> $fit #>     Alopacce Alopcune  Alopfabr    Arctlute Arctperi   Auloalbi    Pardlugu #> 21  3.304231 7.302652 0.1773701  1.40126361        0  6.9730079  6.10689925 #> 22 20.197395 4.599745 1.6775031 -1.52870076        0 -1.7101903  1.31949705 #> 23 21.075306 4.013766 1.6805600 -1.75256350        0 -1.9435064  1.80707164 #> 24 15.623198 6.358031 1.4438766 -0.57039631        0  0.1388759  0.91927874 #> 25 13.291321 7.632980 1.3884277 -0.02102029        0  0.8963107  0.08949352 #> 26 22.037939 5.349847 2.0165687 -1.68005345        0 -3.1672339 -0.92865300 #> 27 24.427277 1.972995 1.7252800 -2.57570837        0 -2.9304924  3.34379098 #> 28 23.469828 3.546501 1.8790499 -2.18139347        0 -3.1331463  1.26755462 #>     Pardmont   Pardnigr    Pardpull    Trocterr    Zoraspin #> 21  16.51371  22.611809  31.9090716  51.5021594   9.2592327 #> 22  93.02333 -20.575281  -7.6195916 -22.1170967  -5.7735444 #> 23  96.04465 -22.111017  -8.2868195 -24.0258962  -7.0959923 #> 24  74.50632 -10.514031  -0.1118659  -6.5997988  -0.4561804 #> 25  65.87789  -5.987097   2.5368234  -0.3183557   2.7144775 #> 26 103.59781 -26.942116 -15.1784328 -34.6330076  -6.1424085 #> 27 108.00170 -28.287298 -11.4463511 -32.1597702 -11.9064619 #> 28 106.70919 -28.098737 -13.6278537 -34.0989925  -9.3290302 #>  #> $se.fit #>          [,1]      [,2]      [,3]      [,4] [,5]      [,6]      [,7]      [,8] #> [1,] 1.428495  2.654543 0.1533536 0.7049186    0  2.275762  3.158896  5.933133 #> [2,] 6.360094 11.818829 0.6827768 3.1385109    0 10.132384 14.064364 26.416107 #> [3,] 6.375193 11.846888 0.6843978 3.1459622    0 10.156440 14.097755 26.478823 #> [4,] 5.396198 10.027641 0.5792994 2.6628580    0  8.596784 11.932857 22.412648 #> [5,] 5.306006  9.860039 0.5696170 2.6183508    0  8.453097 11.733411 22.038043 #> [6,] 7.929273 14.734801 0.8512333 3.9128526    0 12.632272 17.534361 32.933559 #> [7,] 6.700405 12.451222 0.7193103 3.3064439    0 10.674540 14.816909 27.829560 #> [8,] 7.255852 13.483398 0.7789394 3.5805402    0 11.559433 16.045195 30.136563 #>           [,9]     [,10]     [,11]     [,12] #> [1,]  8.750702  9.257677  8.412494  2.481825 #> [2,] 38.960777 41.217981 37.454970 11.049838 #> [3,] 39.053275 41.315838 37.543893 11.076072 #> [4,] 33.056127 34.971243 31.778530  9.375194 #> [5,] 32.503625 34.386733 31.247383  9.218497 #> [6,] 48.573283 51.387390 46.695959 13.776083 #> [7,] 41.045460 43.423441 39.459081 11.641084 #> [8,] 44.448029 47.023139 42.730144 12.606102 #>"},{"path":"https://fontikar.github.io/mvabund/reference/predict.traitglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictions from fourth corner model fits — predict.traitglm","title":"Predictions from fourth corner model fits — predict.traitglm","text":"Obtains prediction fitted fourth corner model object.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.traitglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictions from fourth corner model fits — predict.traitglm","text":"","code":"# S3 method for traitglm predict(object, newR=NULL, newQ=NULL, newL=NULL, type=\"response\", ...)"},{"path":"https://fontikar.github.io/mvabund/reference/predict.traitglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictions from fourth corner model fits — predict.traitglm","text":"object fitted object class traitglm. newR new data frame environmental variables. omitted, original matrix environmental variables used. newQ new data frame traits response taxon. omitted, original matrix traits used. newL new data frame abundances (sites rows, taxa columns). used seeking predicted log-likelihoods. omitted, original abundances used. type type prediction required. default predictions scale response variable, alternatives \"logL\" predictive log-likelihood, \"link\" linear predictors. ... arguments passed methods.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.traitglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predictions from fourth corner model fits — predict.traitglm","text":"newR newQ omitted, usual, predictions based data used fit. Note two types predictions possible principle: predicting new sites (specifying new set environmental variables , newR) predicting new taxa (specifying new set traits , newQ). Unfortunately, predicting new sites implemented moment! issue predicting new taxa main effect included model taxon (default), intercept unknown new species. predictive log-likelihoods desired, new data frame abundances newL need specified, whose rows correspond newR whose columns correspond rows newQ.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.traitglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictions from fourth corner model fits — predict.traitglm","text":"matrix predictions, sites rows taxa columns.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.traitglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predictions from fourth corner model fits — predict.traitglm","text":"Brown , Warton DI, Andrew NR, Binns M, Cassis G Gibb H (2014) fourth corner solution - using species traits better understand species traits interact environment, Methods Ecology Evolution 5, 344-352.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/predict.traitglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predictions from fourth corner model fits — predict.traitglm","text":"David . Warton <David.Warton@unsw.edu.au>","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/predict.traitglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictions from fourth corner model fits — predict.traitglm","text":"","code":"data(antTraits)  # fit a fourth corner model using negative binomial regression via manyglm: ft=traitglm(antTraits$abund,antTraits$env,antTraits$traits,method=\"manyglm\") ft$fourth #print fourth corner terms #>                Bare.ground Canopy.cover Shrub.cover Volume.lying.CWD #> Femur.length  -0.005345114  -0.03372640 -0.08466868      0.166704473 #> No.spines     -0.044762960  -0.05617178 -0.08895730     -0.119947323 #> Pilosity1      0.106170621   0.27895627  0.21017965      0.321139481 #> Pilosity2      0.156827335   0.21664390  0.24303431      0.273490092 #> Pilosity3      0.114907563  -0.06121788  0.14341268      0.198330954 #> Polymorphism1  0.104301092   0.05480562  0.03436300     -0.019276849 #> Polymorphism2  0.049544180   0.03579859  0.03286363     -0.009168761 #> Webers.length  0.088389978   0.08653766 -0.04842004     -0.014818163 #>               Feral.mammal.dung #> Femur.length        -0.02590566 #> No.spines            0.03960764 #> Pilosity1            0.03909514 #> Pilosity2            0.04365594 #> Pilosity3            0.06744810 #> Polymorphism1        0.07903784 #> Polymorphism2        0.02906444 #> Webers.length       -0.05484184  # predict to the first five sites predict(ft, newR=antTraits$env[1:5,]) #>   Amblyopone.australis Aphaenogaster.longiceps Camponotus.cinereus.amperei #> 1            0.2915247               1.6758240                  0.13962680 #> 2            0.2660360               1.2279629                  0.10225500 #> 3            0.6399779               0.4133679                  0.06996261 #> 4            0.7457054               1.1254080                  0.15159501 #> 5            0.6290863               1.1886454                  0.13795845 #>   Camponotus.claripes Camponotus.consobrinus Camponotus.nigriceps #> 1           1.5882815               6.533255            0.6465306 #> 2           0.9992304               3.822428            0.3617245 #> 3           0.5286793               2.085881            0.2068364 #> 4           1.5565875               6.994261            0.7491589 #> 5           1.2202803               4.786304            0.4660317 #>   Camponotus.nigroaeneus Cardiocondyla.nuda.atalanta Crematogaster.sp..A #> 1              0.4324601                   0.4753732           0.6187287 #> 2              0.2952200                   0.5125803           0.5969842 #> 3              0.3230668                   0.2258040           0.2123576 #> 4              0.6981356                   0.2937769           0.3467095 #> 5              0.5016820                   0.5329964           0.5701489 #>   Heteroponera.sp..A Iridomyrmex.bicknelli Iridomyrmex.dromus #> 1           2.752978              4.265484          0.5410132 #> 2           2.736977              5.179754          0.3113038 #> 3           6.248325              2.472491          0.2169202 #> 4           3.560596              5.457475          0.3833169 #> 5           5.951588              5.885929          0.4180185 #>   Iridomyrmex.mjobergi Iridomyrmex.purpureus Iridomyrmex.rufoniger #> 1             4.783734             1.7115656             10.787564 #> 2             3.509257             1.6166375             14.377949 #> 3             3.372523             0.6516344              7.652899 #> 4             3.685605             2.3236480             14.071590 #> 5             5.297098             1.7583146             16.972377 #>   Iridomyrmex.suchieri Iridomyrmex.suchieroides Melophorus.sp..E #> 1             2.260163                0.6497343        0.3398724 #> 2             1.552272                0.9099106        0.2622988 #> 3             1.500275                0.5586519        0.1348947 #> 4             1.849393                0.9237102        0.2737148 #> 5             2.371717                1.1409125        0.3069213 #>   Melophorus.sp..F Melophorus.sp..H Meranoplus.sp..A Monomorium.leae #> 1         2.765283        0.6400440         1.166041        4.624572 #> 2         1.952843        1.4222025         2.220640        4.154987 #> 3         1.092640        0.2184712         0.262674        3.555537 #> 4         2.586227        1.0959581         1.095892        2.940917 #> 5         2.408389        0.9741255         1.326606        5.773649 #>   Monomorium.rothsteini Monomorium.sydneyense Myrmecia.pilosula.complex #> 1              4.038920             0.7488779                 0.3649560 #> 2              3.202697             1.8842534                 0.2176261 #> 3              2.114402             0.4047219                 0.3307302 #> 4              2.261987             0.8872597                 0.5034426 #> 5              4.008355             1.4173703                 0.4202062 #>   Notoncus.capitatus Notoncus.ectatommoides Nylanderia.sp..A Ochetellus.glaber #> 1          0.5225036               2.823612         5.198331         0.4656999 #> 2          0.3876826               4.145781         3.608756         0.4092767 #> 3          0.3731349               0.576125         1.824137         0.3193943 #> 4          0.7014965               3.545182         2.563810         0.2778480 #> 5          0.6126697               2.768897         4.058062         0.5462199 #>   Paraparatrechina.sp..B Pheidole.sp..A Pheidole.sp..B Pheidole.sp..E #> 1              0.6742612      11.530209      0.5418926       5.960516 #> 2              0.5974297      11.990184      0.5360748       6.272317 #> 3              0.5957804       6.302869      0.2560292       2.864701 #> 4              0.4584397       9.015750      0.4055414       4.070264 #> 5              0.8931452      13.730600      0.5909188       6.709783 #>   Pheidole.sp..J Polyrhachis.sp..A Rhytidoponera.metallica.sp..A #> 1      0.2017042        0.33004718                     11.029163 #> 2      0.1807849        0.42340247                      6.937381 #> 3      0.0777551        0.07352097                      4.311108 #> 4      0.1493097        0.32217248                      7.103719 #> 5      0.1923654        0.30566147                      8.723181 #>   Rhytidoponera.sp..B Solenopsis.sp..A Stigmacros.sp..A Tapinoma.sp..A #> 1            2.396689        0.1157554        0.9161827       2.507582 #> 2            2.494886        0.1283362        1.1465768       2.102907 #> 3            0.246794        0.1412504        0.7393362       1.907691 #> 4            2.974164        0.0772906        0.7023465       1.640594 #> 5            1.476929        0.1948736        1.3971389       3.030164 #>   Tetramorium.sp..A #> 1         1.8347039 #> 2         2.3379179 #> 3         0.6370468 #> 4         1.3149427 #> 5         1.9883810"},{"path":"https://fontikar.github.io/mvabund/reference/residuals.manyglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Residuals for MANYGLM, MANYANY, GLM1PATH Fits — residuals.manyglm","title":"Residuals for MANYGLM, MANYANY, GLM1PATH Fits — residuals.manyglm","text":"Obtains Dunn-Smyth residuals fitted manyglm, manyany glm1path object.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/residuals.manyglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residuals for MANYGLM, MANYANY, GLM1PATH Fits — residuals.manyglm","text":"","code":"<!-- % residuals.manyglm --> # S3 method for manyglm residuals(object, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/residuals.manyglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residuals for MANYGLM, MANYANY, GLM1PATH Fits — residuals.manyglm","text":"object fitted object class inheriting \"manyglm\". ... arguments passed methods.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/residuals.manyglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Residuals for MANYGLM, MANYANY, GLM1PATH Fits — residuals.manyglm","text":"residuals.manyglm computes Randomised Quantile ``Dunn-Smyth\" residuals (Dunn & Smyth 1996) manyglm object. fitted model correct Dunn-Smyth residuals standard normal distribution. Similar functions written compute Dunn-Smyth residuals manyany glm1path objects. Note discrete data, Dunn-Smyth residuals involve random number generation,  return identical results replicate runs. Hence worth calling function multiple times get sense whether interpretation results holds replication.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/residuals.manyglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residuals for MANYGLM, MANYANY, GLM1PATH Fits — residuals.manyglm","text":"matrix Dunn-Smyth residuals.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/residuals.manyglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Residuals for MANYGLM, MANYANY, GLM1PATH Fits — residuals.manyglm","text":"Dunn, P.K., & Smyth, G.K. (1996). Randomized quantile residuals. Journal Computational Graphical Statistics 5, 236-244.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/residuals.manyglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Residuals for MANYGLM, MANYANY, GLM1PATH Fits — residuals.manyglm","text":"David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/residuals.manyglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Residuals for MANYGLM, MANYANY, GLM1PATH Fits — residuals.manyglm","text":"","code":"data(spider) spiddat <- mvabund(spider$abund) X <- as.matrix(spider$x)  ## obtain residuals for Poisson regression of the spider data, and doing a qqplot: glmP.spid  <- manyglm(spiddat~X, family=\"poisson\") resP       <- residuals(glmP.spid) qqnorm(resP) qqline(resP,col=\"red\")  #clear departure from normality.  ## try again using negative binomial regression: glmNB.spid <- manyglm(spiddat~X, family=\"negative.binomial\") resNB      <- residuals(glmNB.spid) qqnorm(resNB) qqline(resNB,col=\"red\")  #that looks a lot more promising.  #note that you could construct a similar plot directly from the manyglm object using plot(glmNB.spid, which=2)"},{"path":"https://fontikar.github.io/mvabund/reference/ridgeParamEst.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the ridge parameter — ridgeParamEst","title":"Estimation of the ridge parameter — ridgeParamEst","text":"Maximum likelihood estimation ridge parameter cross-validation","code":""},{"path":"https://fontikar.github.io/mvabund/reference/ridgeParamEst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the ridge parameter — ridgeParamEst","text":"","code":"ridgeParamEst(dat, X, weights = rep(1,times=nRows), refs,    tol=1.0e-010, only.ridge=FALSE,  doPlot=FALSE,   col=\"blue\",type=\"l\", ...)"},{"path":"https://fontikar.github.io/mvabund/reference/ridgeParamEst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the ridge parameter — ridgeParamEst","text":"dat data matrix. X design matrix. weights weights cases design matrix. refs vector specifying validation group membership. Default construct refs using method function sample size N:  N<=20, leave-one-used refs=1:N, N<=40,  10-fold Cross Validation used group membership chosen randomly  equal size groups, otherwise 5-fold CV random group memberships. tol sensitivity calculations near zero. .ridge logical, whether ridge Parameters passed back  additionally Cross Validation penalised likelihood. doPlot logical, whether plot -2logL vs candidate ridge parameter drawn. col color Plot symbols. type type Plot symbols. ... plot arguments.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/ridgeParamEst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the ridge parameter — ridgeParamEst","text":"function estimates ridge parameter applying ridge regularization sample correlation matrix residuals. ridge parameter estimated maximize normal likelihood estimated via cross validation (Warton 2008).","code":""},{"path":"https://fontikar.github.io/mvabund/reference/ridgeParamEst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the ridge parameter — ridgeParamEst","text":"list following component: ridgeParameter estimated ridge parameter .ridge=FALSE returned list additionally contains element: minLL minimum negative log-likelihood .","code":""},{"path":"https://fontikar.github.io/mvabund/reference/ridgeParamEst.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the ridge parameter — ridgeParamEst","text":"Warton D.. (2008). Penalized normal likelihood ridge regularization correlation covariance matrices. Journal American Statistical Association 103, 340-349.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/ridgeParamEst.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of the ridge parameter — ridgeParamEst","text":"David Warton <David.Warton@unsw.edu.au> Ulrike Naumann.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/ridgeParamEst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the ridge parameter — ridgeParamEst","text":"","code":"data(spider) spiddat <- mvabund(spider$abund) X <- as.matrix(spider$x)  ridgeParamEst(dat = spiddat, X = model.matrix(spiddat~X)) #> $ridgeParameter #> [1] 0.1897086 #>  #> $minLL #> [1] 2163.444 #>"},{"path":"https://fontikar.github.io/mvabund/reference/shiftpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a shift for plotting overlapping points — shiftpoints","title":"Calculate a shift for plotting overlapping points — shiftpoints","text":"Calculate shift add overlapping points plots better visibility","code":""},{"path":"https://fontikar.github.io/mvabund/reference/shiftpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a shift for plotting overlapping points — shiftpoints","text":"","code":"shiftpoints(x, y, sh=( max(x)-min(x))/100, centered=TRUE, method=1, reg=6, na.rm=TRUE)"},{"path":"https://fontikar.github.io/mvabund/reference/shiftpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a shift for plotting overlapping points — shiftpoints","text":"x data matrix numeric vector use plot. y data matrix numeric vector use plot. sh maximum total shift. centered logical, whether shift centered 0, FALSE shift positive . method numeric, can value 1 2, see Details. reg numeric, see Details. na.rm logical, indicating whether missing values removed.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/shiftpoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a shift for plotting overlapping points — shiftpoints","text":"function similar jitter defines points two-dimensional plot. contrast jitter points ties shift different 0. method calculate shift therefore  based random numbers.  method=1 (default) individual shift selected shift range sh, without regard number overlapping points method=2 means reg overlapping values fixed shift sh/reg used","code":""},{"path":"https://fontikar.github.io/mvabund/reference/shiftpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a shift for plotting overlapping points — shiftpoints","text":"Returns array shift values dimension x.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/shiftpoints.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate a shift for plotting overlapping points — shiftpoints","text":"Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/shiftpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a shift for plotting overlapping points — shiftpoints","text":"","code":"shiftpoints( x=c(1:5, 1:10), y=c(2:6, 1:10) ) #>  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"},{"path":"https://fontikar.github.io/mvabund/reference/solberg.html","id":null,"dir":"Reference","previous_headings":"","what":"Solberg Data — solberg","title":"Solberg Data — solberg","text":"dataset contains list abundance data species factor variable.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/solberg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solberg Data — solberg","text":"","code":"data(solberg)"},{"path":"https://fontikar.github.io/mvabund/reference/solberg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Solberg Data — solberg","text":"list containing elements abund data frame containing 12 rows 53 variables, corresponding species. following variables:Paramesacanthion_sp., Halalaimus_sp., Viscosia_sp., Symplocostoma_sp., Bathylaimus_inermis, Bathylaimus_sp.,Rhabdodemania_sp., Pandolaimus_latilaimus, Halanonchus_sp. ,Trefusia_sp., Chromadora_sp., Dichromadora_sp.,Neochromadora_sp., Prochromadorella_sp., Neotonchus_sp.,Marylynnia_complexa, Paracanthonchus_sp., Cyatholaimidae_un .,Choniolaimus_papillatus, Halichoanolaimus_dolichurus,Richtersia_inaequalis, Dorylaimopsis_punctatus,Sabatieria_longicaudata, Sabatieria_punctata,Sabatieria_sp., Setosabieria_hilarula,Chromaspirina_sp., Molgolaimus_sp., Spirinia_parasitifera, Aponema_torosa, Microlaimus_sp.1, Microlaimus_sp.2, Camacolaimus_sp., Leptolaimus_elegans, Monhystera_sp.,Amphimonhystera_sp., Daptonema_sp.1, Daptonema_sp.2, Daptonema_sp.3, Theristus_aff_acer, Xyalidae_un.,Sphaerolaimus_macrocirculus, Sphaerolaimus_paradoxus,Desmolaimus_sp., Eleutherolaimus_sp., Eumorpholaimus_sp.,Terschellingia_longicaudata, Paralinhomoeus_conicaudatus,Linhomieidae_un., Linhomieidae_un.B, Axonolaimus_sp.,Odontophora_sp., Unidentified x factor levels control, high, low","code":""},{"path":"https://fontikar.github.io/mvabund/reference/solberg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Solberg Data — solberg","text":"Gee J. M., Warwick R. M., Schaanning M., Berge J. . Ambrose W. G. Jr (1985) Effects organic enrichment meiofaunal abundance community structure sublittoral soft sediments. Journal Experimental Marine Biology Ecology. 91(3), 247-262.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/solberg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solberg Data — solberg","text":"abundance species measured count number organisms sample.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/solberg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solberg Data — solberg","text":"","code":"data(solberg) solbergdat <- mvabund( solberg$abund ) treatment <- solberg$x  ## Create a formula for multivariate abundance data: foo.sol <- mvformula( solbergdat ~ treatment ) #> Error in eval(terms(x)[[2]]): object 'solbergdat' not found  ## Fit a multivariate linear model: lm.solberg <- manylm(foo.sol) #> Error in model.frame(formula = foo.sol, drop.unused.levels = TRUE): object 'foo.sol' not found lm.solberg #> Error in eval(expr, envir, enclos): object 'lm.solberg' not found"},{"path":"https://fontikar.github.io/mvabund/reference/spider.html","id":null,"dir":"Reference","previous_headings":"","what":"Spider data — spider","title":"Spider data — spider","text":"data spider2 directory, CANOCO FORTRAN package, trait variables added.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/spider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spider data — spider","text":"","code":"data(spider)"},{"path":"https://fontikar.github.io/mvabund/reference/spider.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spider data — spider","text":"list containing elements abund matrix 28 observations abundance 12 hunting spider species x data frame six (transformed) environmental variables 28 sites. trait data frame three species traits 12 species. matrix abund following variables Alopacce (numeric) Abundance species Alopecosa accentuata Alopcune (numeric) Abundance species Alopecosa cuneata Alopfabr (numeric) Abundance species Alopecosa fabrilis Arctlute (numeric) Abundance species Arctosa lutetiana Arctperi (numeric) Abundance species Arctosa perita Auloalbi (numeric) Abundance species Aulonia albimana Pardlugu (numeric) Abundance species Pardosa lugubris Pardmont (numeric) Abundance species Pardosa monticola Pardnigr (numeric) Abundance species Pardosa nigriceps Pardpull (numeric) Abundance species Pardosa pullata Trocterr (numeric) Abundance species Trochosa terricola Zoraspin (numeric) Abundance species Zora spinimana data frame x following variables soil.dry (numeric) Soil dry mass bare.sand (numeric) Cover bare sand fallen.leaves (numeric) Cover fallen leaves / twigs moss (numeric) Cover moss herb.layer (numeric) Cover herb layer reflection (numeric) Reflection soil surface cloudless sky variables already log(x+1)-transformed. data frame trait constructed Googling species recording variables species descriptions images specimens: length (numeric) Length (log-transformed), averaged across typical lengths (centimetres) male females colour (factor) Predominant colour, \"yellow\" \"dark\" marks (factor) Whether spider typically markings : \"none\", \"spots\" \"stripes\"","code":""},{"path":"https://fontikar.github.io/mvabund/reference/spider.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spider data — spider","text":"Data attributed van der Aart & Smeenk-Enserink (1975), obtained spider2 directory, CANOCO FORTRAN package. Trait data largely extracted Wikipedia entries species.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/spider.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spider data — spider","text":"ter Braak, C. J. F. Smilauer, P.  (1998)  CANOCO reference manual user's guide CANOCO Windows: software canonical community ordination (version 4). Microcomputer Power, New York, New York, USA. van der Aart, P. J. M., Smeenk-Enserink, N. (1975) Correlations distributions hunting spiders (Lycos- idae, Ctenidae) environmental characteristics dune area. Netherlands Journal Zoology 25, 1-45.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/spider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spider data — spider","text":"abundance species measured count number organisms sample.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/spider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spider data — spider","text":"","code":"require(graphics)  data(spider) spiddat <- as.mvabund(spider$abund)  plot(spiddat) #> Kicking off BoxPlot sequence  #> Overlapping points were shifted along the y-axis to make them visible. #>  #>  #> ABOUT TO PLOT THE FUNCTION  #>"},{"path":"https://fontikar.github.io/mvabund/reference/summary.manyglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing Multivariate Generalized Linear Model Fits for Abundance Data — summary.manyglm","title":"Summarizing Multivariate Generalized Linear Model Fits for Abundance Data — summary.manyglm","text":"summary method class \"manyglm\".","code":""},{"path":"https://fontikar.github.io/mvabund/reference/summary.manyglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing Multivariate Generalized Linear Model Fits for Abundance Data — summary.manyglm","text":"","code":"# S3 method for manyglm summary(object, resamp=\"pit.trap\", test=\"wald\",          p.uni=\"none\", nBoot=999, cor.type=object$cor.type, block=NULL,         show.cor = FALSE, show.est=FALSE, show.residuals=FALSE,         symbolic.cor = FALSE,         rep.seed = FALSE,          show.time=FALSE, show.warning=FALSE,...)  # S3 method for summary.manyglm print(x, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/summary.manyglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing Multivariate Generalized Linear Model Fits for Abundance Data — summary.manyglm","text":"object  object class manyglm, typically result call  manyglm. resamp method resampling used. Can  one \"case\", \"perm.resid\", \"montecarlo\" \"pit.trap\" (default). See  Details. test test used. cor.type=\"\", can  one \"wald\" Wald-Test \"score\" Score-Test \"LR\"  Likelihood-Ratio-Test, otherwise \"wald\" \"score\" allowed.  default value \"LR\". p.uni whether calculate univariate test  statistics P-values, , type. can one  following options.  \"none\" = univariate P-values (default)   \"unadjusted\" = test statistic (ordinary unadjusted) P-value  reported response variable.  \"adjusted\" = Univariate P-values  adjusted multiple testing, using step-resampling procedure. nBoot number Bootstrap iterations, default  nBoot=999. cor.type structure imposed estimated correlation matrix fitted model. Can \"\"(default), \"shrink\", \"R\". See Details. block factor specifying sampling level resampled. Default resampling rows. show.cor, show.est, show.residuals logical, TRUE,  correlation matrix estimated parameters, estimated model  parameters, residual summary shown. symbolic.cor logical. TRUE, correlation printed symbolic form (see  symnum ) rather numerical format. rep.seed logical. Whether fix random seed resampling data. Useful simulation diagnostic purposes. show.time Whether display timing information resampling  procedure: \"none\" shows none, \"\" shows timing information \"total\"  shows overall time taken tests. show.warning logical. Whether display warnings operation  procedure. ... summary.manyglm method,  additional arguments including: rep.seed - logical. Whether fix  random seed resampling data. Useful simulation diagnostic  purposes.bootID - matrix integer numbers  row specifies bootstrap id's resampling run. bootID  supplied, nBoot set number rows bootID. Default  NULL. print.summary.manyglm method,  optional arguments passed methods. See  print.summary.glm details. x object  class \"summary.manyglm\", usually, result call  summary.manyglm.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/summary.manyglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarizing Multivariate Generalized Linear Model Fits for Abundance Data — summary.manyglm","text":"summary.manyglm function returns table summarising  statistical significance multivariate term specified fitted  manyglm model (Warton 2011). model term, returns test  statistic determined argument test, P-value calculated  resampling rows data using method determined argument  resamp. four possible resampling methods, three (case, residual  permutation parametric boostrap) described detail Davison  Hinkley (1997, chapter 6), default (PIT-trap) new method ( review) bootstraps probability integral transform residuals,  found give reliable Type error rates. methods  involve resampling alternative hypothesis. methods ensure  approximately valid inference even mean-variance relationship  correlation variables misspecified. Standardized pearson  residuals (see manyglm currently used residual  permutation, necessary, resampled response values truncated  fall required range (e.g. counts negative).  However, can introduce bias, especially family=binomial,  advise extreme caution using perm.resid presence/absence data.  resamp=\"none\", p-values calculated, however test  statistics returned. specific hypothesis primary interest want test, use anova.manyglm function, can resample rows data null hypothesis usually achieves better approximation true significance level. information different types data can modelled using manyglm, see manyglm. check model assumptions, use plot.manyglm. Multivariate test statistics constructed using one three methods: log-likelihood ratio statistic test=\"LR\", example Warton et. al. (2012), Wald statistic test=\"wald\" Score statistic test=\"score\". \"LR\" good properties, available cor.type=\"\". default Wald test statistic makes use generalised estimating equations (GEE) approach, estimating covariance matrix parameter estimates using sandwich-type estimator assumes mean-variance relationship data correctly specified unknown constant correlation across observations. assumptions allow test statistic account correlation variables efficient way traditional GEE sandwich estimators (Warton 2008a). common correlation matrix estimated standardized Pearson residuals, method specified cor.type used adjust high dimensionality. Wald statistic problems count data presence-absence  data estimated means zero (usually means large parameter estimates, check using coef). instances Wald statistics used, Score LR job.  summary.manyglm function designed specifically high-dimensional data (, number variables p small compared number observations N). instances correlation matrix computationally intensive estimate numerically unstable, default test statistic calculated assuming independence variables (cor.type=\"\"). Note however resampling scheme used ensures P-values approximately correct even independence assumption satisfied. However computationally feasible dataset, recommended use cor.type=\"shrink\" account correlation variables, cor.type=\"R\" p small. cor.type=\"R\" option uses unstructured correlation matrix (possible N>p), standard classical multivariate test statistics obtained. Note however statistics typically numerically unstable low power p small compared N. cor.type=\"shrink\" option applies ridge regularisation (Warton (2008b)), shrinking sample correlation matrix towards identity, improves stability p small compared N. provides compromise \"R\" \"\", allowing us account correlation variables, using numerically stable test statistic good properties. shrinkage parameter attribute manyglm object. Wald test, sample correlation matrix alternative model used calculate test statistics. object$shrink.param used. Score test, sample correlation matrix null model used calculate test statistics. shrink.param null model used instead. cor.type==\"shrink\" object$shrink.param available, example object$cor.type!=\"shrink\", shrinkage parameter estimated cross-validation using multivariate normal likelihood function (see ridgeParamEst (Warton 2008b)) summary test. Rather stopping testing multivariate effects, often interest find response variables express significant effects. Univariate statistics required answer question, reported requested. Setting p.uni=\"unadjusted\" returns resampling-based univariate P-values effects well multivariate P-values, whereas p.uni=\"adjusted\" returns adjusted P-values (adjusted multiple testing), calculated using step-resampling algorithm Westfall & Young (1993, Algorithm 2.8). method provides strong control family-wise error rates, makes use resampling (using method controlled resamp) ensure inferences take account correlation variables.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/summary.manyglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing Multivariate Generalized Linear Model Fits for Abundance Data — summary.manyglm","text":"summary.manyglm returns object class \"summary.manyglm\", list components call component object. terms terms object used. family component object. deviance component object.  aic Akaike's Information Criterion, minus twice  maximized log-likelihood plus twice number coefficients  (except negative binomial quasipoisson family, assuming  dispersion known). df.residual component object. null.deviance component object. df.null component object. devll minus twice maximized log-likelihood iter number iterations used manyglm estimation model parameters. p.uni supplied argument. nBoot supplied argument. resample supplied argument. na.action na.action used manyglm object, applicable show.residuals supplied argument. show.est supplied argument. compositional logical. Whether test    compositional effects performed.  test supplied argument. cor.type supplied argument. method method used manyglm. Either \"glm.fit\" \"manyglm.fit\" theta.method method used estimation nuisance parameter theta. manyglm.args list control parameters manyglm. rankX rank design matrix. covstat supplied argument. deviance.resid deviance residuals. est estimated model coefficients s.err Scaled Variance shrink.param shrinkage parameter. Either value argument name supplied estimated shrinkage parameter. n.bootsdone number bootstrapping iterations done, .e. error. coefficients matrix coefficients, standard errors,     z-values p-values.  Aliased coefficients omitted. stat.iter argument stat.iter set TRUE  test statistics resampling iterations. statj.iter argument stat.iter set TRUE univariate test statistics resampling iterations. aliased named logical vector showing original coefficients aliased. dispersion either supplied argument inferred/estimated dispersion latter NULL. df 3-vector rank model number residual degrees freedom, plus number non-aliased coefficients. overall.n.bootsdone number bootstrap iterations without errors done overall test statistic table containing test statistics, p values degrees freedom overall test overall.stat.iter argument stat.iter set TRUE test statistics overall tests resampling iterations. overall.statj.iter argument stat.iter set TRUE univariate test statistics overall tests  resampling iterations. cov.unscaled unscaled (dispersion = 1) estimated covariance matrix estimated coefficients. cov.scaled ditto, scaled dispersion. correlation (argument show.cor = TRUE.) estimated correlations estimated coefficients. symbolic.cor (show.cor = TRUE.) value argument symbolic.cor.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/summary.manyglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarizing Multivariate Generalized Linear Model Fits for Abundance Data — summary.manyglm","text":"Warton D.. (2011). Regularized sandwich estimators analysis high dimensional data using generalized estimating equations. Biometrics, 67(1), 116-123. Warton D.. (2008a). Penalized normal likelihood ridge regularization  correlation covariance matrices. Journal American Statistical  Association 103, 340-349. Warton D.. (2008b). Wald statistic?  Choosing parameterisation  Wald statistic maximise power k-sample generalised estimating  equations. Journal Statistical Planning Inference, 138, 3269-3282. Warton D. ., Wright S., Wang, Y. (2012). Distance-based multivariate analyses confound location dispersion effects. Methods Ecology Evolution, 3(1), 89-101. Davison, . C. Hinkley, D. V. (1997) Bootstrap Methods Application, Cambridge University Press, Cambridge. Westfall, P. H. Young, S. S. (1993) Resampling-based multiple testing.  John Wiley & Sons, New York. Wu, C. F. J. (1986) Jackknife, Bootstrap Resampling Methods Regression Analysis. Annals Statistics 14:4, 1261-1295.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/summary.manyglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarizing Multivariate Generalized Linear Model Fits for Abundance Data — summary.manyglm","text":"Yi Wang, David Warton <David.Warton@unsw.edu.au> Ulrike Naumann.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/summary.manyglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing Multivariate Generalized Linear Model Fits for Abundance Data — summary.manyglm","text":"","code":"data(spider) spiddat <- mvabund(spider$abund)  ## Estimate the coefficients of a multivariate glm glm.spid <- manyglm(spiddat[,1:3]~., data=spider$x, family=\"negative.binomial\")  ## Estimate the statistical significance of different multivariate terms in  ## the model, using the default settings of LR test, and 100 PIT-trap resamples summary(glm.spid, show.time=TRUE)  #> \tResampling run 0 finished. Time elapsed: 0.00 min ... #> \tResampling run 100 finished. Time elapsed: 0.00 min ... #> \tResampling run 200 finished. Time elapsed: 0.00 min ... #> \tResampling run 300 finished. Time elapsed: 0.01 min ... #> \tResampling run 400 finished. Time elapsed: 0.01 min ... #> \tResampling run 500 finished. Time elapsed: 0.01 min ... #> \tResampling run 600 finished. Time elapsed: 0.01 min ... #> \tResampling run 700 finished. Time elapsed: 0.02 min ... #> \tResampling run 800 finished. Time elapsed: 0.02 min ... #> \tResampling run 900 finished. Time elapsed: 0.02 min ... #> Time elapsed: 0 hr 0 min 1 sec #>  #> Test statistics: #>               wald value Pr(>wald)   #> (Intercept)        2.378     0.363   #> soil.dry           3.782     0.088 . #> bare.sand          3.452     0.070 . #> fallen.leaves      1.630     0.360   #> moss               1.684     0.643   #> herb.layer         3.966     0.048 * #> reflection         3.641     0.077 . #> ---  #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  #>  #> Test statistic:  11.29, p-value: 0.001  #> Arguments: #>  Test statistics calculated assuming response assumed to be uncorrelated  #>  P-value calculated using 999 resampling iterations via pit.trap resampling (to account for correlation in testing). #>   ## Repeat with the parametric bootstrap and wald statistics  summary(glm.spid, resamp=\"monte.carlo\", test=\"wald\", nBoot=300)  #>  #> Test statistics: #>               wald value Pr(>wald)    #> (Intercept)        2.378   0.10963    #> soil.dry           3.782   0.00664 ** #> bare.sand          3.452   0.00332 ** #> fallen.leaves      1.630   0.31229    #> moss               1.684   0.38870    #> herb.layer         3.966   0.00332 ** #> reflection         3.641   0.00332 ** #> ---  #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  #>  #> Test statistic:  11.29, p-value: 0.00332  #> Arguments: #>  Test statistics calculated assuming response assumed to be uncorrelated  #>  P-value calculated using 300 resampling iterations via monte.carlo resampling (to account for correlation in testing). #>"},{"path":"https://fontikar.github.io/mvabund/reference/summary.manylm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing Linear Model Fits for Multivariate Abundance Data — summary.manylm","title":"Summarizing Linear Model Fits for Multivariate Abundance Data — summary.manylm","text":"summary method class \"manylm\" - computes table  summarising statistical significance different multivariate terms  linear model fitted high-dimensional data, multivariate  abundance data ecology.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/summary.manylm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing Linear Model Fits for Multivariate Abundance Data — summary.manylm","text":"","code":"# S3 method for manylm summary(object, nBoot=999, resamp=\"residual\",     test=\"F\", cor.type=object$cor.type, block=NULL, shrink.param=NULL,     p.uni=\"none\", studentize=TRUE, R2=\"h\", show.cor = FALSE,     show.est=FALSE, show.residuals=FALSE, symbolic.cor=FALSE,     rep.seed=FALSE, tol=1.0e-6, ... )    # S3 method for summary.manylm print(    x, digits = max(getOption(\"digits\") - 3, 3),     signif.stars=getOption(\"show.signif.stars\"),     dig.tst=max(1, min(5, digits - 1)),     eps.Pvalue=.Machine$double.eps, ... )"},{"path":"https://fontikar.github.io/mvabund/reference/summary.manylm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing Linear Model Fits for Multivariate Abundance Data — summary.manylm","text":"object object class \"manylm\", usually, result call manylm. nBoot number Bootstrap iterations, default nBoot=999. resamp method resampling used. Can one \"case\" (yet available),\"residual\" (default), \"perm.resid\", \"score\" \"none\". See Details. test test used. Possible values : \"LR\" = likelihood ratio statistic (default) \"F\" = Lawley-Hotelling trace statistic. Note variables assumed independent (cor.shrink=\"\") \"LR\" equivalent LR-IND \"F\" sum--F statistics Warton & Hudson (2004). cor.type structure imposed estimated correlation matrix fitted model. Can \"\"(default), \"shrink\", \"R\". See Details. block factor specifying sampling level resampled. Default resampling rows. shrink.param shrinkage parameter used cor.type=\"shrink\". supplied, needed, estimated data Cross Validation using normal likelihood Warton (2008). p.uni whether calculate univariate test statistics P-values, , type.  \"none\" = univariate P-values (default)  \"unadjusted\" = test statistic (ordinary unadjusted) P-value reported response variable.  \"adjusted\" = Univariate P-values adjusted multiple testing, using step-resampling procedure. studentize logical, whether studentized residuals residuals beused simulation resampling steps. option used case resampling. R2 type R^2 (correlation coefficient) shown, can one :   \"h\" = Hooper's R^2 = tr(SST^(-1)SSR)/p     \"v\" = vector R^2 = det(SSR)/det(SST)  \"n\" = none show.cor logical, TRUE, correlation matrix estimated parameters returned printed. show.est logical. Whether show estimated model parameters. show.residuals logical. Whether show residuals/residual summary. symbolic.cor logical. TRUE, print correlations symbolic form rather numbers. rep.seed logical. Whether fix random seed resampling data. Useful simulation diagnostic purposes. tol tolerance used estimations. x object class \"summary.manylm\", usually, result call summary.manylm. digits number significant digits use printing. signif.stars logical. TRUE, ‘significance stars’ printed coefficient. dig.tst number digits round estimates model parameters. eps.Pvalue numerical tolerance formatting p values. ... summary.manyglm method, additional arguments including: bootID - matrix integer numbers row specifies bootstrap id's resampling run. bootID supplied, nBoot set number rows bootID. Default NULL. print.summary.manyglm method, optional arguments passed methods. See print.summary.glm details.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/summary.manylm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarizing Linear Model Fits for Multivariate Abundance Data — summary.manylm","text":"summary.manylm function returns table summarising statistical  significance multivariate term specified fitted manylm model.  model term, returns test statistic determined argument  test, P-value calculated resampling rows data using  method determined argument resamp. four possible resampling methods residual-permutation (Anderson Robinson (2001)), score resampling (Wu (1986)), case residual resampling (Davison Hinkley (1997, chapter 6)), involve resampling alternative hypothesis. methods ensure approximately valid inference even correlation variables misspecified, case score resampling, even equal variance assumption linear models invalid. default, studentized residuals (r_i/sqrt(1-h_ii)) used residual score resampling, although raw residuals used via argument studentize=FALSE. resamp=\"none\", p-values calculated, however test statistics returned. specific hypothesis primary interest want test, use anova.manylm function, can resample rows data null hypothesis usually achieves better approximation true significance level. check model assumptions, use plot.manylm. summary.manylm function designed specifically high-dimensional data (, number variables p small compared number observations N). instances correlation matrix computationally intensive estimate numerically unstable, default test statistic calculated assuming independence variables (cor.type=\"\"). Note however resampling scheme used ensures P-values approximately correct even independence assumption satisfied. However computationally feasible dataset, recommended use cor.type=\"shrink\" account correlation variables, cor.type=\"R\" p small. cor.type=\"R\" option uses unstructured correlation matrix (possible N>p), standard classical multivariate test statistics obtained. Note however statistics typically numerically unstable low power p small compared N. cor.type=\"shrink\" option applies ridge regularisation (Warton 2008), shrinking sample correlation matrix towards identity, improves stability p small compared N. provides compromise \"R\" \"\", allowing us account correlation variables, using numerically stable test statistic good properties. shrinkage parameter default estimated cross-validation using multivariate normal likelihood function, although can specified via shrink.param value 0 1 (0=\"\" 1=\"R\", values closer towards 0 indicate shrinkage towards \"\"). validation groups chosen random assignment may observe slight variation estimated shrinkage parameter repeat analyses. See ridgeParamEst details. Rather stopping testing multivariate effects, often interest find response variables express significant effects. Univariate statistics required answer question, reported requested. Setting p.uni=\"unadjusted\" returns resampling-based univariate P-values effects well multivariate P-values, whereas  p.uni=\"adjusted\" returns adjusted P-values (adjusted multiple testing), calculated using step-resampling algorithm Westfall & Young (1993, Algorithm 2.8). method provides strong control family-wise error rates, makes use resampling (using method controlled resample) ensure inferences take account correlation variables. multivariate R^2 value returned output, many ways define multivariate R^2. type R^2 used controlled R2 argument. cor.shrink=\"\" variables assumed independent, special case Hooper's R^2 returns average univariate R^2 values, whereas vector R^2 returns product. print.summary.manylm tries smart formatting coefficients, genVar, etc. additionally gives ‘significance stars’ signif.stars TRUE.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/summary.manylm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing Linear Model Fits for Multivariate Abundance Data — summary.manylm","text":"summary.manylm returns object class \"summary.manyglm\", list components call component object. terms terms object used. show.residuals supplied argument. show.est supplied argument. p.uni supplied argument. test supplied argument. cor.type supplied argument. resample supplied argument. nBoot supplied argument. rankX rank design matrix residuals model residuals genVar estimated generalised variance est estimated model coefficients shrink.param shrinkage parameter. Either value argument name supplied estimated shrinkage parameter. aliased named logical vector showing original coefficients aliased. df 3-vector rank model number residual degrees freedom, plus number non-aliased coefficients. argument test NULL list also included components coefficients matrix containing test statistics p-values. n.iter.sing number iterations skipped due singularity design matrix caused case resampling. furthermore Design matrix neither empty consists Intercept , following adddional components included: r.squared calculated correlation coefficient. R2 character describes type correlation coefficient calculated. statistic matrix containing results overall test. cov.unscaled unscaled (dispersion = 1) estimated covariance matrix estimated coefficients. argument show.cor TRUE following adddional components returned: correlation (p*q) (p*q) correlation matrix, p number columns design matrix q number response variables. Note matrix can big.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/summary.manylm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarizing Linear Model Fits for Multivariate Abundance Data — summary.manylm","text":"Anderson, M.J. J. Robinson (2001). Permutation tests linear models. Australian New Zealand Journal Statistics 43, 75-88. Davison, . C. Hinkley, D. V. (1997) Bootstrap Methods Application. Cambridge University Press, Cambridge. Warton D.. (2008). Penalized normal likelihood ridge regularization  correlation covariance matrices. Journal American Statistical  Association 103, 340-349. Warton D.. Hudson H.M. (2004). MANOVA statistic just powerful distance-based statistics, multivariate abundances.  Ecology 85(3), 858-874. Westfall, P. H. Young, S. S. (1993) Resampling-based multiple  testing. John Wiley & Sons, New York. Wu, C. F. J. (1986) Jackknife, Bootstrap Resampling Methods Regression Analysis. Annals Statistics 14:4, 1261-1295.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/summary.manylm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarizing Linear Model Fits for Multivariate Abundance Data — summary.manylm","text":"Yi Wang, Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/summary.manylm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing Linear Model Fits for Multivariate Abundance Data — summary.manylm","text":"","code":"data(spider) spiddat <- log(spider$abund+1)  ## Estimate the coefficients of a multivariate linear model: fit <- manylm(spiddat~., data=spider$x)  ## To summarise this multivariate fit, using score resampling to ## and F Test statistic to estimate significance: summary(fit, resamp=\"score\", test=\"F\") #>  #> Test statistics: #>               F value Pr(>F)   #> (Intercept)     32.27  0.163   #> soil.dry        83.07  0.011 * #> bare.sand       24.91  0.390   #> fallen.leaves   41.68  0.029 * #> moss            30.43  0.204   #> herb.layer      20.98  0.174   #> reflection      23.77  0.237   #> ---  #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  #> Arguments: with 999 resampling iterations using score resampling and response assumed to be uncorrelated  #>  #> Hooper's R-squared: 0.7173  #>  #> Lawley-Hotelling trace statistic:  124.7, p-value: 0.001  #> Arguments: with 999 resampling iterations using score resampling and response assumed to be uncorrelated  #>   ## Instead using residual permutation with 2000 iteration, using the sum of F  ## statistics to estimate multivariate significance, but also reporting  ## univariate statistics with adjusted P-values: summary(fit, resamp=\"perm.resid\", nBoot=2000, test=\"F\", p.uni=\"adjusted\") #>  #> Test statistics: #>               F value Pr(>F)    #> (Intercept)     32.27 0.0395 *  #> soil.dry        83.07 0.0015 ** #> bare.sand       24.91 0.1009    #> fallen.leaves   41.68 0.0140 *  #> moss            30.43 0.0430 *  #> herb.layer      20.98 0.1449    #> reflection      23.77 0.1154    #> ---  #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  #>  #> Univariate test statistic:  #>          (Intercept)        soil.dry        bare.sand        fallen.leaves #>              F value Pr(>F)  F value Pr(>F)   F value Pr(>F)       F value #> Alopacce       1.131 0.7851    6.543 0.1059     1.419 0.7631         0.487 #> Alopcune       0.700 0.7851    2.868 0.1999     1.114 0.7906         0.064 #> Alopfabr       5.872 0.1894   11.020 0.0425     7.033 0.1299         0.127 #> Arctlute       1.343 0.7851    7.648 0.0845     2.752 0.5217         3.780 #> Arctperi       5.261 0.2214    6.290 0.1059     1.075 0.7906         0.191 #> Auloalbi       0.515 0.7851    1.918 0.1999     0.079 0.9550         1.448 #> Pardlugu      10.792 0.0330    6.241 0.1059     4.262 0.3293         2.750 #> Pardmont       4.406 0.2654    8.327 0.0835     0.003 0.9550         2.370 #> Pardnigr       0.076 0.9330    8.079 0.0835     0.587 0.8396        11.088 #> Pardpull       0.946 0.7851    9.280 0.0640     0.349 0.8956         8.596 #> Trocterr       1.224 0.7851    6.502 0.1059     1.496 0.7631         2.265 #> Zoraspin       0.003 0.9570    8.357 0.0835     4.738 0.2864         8.510 #>                    moss        herb.layer        reflection        #>          Pr(>F) F value Pr(>F)    F value Pr(>F)    F value Pr(>F) #> Alopacce 0.9225   0.551 0.8701      2.015 0.7026      5.673 0.2079 #> Alopcune 0.9690   1.248 0.8016      0.469 0.9410      2.000 0.6642 #> Alopfabr 0.9690   0.027 0.9110      0.093 0.9750      0.081 0.9930 #> Arctlute 0.4128   0.143 0.9110      0.152 0.9750      0.347 0.9810 #> Arctperi 0.9690   2.192 0.6612      2.085 0.7026      2.179 0.6642 #> Auloalbi 0.7131   1.717 0.7081      5.406 0.2319      0.032 0.9930 #> Pardlugu 0.5622   2.355 0.6612      0.116 0.9750      2.845 0.5697 #> Pardmont 0.5742   9.967 0.0425      1.868 0.7026      0.325 0.9810 #> Pardnigr 0.0305   4.031 0.3818      1.598 0.7026      0.712 0.9165 #> Pardpull 0.0765   0.807 0.8701      1.987 0.7026      0.007 0.9930 #> Trocterr 0.5742   6.618 0.1539      2.918 0.5627      0.845 0.9095 #> Zoraspin 0.0765   0.771 0.8701      2.277 0.6847      8.726 0.0755 #>  #> Arguments: with 2000 resampling iterations using residual (without replacement) resampling and response assumed to be uncorrelated  #>  #> Hooper's R-squared: 0.7173  #>  #> Lawley-Hotelling trace statistic:  124.7, p-value: 5e-04  #>  #> Univariate test statistic:  #>         Alopacce Alopcune Alopfabr Arctlute Arctperi Auloalbi Pardlugu Pardmont #> F value   14.369    3.837   16.461    3.508    9.450    6.168   10.508    9.867 #> Pr(>F)    0.0010   0.0245   0.0010   0.0245   0.0020   0.0040   0.0015   0.0020 #>         Pardnigr Pardpull Trocterr Zoraspin #> F value   10.468   11.457   18.450   10.142 #> Pr(>F)    0.0015   0.0015   0.0010   0.0020 #>  #> Arguments: with 2000 resampling iterations using residual (without replacement) resampling and response assumed to be uncorrelated  #>   ## Obtain a summary of test statistics using residual resampling, accounting  ## for correlation between variables but shrinking the correlation matrix to  ## improve its stability and showing univariate p-values: summary(fit, cor.type=\"shrink\", p.uni=\"adjusted\") #>  #> Test statistics: #>               F value Pr(>F)     #> (Intercept)     32.21  0.027 *   #> soil.dry        74.97  0.001 *** #> bare.sand       24.93  0.070 .   #> fallen.leaves   35.70  0.024 *   #> moss            27.69  0.047 *   #> herb.layer      17.79  0.183     #> reflection      23.61  0.073 .   #> ---  #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  #>  #> Univariate test statistic:  #>          (Intercept)        soil.dry        bare.sand        fallen.leaves #>              F value Pr(>F)  F value Pr(>F)   F value Pr(>F)       F value #> Alopacce       1.131  0.766    6.543  0.087     1.419  0.749         0.487 #> Alopcune       0.700  0.766    2.868  0.174     1.114  0.773         0.064 #> Alopfabr       5.872  0.158   11.020  0.030     7.033  0.124         0.127 #> Arctlute       1.343  0.766    7.648  0.071     2.752  0.507         3.780 #> Arctperi       5.261  0.182    6.290  0.087     1.075  0.773         0.191 #> Auloalbi       0.515  0.766    1.918  0.183     0.079  0.946         1.448 #> Pardlugu      10.792  0.034    6.241  0.087     4.262  0.305         2.750 #> Pardmont       4.406  0.246    8.327  0.071     0.003  0.958         2.370 #> Pardnigr       0.076  0.921    8.079  0.071     0.587  0.852        11.088 #> Pardpull       0.946  0.766    9.280  0.053     0.349  0.891         8.596 #> Trocterr       1.224  0.766    6.502  0.087     1.496  0.742         2.265 #> Zoraspin       0.003  0.957    8.357  0.071     4.738  0.271         8.510 #>                    moss        herb.layer        reflection        #>          Pr(>F) F value Pr(>F)    F value Pr(>F)    F value Pr(>F) #> Alopacce  0.924   0.551  0.874      2.015  0.696      5.673  0.198 #> Alopcune  0.965   1.248  0.778      0.469  0.921      2.000  0.673 #> Alopfabr  0.965   0.027  0.917      0.093  0.981      0.081  0.980 #> Arctlute  0.424   0.143  0.917      0.152  0.981      0.347  0.973 #> Arctperi  0.965   2.192  0.661      2.085  0.696      2.179  0.673 #> Auloalbi  0.707   1.717  0.697      5.406  0.238      0.032  0.980 #> Pardlugu  0.568   2.355  0.661      0.116  0.981      2.845  0.571 #> Pardmont  0.578   9.967  0.046      1.868  0.696      0.325  0.973 #> Pardnigr  0.039   4.031  0.380      1.598  0.696      0.712  0.914 #> Pardpull  0.079   0.807  0.874      1.987  0.696      0.007  0.980 #> Trocterr  0.578   6.618  0.149      2.918  0.559      0.845  0.912 #> Zoraspin  0.079   0.771  0.874      2.277  0.672      8.726  0.067 #>  #> Arguments: with 999 resampling iterations using residual resampling and correlation matrix shrunk by parameter 0.41  #>  #> Hooper's R-squared: 0.7173  #>  #> Lawley-Hotelling trace statistic:  113.1, p-value: 0.001  #>  #> Univariate test statistic:  #>         Alopacce Alopcune Alopfabr Arctlute Arctperi Auloalbi Pardlugu Pardmont #> F value   14.369    3.837   16.461    3.508    9.450    6.168   10.508    9.867 #> Pr(>F)     0.001    0.022    0.001    0.022    0.002    0.004    0.002    0.002 #>         Pardnigr Pardpull Trocterr Zoraspin #> F value   10.468   11.457   18.450   10.142 #> Pr(>F)     0.002    0.002    0.001    0.002 #>  #> Arguments: with 999 resampling iterations using residual resampling and correlation matrix shrunk by parameter 0.41  #>"},{"path":"https://fontikar.github.io/mvabund/reference/tikus.html","id":null,"dir":"Reference","previous_headings":"","what":"Tikus Island Dataset — tikus","title":"Tikus Island Dataset — tikus","text":"dataset contains list abundance data species different locations Tikus island explanatory variables.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/tikus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tikus Island Dataset — tikus","text":"","code":"data(tikus)"},{"path":"https://fontikar.github.io/mvabund/reference/tikus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tikus Island Dataset — tikus","text":"list containing elements abund data frame 60 observations different locations  abundances 75 variables, species. See Details. x data frame containing id information Tikus island dataset. data frame 60 observations 2 variables. See Details.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/tikus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tikus Island Dataset — tikus","text":"abundance species measured length (centimetres) 10 metre transect intersected species. tikus list containing elements abund x. data frame abund contains 75 variables, species: Psammocora contigua, Psammocora digitata, Pocillopora damicornis, Pocillopora verrucosa, Stylopora pistillata, Acropora bruegemanni, Acropora robusta, Acropora grandis, Acropora intermedia, Acropora formosa, Acropora splendida, Acropera aspera, Acropora hyacinthus, Acropora palifera, Acropora cytherea, Acropora tenuis, Acropora pulchra, Acropora nasuta, Acropora humilis, Acropora diversa, Acropora digitifera, Acropora divaricata, Acropora subglabra, Acropora cerealis, Acropora valida, Acropora acuminata, Acropora elsevi, Acropora millepora, Montipora monasteriata, Montipora tuberculosa, Montipora hispida, Montipora digitata, Montipora foliosa, Montipora verrucosa, Fungia fungites, Fungia paumotensis, Fungia concina, Fungia scutaria, Halomitra limax, Pavona varians, Pavona venosa, Pavona cactus, Coeloseris mayeri, Galaxea fascicularis, Symphyllia radians, Lobophyllia corymbosa, Lobophyllia hemprichii, Porites cylindrica, Porites lichen, Porites lobata, Porites lutea, Porites nigrescens, Porites solida, Porites stephensoni, Goniopora lobata, Favia pallida, Favia speciosa, Favia stelligera, Favia rotumana, Favites abdita, Favites chinensis, Goniastrea rectiformis, Goniastrea pectinata, Goniastrea sp, Dulophyllia crispa, Platygyra daedalea, Platygyra sinensis, Hydnopora rigida, Leptastrea purpurea, Leptastrea pruinosa, Cyphastrea serailia, Millepora platyphylla, Millepora dichotoma, Millepora intrincata, Heliopora coerulea x following variables: time (factor) year measurement taken. rep (factor) location id.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/tikus.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tikus Island Dataset — tikus","text":"R.M. Warwick, K.R. Clarke Suharsono (1990) statistical analysis coral community responses 19823 El Nino Thousand Islands, Indonesia, Coral Reefs 8, 171179.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/tikus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tikus Island Dataset — tikus","text":"","code":"require(graphics)  data(tikus)  tikusdat <- as.mvabund(tikus$abund) tikusid  <- tikus$x foo  <- mvformula(tikusdat~tikusid[,1] + tikusid[,2]) #> Error in eval(terms(x)[[2]]): object 'tikusdat' not found  plot(foo) #> Error in plot(foo): object 'foo' not found"},{"path":"https://fontikar.github.io/mvabund/reference/traitglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits a fourth corner model for abundance as a function of environmental variables and species traits. — traitglm","title":"Fits a fourth corner model for abundance as a function of environmental variables and species traits. — traitglm","text":"Fits fourth corner model - model study variation environmental response across taxa can explained traits. function use fitting can (pretty well) predictive model, default generalised linear model, another good option add LASSO penalty via glm1path. Can handle overdispersed counts via  family=\"negative.binomial\", default family argument.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/traitglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits a fourth corner model for abundance as a function of environmental variables and species traits. — traitglm","text":"","code":"<!-- %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% %%%%%%%%% --> traitglm(L, R, Q = NULL, family=\"negative.binomial\", formula = NULL, method = \"manyglm\",             composition = FALSE, col.intercepts = TRUE, ...)"},{"path":"https://fontikar.github.io/mvabund/reference/traitglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits a fourth corner model for abundance as a function of environmental variables and species traits. — traitglm","text":"L data frame (matrix) containing abundances taxon (columns) across sites (rows). R data frame (matrix) environmental variables (columns) across sites (rows). Q data frame (matrix) traits (columns) across taxa (rows). specified, different environmental response specified taxon. family family response variable, see family. Negative binomial unknown overdispersion log-link can specified \"negative.binomial\", default. formula one-sided formula specifying exactly model abundance function environmental trait variables (found R Q respectively).  Default include terms additively, quadratics quantitative terms, environment--trait interactions. method function use fit model. Default manyglm, available options glm1path, cv.glm1path LASSO-penalised fits, principle model-fitting function accepts formula input family argument work. composition logical. TRUE includes row effect model, adjusting different sampling intensities across different samples. can understood compositional term sense terms model relative abundance site. FALSE (default) include row effect, hence model absolute abundance. col.intercepts logical. TRUE (default) includes column effect model, adjust different levels abundance different response (column) variables. FALSE removes column effect.    ... Arguments passed function specified method used fit model.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/traitglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fits a fourth corner model for abundance as a function of environmental variables and species traits. — traitglm","text":"function fits fourth corner model, , model predict abundance across several taxa (stored L) function environmental variables (R) traits (Q). environment-trait interaction can understood fourth corner, giving set coefficients describe environmental response across taxa varies traits vary. species effect include model (.e. different intercept term species), traits used explain patterns relative abundance across taxa patterns absolute abundance. actual function used fit model determined user method argument. default use manyglm fit GLM, although predictive modelling, might better use LASSO penalty glm1path cv.glm1path. glm1path, penalty used BIC calculation log(dim(L)[1]), .e. log(number sites). model fitted vectorising L constructing big matrix repeated values R, Q, quadratic terms (required) interactions. Hence function hit memory issues matrices large, can slow (especially using cv.glm1path). formula left unspecified, design matrix constructed using environmental variables traits specified R Q, quadratic terms variables quantitative, environment-trait interactions, standardising variables. Specifying one-sided formula function variables R Q instead give user control precise model fitted, drops internal standardisations. arguments composition col.intercepts optionally add terms model row column total abundance, irrespective whether formula specified. Note: specifying formula, penalties coefficients (manyglm), main effects R can excluded including row effects (via composition=TRUE), main effects Q can excluded including column effects (via col.intercepts=TRUE), terms redundant (trying explain main effects row/column main effects already model). using penalised likelihood (glm1path cv.glm1path) random effects model, means include main effects well row/column effects, penalties sort terms use. trait matrix Q specified, default behaviour fit different environmental response taxon (outcome similar manyglm(L~R)). can understood fourth corner model species identities used species traits (.e. attempt made explain differences across species). functions inherit default behaviour fitting functions. e.g. use plot Dunn-Smyth residual plot traits model fitted using manyglm glm1path.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/traitglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits a fourth corner model for abundance as a function of environmental variables and species traits. — traitglm","text":"Returns traitglm object, list contains least following components: ... Exactly included output depends fitting function - default, manyglm object returned, usual manyglm output included (coefficients, residuals, deviance, etc). family family object matching final model. fourth.corner matrix fourth corner coefficients. formula manually entered, vector matrix. R.des reduced-size design matrix environmental variables, including arguments: X Data frame (possibly standardised) environmental variables X.squ data frame containing leading term quadratic expression (appropriate) environmental variables var.type vector dimension number columns X, listing type ecah enviromental variable (\"quantitative\"\" \"factor\"\") coefs Coefficients used transforming variables orthogonality. used later make predictions. Q.des reduced-size design matrix traits, set R.des. spp.penalty LASSO fits: vector length final design matrix, indicating variables penalty imposed model fitting. L data frame abundances specified input. .penalty Logical, penalty applied parameters (using manyglm fit). scaling list coefficients describing standaridsations variables used analyses. Stored use later making predictions. call original call traitglm call.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/traitglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fits a fourth corner model for abundance as a function of environmental variables and species traits. — traitglm","text":"Brown , Warton DI, Andrew NR, Binns M, Cassis G Gibb H (2014) fourth corner solution - using species traits better understand species traits interact environment, Methods Ecology Evolution 5, 344-352. Warton DI, Shipley B & Hastie T (2015) CATS regression - model-based approach studying trait-based community assembly, Methods Ecology Evolution 6, 389-398.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/traitglm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fits a fourth corner model for abundance as a function of environmental variables and species traits. — traitglm","text":"David . Warton <David.Warton@unsw.edu.au>","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/traitglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fits a fourth corner model for abundance as a function of environmental variables and species traits. — traitglm","text":"","code":"data(antTraits)  ft=traitglm(antTraits$abund,antTraits$env,antTraits$traits,method=\"manyglm\") ft$fourth #print fourth corner terms #>                Bare.ground Canopy.cover Shrub.cover Volume.lying.CWD #> Femur.length  -0.005345114  -0.03372640 -0.08466868      0.166704473 #> No.spines     -0.044762960  -0.05617178 -0.08895730     -0.119947323 #> Pilosity1      0.106170621   0.27895627  0.21017965      0.321139481 #> Pilosity2      0.156827335   0.21664390  0.24303431      0.273490092 #> Pilosity3      0.114907563  -0.06121788  0.14341268      0.198330954 #> Polymorphism1  0.104301092   0.05480562  0.03436300     -0.019276849 #> Polymorphism2  0.049544180   0.03579859  0.03286363     -0.009168761 #> Webers.length  0.088389978   0.08653766 -0.04842004     -0.014818163 #>               Feral.mammal.dung #> Femur.length        -0.02590566 #> No.spines            0.03960764 #> Pilosity1            0.03909514 #> Pilosity2            0.04365594 #> Pilosity3            0.06744810 #> Polymorphism1        0.07903784 #> Polymorphism2        0.02906444 #> Webers.length       -0.05484184  # for a pretty picture of fourth corner coefficients, uncomment the following lines: # library(lattice) # a        = max( abs(ft$fourth.corner) ) # colort   = colorRampPalette(c(\"blue\",\"white\",\"red\"))  # plot.4th = levelplot(t(as.matrix(ft$fourth.corner)), xlab=\"Environmental Variables\", #   ylab=\"Species traits\", col.regions=colort(100), at=seq(-a, a, length=100), #   scales = list( x= list(rot = 45))) # print(plot.4th)  plot(ft) # for a Dunn-smyth residual plot #> Warning: Only the first 1 colors will be used for plotting.  qqnorm(residuals(ft)); abline(c(0,1),col=\"red\") # for a normal quantile plot.   # predict to the first five sites predict(ft,newR=antTraits$env[1:5,]) #>   Amblyopone.australis Aphaenogaster.longiceps Camponotus.cinereus.amperei #> 1            0.2915247               1.6758240                  0.13962680 #> 2            0.2660360               1.2279629                  0.10225500 #> 3            0.6399779               0.4133679                  0.06996261 #> 4            0.7457054               1.1254080                  0.15159501 #> 5            0.6290863               1.1886454                  0.13795845 #>   Camponotus.claripes Camponotus.consobrinus Camponotus.nigriceps #> 1           1.5882815               6.533255            0.6465306 #> 2           0.9992304               3.822428            0.3617245 #> 3           0.5286793               2.085881            0.2068364 #> 4           1.5565875               6.994261            0.7491589 #> 5           1.2202803               4.786304            0.4660317 #>   Camponotus.nigroaeneus Cardiocondyla.nuda.atalanta Crematogaster.sp..A #> 1              0.4324601                   0.4753732           0.6187287 #> 2              0.2952200                   0.5125803           0.5969842 #> 3              0.3230668                   0.2258040           0.2123576 #> 4              0.6981356                   0.2937769           0.3467095 #> 5              0.5016820                   0.5329964           0.5701489 #>   Heteroponera.sp..A Iridomyrmex.bicknelli Iridomyrmex.dromus #> 1           2.752978              4.265484          0.5410132 #> 2           2.736977              5.179754          0.3113038 #> 3           6.248325              2.472491          0.2169202 #> 4           3.560596              5.457475          0.3833169 #> 5           5.951588              5.885929          0.4180185 #>   Iridomyrmex.mjobergi Iridomyrmex.purpureus Iridomyrmex.rufoniger #> 1             4.783734             1.7115656             10.787564 #> 2             3.509257             1.6166375             14.377949 #> 3             3.372523             0.6516344              7.652899 #> 4             3.685605             2.3236480             14.071590 #> 5             5.297098             1.7583146             16.972377 #>   Iridomyrmex.suchieri Iridomyrmex.suchieroides Melophorus.sp..E #> 1             2.260163                0.6497343        0.3398724 #> 2             1.552272                0.9099106        0.2622988 #> 3             1.500275                0.5586519        0.1348947 #> 4             1.849393                0.9237102        0.2737148 #> 5             2.371717                1.1409125        0.3069213 #>   Melophorus.sp..F Melophorus.sp..H Meranoplus.sp..A Monomorium.leae #> 1         2.765283        0.6400440         1.166041        4.624572 #> 2         1.952843        1.4222025         2.220640        4.154987 #> 3         1.092640        0.2184712         0.262674        3.555537 #> 4         2.586227        1.0959581         1.095892        2.940917 #> 5         2.408389        0.9741255         1.326606        5.773649 #>   Monomorium.rothsteini Monomorium.sydneyense Myrmecia.pilosula.complex #> 1              4.038920             0.7488779                 0.3649560 #> 2              3.202697             1.8842534                 0.2176261 #> 3              2.114402             0.4047219                 0.3307302 #> 4              2.261987             0.8872597                 0.5034426 #> 5              4.008355             1.4173703                 0.4202062 #>   Notoncus.capitatus Notoncus.ectatommoides Nylanderia.sp..A Ochetellus.glaber #> 1          0.5225036               2.823612         5.198331         0.4656999 #> 2          0.3876826               4.145781         3.608756         0.4092767 #> 3          0.3731349               0.576125         1.824137         0.3193943 #> 4          0.7014965               3.545182         2.563810         0.2778480 #> 5          0.6126697               2.768897         4.058062         0.5462199 #>   Paraparatrechina.sp..B Pheidole.sp..A Pheidole.sp..B Pheidole.sp..E #> 1              0.6742612      11.530209      0.5418926       5.960516 #> 2              0.5974297      11.990184      0.5360748       6.272317 #> 3              0.5957804       6.302869      0.2560292       2.864701 #> 4              0.4584397       9.015750      0.4055414       4.070264 #> 5              0.8931452      13.730600      0.5909188       6.709783 #>   Pheidole.sp..J Polyrhachis.sp..A Rhytidoponera.metallica.sp..A #> 1      0.2017042        0.33004718                     11.029163 #> 2      0.1807849        0.42340247                      6.937381 #> 3      0.0777551        0.07352097                      4.311108 #> 4      0.1493097        0.32217248                      7.103719 #> 5      0.1923654        0.30566147                      8.723181 #>   Rhytidoponera.sp..B Solenopsis.sp..A Stigmacros.sp..A Tapinoma.sp..A #> 1            2.396689        0.1157554        0.9161827       2.507582 #> 2            2.494886        0.1283362        1.1465768       2.102907 #> 3            0.246794        0.1412504        0.7393362       1.907691 #> 4            2.974164        0.0772906        0.7023465       1.640594 #> 5            1.476929        0.1948736        1.3971389       3.030164 #>   Tetramorium.sp..A #> 1         1.8347039 #> 2         2.3379179 #> 3         0.6370468 #> 4         1.3149427 #> 5         1.9883810  # refit using LASSO and less variables, including row effects and only two interaction terms: ft1=traitglm(antTraits$abund,antTraits$env[,3:4],antTraits$traits[,c(1,3)],       formula=~Shrub.cover:Femur.length+Shrub.cover:Pilosity,composition=TRUE,method=\"glm1path\") ft1$fourth #notice LASSO penalty has one interaction to zero #>                                 coef #> Shrub.cover:Femur.length -0.11073713 #> Shrub.cover:Pilosity1     0.00000000 #> Shrub.cover:Pilosity2     0.04936684 #> Shrub.cover:Pilosity3     0.01561516"},{"path":"https://fontikar.github.io/mvabund/reference/unabund.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove the mvabund Class Attribute — unabund","title":"Remove the mvabund Class Attribute — unabund","text":"Change mvabund object non-mvabund object.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/unabund.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove the mvabund Class Attribute — unabund","text":"","code":"unabund(x)"},{"path":"https://fontikar.github.io/mvabund/reference/unabund.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove the mvabund Class Attribute — unabund","text":"x mvabund object transformed matrix.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/unabund.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove the mvabund Class Attribute — unabund","text":"unabund convert x removes mvabund class attribute.","code":""},{"path":"https://fontikar.github.io/mvabund/reference/unabund.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove the mvabund Class Attribute — unabund","text":"matrix x mvabund object otherwise x .","code":""},{"path":"https://fontikar.github.io/mvabund/reference/unabund.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove the mvabund Class Attribute — unabund","text":"Ulrike Naumann David Warton <David.Warton@unsw.edu.au>.","code":""},{"path":[]},{"path":"https://fontikar.github.io/mvabund/reference/unabund.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove the mvabund Class Attribute — unabund","text":"","code":"## Create an mvabund object: abundances <- as.mvabund(matrix(1:20,5,4))  ## Restore the original object: mat <- unabund(x=abundances) mat #>   X1 X2 X3 X4 #> 1  1  6 11 16 #> 2  2  7 12 17 #> 3  3  8 13 18 #> 4  4  9 14 19 #> 5  5 10 15 20"}]
